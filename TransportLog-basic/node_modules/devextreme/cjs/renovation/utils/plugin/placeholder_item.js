/**
 * DevExtreme (cjs/renovation/utils/plugin/placeholder_item.js)
 * Version: 22.1.6
 * Build date: Tue Oct 18 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
exports.viewFunction = exports.PlaceholderItemProps = exports.PlaceholderItem = void 0;
var _inferno = require("inferno");
var _inferno2 = require("@devextreme/runtime/inferno");
var _context = require("./context");
var _placeholder_item_renderer = require("./placeholder_item_renderer");
var _excluded = ["children", "column", "componentDeps", "componentTypes", "index"];

function _objectWithoutProperties(source, excluded) {
    if (null == source) {
        return {}
    }
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) {
                continue
            }
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) {
                continue
            }
            target[key] = source[key]
        }
    }
    return target
}

function _objectWithoutPropertiesLoose(source, excluded) {
    if (null == source) {
        return {}
    }
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) {
            continue
        }
        target[key] = source[key]
    }
    return target
}

function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];
            for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key]
                }
            }
        }
        return target
    };
    return _extends.apply(this, arguments)
}

function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) {
            descriptor.writable = true
        }
        Object.defineProperty(target, descriptor.key, descriptor)
    }
}

function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) {
        _defineProperties(Constructor.prototype, protoProps)
    }
    if (staticProps) {
        _defineProperties(Constructor, staticProps)
    }
    Object.defineProperty(Constructor, "prototype", {
        writable: false
    });
    return Constructor
}

function _assertThisInitialized(self) {
    if (void 0 === self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
    }
    return self
}

function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass)
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        o.__proto__ = p;
        return o
    };
    return _setPrototypeOf(o, p)
}
var viewFunction = function(_ref) {
    var args = _ref.args,
        currentTemplate = _ref.currentTemplate,
        _ref$props = _ref.props,
        children = _ref$props.children,
        column = _ref$props.column,
        componentDeps = _ref$props.componentDeps,
        componentTypes = _ref$props.componentTypes,
        index = _ref$props.index;
    return (0, _inferno.createFragment)(currentTemplate ? (0, _inferno.createComponentVNode)(2, _placeholder_item_renderer.PlaceholderItemRenderer, {
        deps: args,
        column: column,
        currentTemplate: currentTemplate,
        baseTemplate: function() {
            return (0, _inferno.createComponentVNode)(2, PlaceholderItem, {
                componentTypes: componentTypes,
                componentDeps: componentDeps,
                column: column,
                index: index + 1
            })
        }
    }) : (0, _inferno.createFragment)(children, 0), 0)
};
exports.viewFunction = viewFunction;
var PlaceholderItemProps = {
    componentTypes: Object.freeze([]),
    componentDeps: Object.freeze([]),
    index: 0
};
exports.PlaceholderItemProps = PlaceholderItemProps;
var PlaceholderItem = function(_InfernoComponent) {
    _inheritsLoose(PlaceholderItem, _InfernoComponent);

    function PlaceholderItem(props) {
        var _this;
        _this = _InfernoComponent.call(this, props) || this;
        _this.__getterCache = {};
        _this.state = {
            args: []
        };
        _this.updateArgs = _this.updateArgs.bind(_assertThisInitialized(_this));
        _this.getArgs = _this.getArgs.bind(_assertThisInitialized(_this));
        return _this
    }
    var _proto = PlaceholderItem.prototype;
    _proto.createEffects = function() {
        return [new _inferno2.InfernoEffect(this.updateArgs, [this.props.componentDeps, this.props.index, this.plugins])]
    };
    _proto.updateEffects = function() {
        var _this$_effects$;
        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.componentDeps, this.props.index, this.plugins])
    };
    _proto.updateArgs = function() {
        var _this2 = this;
        var disposers = this.componentDeps.map((function(entity) {
            return _this2.plugins.watch(entity, (function() {
                _this2.setState((function(__state_argument) {
                    return {
                        args: _this2.getArgs()
                    }
                }))
            }))
        }));
        return function() {
            disposers.forEach((function(disposer) {
                return disposer()
            }))
        }
    };
    _proto.getArgs = function() {
        var _this3 = this;
        return this.componentDeps.map((function(entity) {
            return _this3.plugins.getValue(entity)
        }))
    };
    _proto.componentWillUpdate = function(nextProps, nextState, context) {
        _InfernoComponent.prototype.componentWillUpdate.call(this);
        if (this.props.componentDeps !== nextProps.componentDeps || this.props.index !== nextProps.index) {
            this.__getterCache.componentDeps = void 0
        }
    };
    _proto.render = function() {
        var props = this.props;
        return viewFunction({
            props: _extends({}, props),
            args: this.state.args,
            plugins: this.plugins,
            getArgs: this.getArgs,
            currentTemplate: this.currentTemplate,
            componentDeps: this.componentDeps,
            restAttributes: this.restAttributes
        })
    };
    _createClass(PlaceholderItem, [{
        key: "plugins",
        get: function() {
            if ("PluginsContext" in this.context) {
                return this.context.PluginsContext
            }
            return _context.PluginsContext
        }
    }, {
        key: "currentTemplate",
        get: function() {
            var _this4 = this;
            if (this.componentDeps.every((function(entity) {
                    return _this4.plugins.hasValue(entity)
                }))) {
                return this.props.componentTypes[this.props.index]
            }
            return null
        }
    }, {
        key: "componentDeps",
        get: function() {
            var _this5 = this;
            if (void 0 !== this.__getterCache.componentDeps) {
                return this.__getterCache.componentDeps
            }
            return this.__getterCache.componentDeps = null !== (_this5$props$componen = _this5.props.componentDeps[_this5.props.index]) && void 0 !== _this5$props$componen ? _this5$props$componen : [];
            var _this5$props$componen
        }
    }, {
        key: "restAttributes",
        get: function() {
            var _this$props = this.props,
                restProps = (_this$props.children, _this$props.column, _this$props.componentDeps, _this$props.componentTypes, _this$props.index, _objectWithoutProperties(_this$props, _excluded));
            return restProps
        }
    }]);
    return PlaceholderItem
}(_inferno2.InfernoComponent);
exports.PlaceholderItem = PlaceholderItem;
PlaceholderItem.defaultProps = PlaceholderItemProps;
