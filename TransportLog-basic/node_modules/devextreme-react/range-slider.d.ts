/*!
 * devextreme-react
 * Version: 22.1.6
 * Build date: Tue Oct 18 2022
 *
 * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

/// <reference types="react" />
import dxRangeSlider, { Properties } from "devextreme/ui/range_slider";
import { Component as BaseComponent, IHtmlOptions } from "./core/component";
import NestedOption from "./core/nested-option";
declare type IRangeSliderOptions = React.PropsWithChildren<Properties & IHtmlOptions & {
    defaultValue?: any;
    onValueChange?: (value: any) => void;
}>;
declare class RangeSlider extends BaseComponent<React.PropsWithChildren<IRangeSliderOptions>> {
    get instance(): dxRangeSlider;
    protected _WidgetClass: typeof dxRangeSlider;
    protected subscribableOptions: string[];
    protected independentEvents: string[];
    protected _defaults: {
        defaultValue: string;
    };
    protected _expectedChildren: {
        label: {
            optionName: string;
            isCollectionItem: boolean;
        };
        tooltip: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare type IFormatProps = React.PropsWithChildren<{
    currency?: any;
    formatter?: any;
    parser?: any;
    precision?: any;
    type?: any;
    useCurrencyAccountingStyle?: any;
}>;
declare class Format extends NestedOption<IFormatProps> {
    static OptionName: string;
}
declare type ILabelProps = React.PropsWithChildren<{
    format?: any;
    position?: any;
    visible?: any;
}>;
declare class Label extends NestedOption<ILabelProps> {
    static OptionName: string;
    static ExpectedChildren: {
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
declare type ITooltipProps = React.PropsWithChildren<{
    enabled?: any;
    format?: any;
    position?: any;
    showMode?: any;
}>;
declare class Tooltip extends NestedOption<ITooltipProps> {
    static OptionName: string;
    static ExpectedChildren: {
        format: {
            optionName: string;
            isCollectionItem: boolean;
        };
    };
}
export default RangeSlider;
export { RangeSlider, IRangeSliderOptions, Format, IFormatProps, Label, ILabelProps, Tooltip, ITooltipProps };
