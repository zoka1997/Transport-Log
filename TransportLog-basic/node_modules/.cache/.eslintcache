[{"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\index.js":"1","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\App.js":"2","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\services\\auth.service.js":"3","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\Customers.js":"4","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\SupportStatuses.js":"5","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Logout\\Logout.js":"6","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\UserManagment.js":"7","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\Home.js":"8","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\Docks.js":"9","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SignUp\\registration.js":"10","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\LogIn\\Login.js":"11","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\Components\\Navbar\\Navbar.js":"12","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\useCustomerData.js":"13","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\dataStates.js":"14","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\customerService.js":"15","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\UserManagementService.js":"16","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\useUserManagementData.js":"17","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\SupportStatusesService.js":"18","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\useSupportStatusesData.js":"19","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\useData.js":"20","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\homeService.js":"21","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\useDocksData.js":"22","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\docksService.js":"23","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\data.js":"24","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\data.js":"25"},{"size":335,"mtime":1671112339000,"results":"26","hashOfConfig":"27"},{"size":1953,"mtime":1671112339000,"results":"28","hashOfConfig":"27"},{"size":1076,"mtime":1671112339000,"results":"29","hashOfConfig":"27"},{"size":4025,"mtime":1671112339000,"results":"30","hashOfConfig":"27"},{"size":2983,"mtime":1671112339000,"results":"31","hashOfConfig":"27"},{"size":160,"mtime":1671112339000,"results":"32","hashOfConfig":"27"},{"size":4206,"mtime":1671112339000,"results":"33","hashOfConfig":"27"},{"size":7010,"mtime":1671112339000,"results":"34","hashOfConfig":"27"},{"size":2224,"mtime":1671112339000,"results":"35","hashOfConfig":"27"},{"size":3509,"mtime":1671112339000,"results":"36","hashOfConfig":"27"},{"size":2966,"mtime":1671112339000,"results":"37","hashOfConfig":"27"},{"size":3763,"mtime":1671112339000,"results":"38","hashOfConfig":"27"},{"size":633,"mtime":1671112339000,"results":"39","hashOfConfig":"27"},{"size":1856,"mtime":1671112339000,"results":"40","hashOfConfig":"27"},{"size":664,"mtime":1671112339000,"results":"41","hashOfConfig":"27"},{"size":690,"mtime":1671112339000,"results":"42","hashOfConfig":"27"},{"size":747,"mtime":1671112339000,"results":"43","hashOfConfig":"27"},{"size":752,"mtime":1671112339000,"results":"44","hashOfConfig":"27"},{"size":771,"mtime":1671112339000,"results":"45","hashOfConfig":"27"},{"size":535,"mtime":1671286217775,"results":"46","hashOfConfig":"27"},{"size":625,"mtime":1671112339000,"results":"47","hashOfConfig":"27"},{"size":541,"mtime":1671112339000,"results":"48","hashOfConfig":"27"},{"size":620,"mtime":1671112339000,"results":"49","hashOfConfig":"27"},{"size":8477,"mtime":1670510072000,"results":"50","hashOfConfig":"27"},{"size":4446,"mtime":1670932965441,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eqwsri",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\index.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\App.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\services\\auth.service.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\Customers.js",["115"],"import React, {useState} from 'react';\r\nimport \"./Customers.css\"\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Lookup,\r\n  Form,\r\n  \r\n} from 'devextreme-react/data-grid';\r\nimport CheckBox from 'devextreme-react/check-box';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport useCustomerData from './useCustomerData';\r\nimport { states } from '../dataStates';\r\nimport {insertCustomer, updateCustomer,deleteCustomer} from \"./customerService\";\r\n\r\nconst notesEditorOptions = { height: 100 };\r\n\r\nconst Customers = () => {\r\n\r\n  const [checkBoxValue, setCheckBoxValue] = useState(false);\r\n  \r\n  const {customer} = useCustomerData();\r\n  \r\n  console.log(customer ,\"customer\")\r\n\r\nfunction customizeItem(item){\r\n  if (item.dataField === \"FirstName\" || item.dataField === \"LastName\" || item.dataField === \"Country\" || item.dataField === \"City\" ) {\r\n    item.validationRules = [{\r\n        type: \"required\",\r\n        message: \"The value is required\"\r\n    }]\r\n}else if(item.dataField === \"Phone\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"Phone number is required!\"\r\n}]\r\n}else if(item.dataField === \"Address\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"City is required!\"\r\n}]\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nfunction handleAddCustomer(state)\r\n{\r\n  console.log('state')\r\n  console.log(state)\r\n  if(state.changes.length === 0){\r\n    alert(\"You must change value of other field\")\r\n}else{\r\n  \r\n  if(state.changes[0].type === \"insert\")\r\n  {\r\n    const tmp = {...state.changes[0].data, isActive: checkBoxValue}\r\n    insertCustomer(tmp)\r\n  }else if(state.changes[0].type === \"update\"){\r\n    const obj = {...state.changes[0].data, isActive : checkBoxValue}\r\n    console.log('stateedit')\r\n    console.log(obj)\r\n    updateCustomer(obj);\r\n  }else if(state.changes[0].type === \"remove\")\r\n  {\r\n    deleteCustomer(state.changes[0].key);\r\n    console.log('stateDelete')\r\n    console.log(state)\r\n  }\r\n}\r\n \r\n}\r\n\r\n    return (\r\n      <>\r\n      <h2 className='text-center mt-5'>Customer List</h2>\r\n      <div id=\"data-grid-demo\" className='data-grid-demo'>\r\n   \r\n\r\n        <DataGrid\r\n          dataSource={customer}\r\n          keyExpr=\"Id\"\r\n          showBorders={true}\r\n          onSaved={handleAddCustomer}\r\n        >\r\n          <Paging enabled={false} />\r\n\r\n          <Editing\r\n            mode=\"popup\"\r\n            allowUpdating={true}\r\n            allowAdding={true}\r\n            allowDeleting={true}\r\n            >\r\n            <Popup title=\"Create New Customer\" showTitle={true} width={700} height={525}  />\r\n            \r\n            <Form customizeItem={customizeItem}>\r\n              <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"FirstName\" />\r\n                <Item dataField=\"LastName\" />\r\n                <Item dataField=\"Phone\" />  \r\n                <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <CheckBox\r\n                text=\"IsActive\"\r\n                value={checkBoxValue}\r\n                onValueChange={()=>setCheckBoxValue(prev=>!prev)}\r\n            />\r\n            </Item>\r\n              </Item>\r\n              <Item itemType=\"group\" caption=\"Home Address\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"Country\" />\r\n                <Item dataField=\"City\" />\r\n                <Item dataField=\"Address\" />\r\n              </Item>\r\n            </Form>\r\n          </Editing>\r\n          \r\n          <Column dataField=\"Id\" caption=\"ID\" width={270} />\r\n          <Column dataField=\"FirstName\" />\r\n          <Column dataField=\"LastName\" />\r\n          <Column dataField=\"Address\" />\r\n          <Column dataField=\"Country\" width={125}>\r\n          <Lookup\r\n             dataSource={states} \r\n             valueExpr=\"Name\" displayExpr=\"Name\" />\r\n          </Column>\r\n          <Column dataField=\"City\" />\r\n          <Column dataField=\"Phone\" />\r\n          <Column dataField=\"IsActive\" />\r\n         \r\n        </DataGrid>\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Customers;","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\SupportStatuses.js",["116"],"import React from 'react';\r\nimport \"./SupportStatuses.css\"\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Form,\r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport { insertSupportStatuses, updateSupportStatuses, deleteSupportStatuses } from \"./SupportStatusesService\";\r\nimport Usesupportstatusesdata from './useSupportStatusesData';\r\n\r\nconst notesEditorOptions = { height: 100 };\r\n\r\nconst Supportstatuses = () => {\r\n  const {supportStatuses} = Usesupportstatusesdata();\r\n\r\n\r\n  function customizeItem(item) {\r\n    if (item.dataField === \"Name\") {\r\n      item.validationRules = [{\r\n        type: \"required\",\r\n        message: \"The value is required\"\r\n      }]\r\n    } else if (item.dataField === \"Name\") {\r\n      item.validationRules = [{\r\n        type: \"required\",\r\n        message: \"Name is required!\"\r\n      }]\r\n    }\r\n  }\r\n\r\n\r\n  function handleAddSupportStatuses(state) {\r\n    console.log('state')\r\n    console.log(state)\r\n    if (state.changes.length === 0) {\r\n      alert(\"You must change value of other field\")\r\n    } else {\r\n\r\n      if (state.changes[0].type === \"insert\") {\r\n        if(state.changes[0].data.Description === undefined){\r\n          const tmp = {...state.changes[0].data,Description:\"\"}\r\n          insertSupportStatuses(tmp)\r\n        }else{\r\n          const tmp = {...state.changes[0].data}\r\n          insertSupportStatuses(tmp)\r\n        }\r\n      } else if (state.changes[0].type === \"update\") {\r\n        const obj = { ...state.changes[0].data }\r\n        console.log('stateedit')\r\n        console.log(obj)\r\n        updateSupportStatuses(obj);\r\n      } else if (state.changes[0].type === \"remove\") {\r\n        deleteSupportStatuses(state.changes[0].key);\r\n        console.log('stateDelete')\r\n        console.log(state)\r\n      }\r\n    }\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <h2 className='text-center mt-5'>Support Statuses List</h2>\r\n      <div id=\"data-grid-demo\" className='data-grid-demo'>\r\n        <DataGrid\r\n          dataSource={supportStatuses}\r\n          keyExpr=\"Id\"\r\n          showBorders={true}\r\n          onSaved={handleAddSupportStatuses}\r\n        >\r\n          <Paging enabled={false} />\r\n\r\n          <Editing\r\n            mode=\"popup\"\r\n            allowUpdating={true}\r\n            allowAdding={true}\r\n            allowDeleting={true}>\r\n            <Popup title=\"Create New Support Status\" showTitle={true} width={700} height={525} />\r\n            <Form customizeItem={customizeItem}>\r\n              <Item itemType=\"group\" colCount={1} colSpan={1}>\r\n                <Item dataField=\"Name\" />\r\n                <Item dataField=\"Description\" />\r\n              </Item>\r\n            </Form>\r\n          </Editing>\r\n\r\n          <Column dataField=\"Id\" caption=\"Id\" width={300} />\r\n          <Column dataField=\"Name\" width={500} />\r\n          <Column dataField=\"Description\" />\r\n        </DataGrid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Supportstatuses;","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Logout\\Logout.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\UserManagment.js",["117"],"import React, {useState} from 'react';\r\nimport \"./UserManagment.css\"\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Lookup,\r\n  Form,\r\n} from 'devextreme-react/data-grid';\r\nimport CheckBox from 'devextreme-react/check-box';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport { states } from '../dataStates';\r\nimport { insertUserManagement, updateUserManagement, deleteUserManagement } from './UserManagementService'\r\nimport Useusermanagementdata from './useUserManagementData';\r\n\r\nconst notesEditorOptions = { height: 100 };\r\n\r\nconst Usermanagment = () => {\r\n\r\n  const [checkBoxValue, setCheckBoxValue] = useState(false);\r\n  \r\n  const {userManagement} = Useusermanagementdata();\r\n  \r\n  console.log(userManagement ,\"userManagement\")\r\n\r\nfunction customizeItem(item){\r\n  if (item.dataField === \"FirstName\" || item.dataField === \"LastName\" || item.dataField === \"Country\" || item.dataField === \"City\" ) {\r\n    item.validationRules = [{\r\n        type: \"required\",\r\n        message: \"The value is required\"\r\n    }]\r\n}else if(item.dataField === \"Phone\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"Phone number is required!\"\r\n}]\r\n}else if(item.dataField === \"Address\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"City is required!\"\r\n}]\r\n}\r\n}\r\n\r\nfunction handleAddUserManagement(state)\r\n{\r\n  console.log('state')\r\n  console.log(state)\r\n  if(state.changes.length === 0){\r\n    alert(\"You must change value of other field\")\r\n}else{\r\n  \r\n  if(state.changes[0].type === \"insert\")\r\n  {\r\n    const tmp = {...state.changes[0].data, IsActive:checkBoxValue}\r\n    insertUserManagement(tmp)\r\n  }else if(state.changes[0].type === \"update\"){\r\n    const obj = {...state.changes[0].data, IsActive : checkBoxValue}\r\n    console.log('stateedit')\r\n    console.log(obj)\r\n    updateUserManagement(obj);\r\n  }else if(state.changes[0].type === \"remove\")\r\n  {\r\n    deleteUserManagement(state.changes[0].key);\r\n    console.log('stateDelete')\r\n    console.log(state)\r\n  }\r\n}\r\n \r\n \r\n}\r\n  return (\r\n    <>\r\n      <h2 className='text-center mt-5'>UserManagment List</h2>\r\n      <div id=\"data-grid-demo\" className='data-grid-demo'>\r\n   \r\n\r\n        <DataGrid\r\n          dataSource={userManagement}\r\n          keyExpr=\"Id\"\r\n          showBorders={true}\r\n          onSaved={handleAddUserManagement}\r\n        >\r\n          <Paging enabled={false} />\r\n\r\n          <Editing\r\n            mode=\"popup\"\r\n            allowUpdating={true}\r\n            allowAdding={true}\r\n            allowDeleting={true}\r\n            >\r\n            <Popup title=\"Create New Customer\" showTitle={true} width={700} height={525}  />\r\n            \r\n            <Form customizeItem={customizeItem}>\r\n              <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"FirstName\" />\r\n                <Item dataField=\"LastName\" />\r\n                <Item dataField=\"Phone\" /> \r\n                <Item dataField=\"Role\" /> \r\n                <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <CheckBox\r\n                text=\"IsActive\"\r\n                value={checkBoxValue}\r\n                onValueChange={()=>setCheckBoxValue(prev=>!prev)}\r\n            />\r\n            </Item>\r\n              </Item>\r\n              <Item itemType=\"group\" caption=\"Home Address\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"Country\" />\r\n                <Item dataField=\"City\" />\r\n                <Item dataField=\"Address\" />\r\n              </Item>\r\n            </Form>\r\n          </Editing>\r\n          \r\n          <Column dataField=\"Id\" caption=\"ID\" width={270} />\r\n          <Column dataField=\"FirstName\" />\r\n          <Column dataField=\"LastName\" />\r\n          <Column dataField=\"Address\" />\r\n          <Column dataField=\"Country\" width={125}>\r\n          <Lookup\r\n             dataSource={states} \r\n             valueExpr=\"Name\" displayExpr=\"Name\" />\r\n          </Column>\r\n          <Column dataField=\"City\" />\r\n          <Column dataField=\"Phone\" />\r\n          <Column dataField=\"Role\" />\r\n          <Column dataField=\"IsActive\" />\r\n         \r\n        </DataGrid>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Usermanagment;","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\Home.js",["118","119","120","121"]," import {useEffect, useState} from 'react';\r\n import {Week, TimelineViews, TimelineMonth, Day, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject, Agenda } from '@syncfusion/ej2-react-schedule';\r\n import useData from './useData';\r\n import './Home.css'\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport {insertJob,deleteJob, updateJob} from './homeService';\r\nimport axios from 'axios';\r\nimport { Ajax } from '@syncfusion/ej2-base';\r\nimport { DataManager, UrlAdaptor } from '@syncfusion/ej2-data';\r\n\r\n\r\n\r\n\r\n\r\n const Home = () => {\r\n\r\n   const {data} = useData();\r\n\r\n   const customer = data.customers;\r\n   const docks = data.docks;\r\n   const statuses = data.statuses;\r\n   const jobs = data.jobs;\r\n\r\n   console.log()\r\n\r\n\r\nconst [jobData, setJobData] = useState([]);\r\n useEffect(()=>{\r\n  axios.get(\"https://localhost:7034/api/Home/getJobData\")\r\n  .then((res)=>{\r\n    setJobData(res.data)\r\n  })\r\n },[])\r\n\r\n var dataForJob = jobData.map(v => ({\r\n  Id: v.Id,\r\n  Subject: v.Subject ,\r\n  StartTime: v.StartDate,\r\n  EndTime: v.EndDate,\r\n  CustomerId: v.CustomerId,\r\n  NoPallets: v.NoPallets,\r\n  LoadNo:v.LoadNo,\r\n  LoadType: v.LoadType,\r\n  SupportStatusesId:v.SupportStatusesId ,\r\n  DockId: v.DockId,\r\n  }));\r\n\r\n   const fieldsDocks = { value: 'Id', text: 'DockName' };\r\n   const fieldsCustomer = { value: 'Id', text: 'FirstName'};\r\n   const fieldsStatuses = { value: 'Id', text: 'Name' };\r\n\r\nfunction onActionBegin(args){\r\n  if(args.requestType === 'eventCreate') {\r\n    const job = {\r\n      CustomerId: args.addedRecords[0].CustomerId[0],\r\n      SupportStatusesId: args.addedRecords[0].SupportStatusesId[0],\r\n      DockId: args.addedRecords[0].DockId,\r\n      EndDate : args.addedRecords[0].EndTime,\r\n      StartDate: args.addedRecords[0].StartTime,\r\n      NoPallets: parseInt(args.addedRecords[0].NoPallets),\r\n      LoadNo: args.addedRecords[0].LoadNo,\r\n      LoadType: args.addedRecords[0].LoadType,\r\n      Subject:args.addedRecords[0].Subject\r\n    }\r\n    insertJob(job);\r\n  }else if(args.requestType === 'eventChange'){\r\n    const job = {\r\n      Id:args.changedRecords[0].Id,\r\n      CustomerId: args.changedRecords[0].CustomerId[0],\r\n      SupportStatusesId: args.changedRecords[0].SupportStatusesId[0],\r\n      DockId: args.changedRecords[0].DockId,\r\n      EndDate : args.changedRecords[0].EndTime,\r\n      StartDate: args.changedRecords[0].StartTime,\r\n      NoPallets: parseInt(args.changedRecords[0].NoPallets),\r\n      LoadNo: args.changedRecords[0].LoadNo,\r\n      LoadType: args.changedRecords[0].LoadType,\r\n      Subject:args.changedRecords[0].Subject\r\n    }\r\n    console.log(job, 'changed')\r\n     updateJob(job)\r\n  }else if(args.requestType === 'eventRemove'){\r\n    deleteJob(args.deletedRecords[0].Id);\r\n  }\r\n}\r\n\r\n\r\nconst fieldsValidation = {\r\n  subject: { name: 'Subject', validation: { required: true } },\r\n  startTime: { name: 'StartTime', validation: { required: true } },\r\n  endTime: { name: 'EndTime', validation: { required: true } },\r\n  location: { name: 'LoadType', validation: { required: true } },\r\n  DockId: { name: 'DockId', validation: { required: true } },\r\n  CustomerId: { name: 'CustomerId', validation: { required: true } },\r\n  SupportStatusesId: { name: 'SupportStatusesId', validation: { required: true } },\r\n  description: { name: 'LoadNo', validation: { required: true } },\r\n  NoPallets: { name: 'NoPallets', validation: { number: true, max: 5000 } },\r\n\r\n};\r\n\r\nconsole.log(fieldsValidation);\r\n\r\n function editorTemplate(props) {\r\n\r\n       return (props !== undefined && Object.keys(props).length > 0 ? \r\n       <table className=\"custom-event-editor\" style={{ width: '100%', padding: '5' }}><tbody>\r\n\r\n          <tr><td className=\"e-textlabel\">Subject</td><td colSpan={4}>\r\n            <input id=\"Subject\" className=\"e-field e-input ltype\" type=\"text\" name=\"Subject\" style={{ width: '100%' }}/>\r\n          </td></tr>\r\n              <tr><td className=\"e-textlabel\">Start Date</td><td colSpan={4}>\r\n                \r\n            <DateTimePickerComponent format='dd/MM/yyyy hh:mm a' id=\"StartTime\" data-name=\"StartTime\" className=\"e-field\" value={new Date(props.startTime || props.StartTime)}></DateTimePickerComponent>\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">End Date</td><td colSpan={4}>\r\n            <DateTimePickerComponent format='dd/MM/yyyy hh:mm a' id=\"EndTime\" data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)} className=\"e-field\"></DateTimePickerComponent>\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">Dock</td><td colSpan={4}>\r\n            <MultiSelectComponent className=\"e-field dock\" placeholder='Choose owner' data-name=\"DockId\" dataSource={docks} fields={fieldsDocks} onChange={e => console.log(e)}/>\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">Customer</td><td colSpan={4}>\r\n            <MultiSelectComponent className=\"e-field\" placeholder='Choose Customer' data-name=\"CustomerId\" dataSource={customer} fields={fieldsCustomer}  />\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">Status</td><td colSpan={4}>\r\n            <MultiSelectComponent className=\"e-field\" placeholder='Choose Status' data-name=\"SupportStatusesId\" dataSource={statuses} fields={fieldsStatuses}/>\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">Load Type</td><td colSpan={4}>\r\n            <input id=\"LoadType\" className=\"e-field e-input ltype\" type=\"text\" name=\"LoadType\" style={{ width: '100%' }}/>\r\n          </td></tr>\r\n\r\n          <tr><td className=\"e-textlabel\">Load No.</td><td colSpan={4}>\r\n            <input id=\"LoadNo\" className=\"e-field e-input\" type=\"text\" name=\"LoadNo\" style={{ width: '100%' }}/>\r\n          </td></tr>\r\n       \r\n          <tr><td className=\"e-textlabel\">Number of Pallets</td><td colSpan={4}>\r\n            <input id=\"NoPallets\" className=\"e-field e-input\" type=\"number\" name=\"NoPallets\" style={{ width: '100%' }}/>\r\n          </td></tr>\r\n      \r\n          </tbody></table> : <div></div>);\r\n          \r\n        }\r\n\r\n\r\n\r\n  return(\r\n    <ScheduleComponent width='100%' height='90vh' currentView='Week' selectedDate={new Date(2022, 11, 12)} group={{ resources: ['DockName'] }}  showQuickInfo={false} editorTemplate={editorTemplate.bind(this)} actionBegin={onActionBegin.bind(this)} \r\n    eventSettings={{dataSource:dataForJob, fields : fieldsValidation }}>\r\n      <ViewsDirective>\r\n          <ViewDirective option='Day'/>\r\n          <ViewDirective option='Week'/>\r\n          <ViewDirective option='Agenda'/>\r\n      </ViewsDirective>\r\n      <ResourcesDirective>\r\n          <ResourceDirective field='DockId' title='Dock' name='DockName' allowMultiple={true} dataSource={docks} textField='DockName' idField='Id'> </ResourceDirective>\r\n      </ResourcesDirective>\r\n      <Inject services={[Day, Week, TimelineViews, TimelineMonth,Agenda]}/>\r\n    </ScheduleComponent>\r\n  );  \r\n}\r\nexport default Home;\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\Docks.js",["122","123"],"import React, {useState} from 'react';\r\nimport \"./Docks.css\"\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Form,\r\n  \r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport useDocksData from './useDocksData';\r\nimport {insertDocks,updateDocks,deleteDocks} from './docksService';\r\n\r\nconst notesEditorOptions = { height: 100 };\r\n\r\nconst Docks = () => {\r\n\r\n  \r\n  const {docks} = useDocksData();\r\n  \r\n\r\n  function customizeItem(item){\r\n    if (item.dataField === \"DockName\") {\r\n      item.validationRules = [{\r\n          type: \"required\",\r\n          message: \"The value is required\"\r\n      }]\r\n    }\r\n  }\r\n\r\n\r\n\r\nfunction handleAddDocks(state)\r\n{\r\n  console.log('state')\r\n  console.log(state)\r\n  if(state.changes.length === 0){\r\n    alert(\"You must change value of other field\")\r\n}else{\r\n  \r\n  if(state.changes[0].type === \"insert\")\r\n  {\r\n    insertDocks(state.changes[0].data);\r\n\r\n  }else if(state.changes[0].type === \"update\"){\r\n    updateDocks(state.changes[0].data)\r\n  }else if(state.changes[0].type === \"remove\")\r\n  {\r\n   deleteDocks(state.changes[0].key)\r\n  }\r\n}\r\n \r\n}\r\n\r\n    return (\r\n      <>\r\n      <h2 className='text-center mt-5'>Customer List</h2>\r\n      <div id=\"data-grid-demo\" className='data-grid-demo'>\r\n   \r\n\r\n        <DataGrid\r\n          dataSource={docks}\r\n          keyExpr=\"Id\"\r\n          showBorders={true}\r\n          onSaved={handleAddDocks}\r\n        >\r\n          <Paging enabled={false} />\r\n\r\n          <Editing\r\n            mode=\"popup\"\r\n            allowUpdating={true}\r\n            allowAdding={true}\r\n            allowDeleting={true}\r\n            >\r\n            <Popup title=\"Create New Customer\" showTitle={true} width={700} height={525}  />\r\n            \r\n            <Form customizeItem={customizeItem}>\r\n              <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"DockName\" />\r\n              </Item>\r\n            \r\n            </Form>\r\n          </Editing>\r\n          \r\n          <Column dataField=\"Id\" caption=\"ID\" width={270} />\r\n          <Column dataField=\"DockName\" />\r\n \r\n        </DataGrid>\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Docks;\r\n\r\n\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SignUp\\registration.js",["124"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './registration.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form } from 'react-bootstrap';\r\nimport Feedback from 'react-bootstrap/esm/Feedback';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Registrationform = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [validated, setValidated] = useState(false);\r\n\r\n\r\n  const handleNameChange = (value) => {\r\n    setName(value);\r\n  };\r\n\r\n  const handlePasswordChange = (value) => {\r\n    setpassword(value);\r\n  };\r\n\r\n  const handleEmailChange = (value) => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleSave = (e) => {\r\n    const data = {\r\n      UserName: name,\r\n      Password: password,\r\n      Email: email\r\n    };\r\n    e.preventDefault();\r\n    try {\r\n      const form = e.currentTarget;\r\n      if (form.checkValidity() === false) {\r\n        e.stopPropagation();\r\n      }\r\n      setValidated(true);\r\n      const url = \"https://localhost:7034/api/Authenticate/register\"\r\n      axios.post(url, data).then((result) => {\r\n        toast.success(\"User is successfully logged in\");\r\n      }).catch((error) => {\r\n        toast.error(\"User was not successfully logged in\");\r\n        \r\n\r\n      })\r\n    }finally{\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"Regi-form-container\">\r\n      <Form noValidate validated={validated} className=\"Regi-form\" onSubmit={handleSave}>\r\n        <div className=\"Regi-form-content\">\r\n          <h3 className=\"Regi-form-title\">Registration User</h3>\r\n          <div className=\"form-group mt-3\">\r\n            <label>User name</label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"User name\"\r\n              onChange={(e) => handleNameChange(e.target.value)}\r\n            />\r\n            <Feedback>Data is valid!</Feedback>\r\n            <Feedback type=\"invalid\">\r\n              Please insert username.\r\n            </Feedback>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Password</label>\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => handlePasswordChange(e.target.value)}\r\n            />\r\n            <Feedback>Data is valid!</Feedback>\r\n            <Feedback type=\"invalid\">\r\n              Please insert password.\r\n            </Feedback>\r\n          </div>\r\n          <div className=\"form-group mt-3\">\r\n            <label>Email address</label>\r\n            <input\r\n              required\r\n              type=\"email\"\r\n              className=\"form-control mt-1\"\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => handleEmailChange(e.target.value)}\r\n            />\r\n            <Feedback>Data is valid!</Feedback>\r\n            <Feedback type=\"invalid\">\r\n              Please insert email.\r\n            </Feedback>\r\n          </div>\r\n          <div className=\"pt-3\">\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n          <p className=\"forgot-password text-center mt-4\">\r\n            <a href=\"/login\">Back</a>\r\n          </p>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registrationform;","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\LogIn\\Login.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\Components\\Navbar\\Navbar.js",["125"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    navigate(\"/login\");\r\n    window.location.reload();\r\n  };\r\n\r\n  $(document).on(\"click\", \".navbar-nav li a\", function (e) {\r\n    //This removes the `active` class from all `a`\r\n    $(\".navbar-nav li a\").removeClass(\"active\");\r\n\r\n    //This adds the `active` class to the `a` that was clicked on\r\n    $(this).addClass(\"active\");\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-mainbg\">\r\n        <div className=\"brad\">\r\n          <NavLink className=\"navbar-brand navbar-logo\" to=\"/home\">\r\n            <img\r\n              src=\"truck.png\"\r\n              style={{ width: \"33px\", height: \"33px\", marginRight: \"10px\" }}\r\n            />\r\n            Transport Log\r\n          </NavLink>\r\n        </div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <i className=\"fas fa-bars text-white\"></i>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <div className=\"hori-selector\">\r\n              <div className=\"left\"></div>\r\n              <div className=\"right\"></div>\r\n            </div>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/home\">\r\n                <i className=\"fas fa-tachometer-alt\"></i>Home\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/usermanagment\">\r\n                <i className=\"far fa-address-book\"></i>User Managment\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                <i className=\"far fa-clone\"></i>Customers\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/supportstatuses\">\r\n                <i className=\"far fa-copy\"></i>Support Statuses\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/docks\">\r\n                <i className=\"far fa-copy\"></i>Docks\r\n              </NavLink>\r\n            </li>\r\n            {currentUser ? (\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link logout-nav\"\r\n                  to=\"/logout\"\r\n                  onClick={logOut}\r\n                >\r\n                  <Button variant=\"secondary\">\r\n                    <i className=\"far fa-copy\"></i>Logout\r\n                  </Button>\r\n                </NavLink>\r\n              </li>\r\n            ) : (\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  <i className=\"far fa-copy\"></i>Login\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\useCustomerData.js",["126","127"],"import axios from \"axios\";\r\nimport { json } from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst API_URL = \"https://localhost:7034/api/Customers\";\r\n\r\nconst useCustomerData = () => {\r\n\r\nconst[customer, setCustomers] = useState([]);\r\n\r\nconst getCustomers = () =>{\r\n    axios.get(`${API_URL}/getCustomers`)\r\n        .then((json)=> {\r\n            console.log(json)\r\n            setCustomers(json.data)\r\n        })\r\n        .catch((error)=>{\r\n        console.log(error);\r\n        })\r\n   }\r\n\r\n   useEffect(()=> getCustomers(), [])\r\n   return{customer}\r\n}\r\n\r\nexport default useCustomerData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\dataStates.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Customers\\customerService.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\UserManagementService.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\UserManagment\\useUserManagementData.js",["128"],"import axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst API_URL = \"https://localhost:7034/api/UserManagement\";\r\n\r\nconst Useusermanagementdata = () => {\r\n        const[userManagement, setUserManagement] = useState([]);\r\n\r\n        const getUserManagement = () =>{\r\n            axios.get(`${API_URL}/getUserManagement`)\r\n                .then((json)=> {\r\n                    console.log(json)\r\n                    setUserManagement(json.data)\r\n                })\r\n                .catch((error)=>{\r\n                console.log(error);\r\n                })\r\n           }\r\n        \r\n           useEffect(()=> getUserManagement(), [])\r\n           return{userManagement}\r\n        }\r\n\r\nexport default Useusermanagementdata;\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\SupportStatusesService.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\SupportStatuses\\useSupportStatusesData.js",["129"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst API_URL = \"https://localhost:7034/api/SupportStatuses\";\r\n\r\nconst Usesupportstatusesdata = () => {\r\n    const[supportStatuses, setSupportStatuses] = useState([]);\r\n\r\n        const getSupportStatuses = () =>{\r\n            axios.get(`${API_URL}/getSupportStatuses`)\r\n                .then((json)=> {\r\n                    console.log(json)\r\n                    setSupportStatuses(json.data)\r\n                })\r\n                .catch((error)=>{\r\n                console.log(error);\r\n                })\r\n           }\r\n        \r\n           useEffect(()=> getSupportStatuses(), [])\r\n           return{supportStatuses}\r\n        }\r\n\r\nexport default Usesupportstatusesdata;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\useData.js",["130"],"import axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst API_URL = \"https://localhost:7034/api/Home\";\r\n\r\n\r\nconst useData = () => {\r\n\r\nconst[data, setData] = useState([]);\r\n\r\n\r\n\r\nconst getData = () =>{\r\n    axios.get(`${API_URL}/getHomeData`)\r\n        .then((json)=> {\r\n            console.log(json)\r\n            setData(json.data)\r\n        })\r\n        .catch((error)=>{\r\n        console.log(error);\r\n        })\r\n   }\r\n   \r\n   useEffect(()=> getData(),[])\r\n   return{data}\r\n}\r\n\r\nexport default useData;\r\n\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\homeService.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\useDocksData.js",["131"],"import axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst API_URL = \"https://localhost:7034/api/Docks\";\r\n\r\nconst useDocksData = () => {\r\n\r\nconst[docks, setDocks] = useState([]);\r\n\r\nconst getDocks = () =>{\r\n    axios.get(`${API_URL}/getDocks`)\r\n        .then((json)=> {\r\n            console.log(json)\r\n            setDocks(json.data)\r\n        })\r\n        .catch((error)=>{\r\n        console.log(error);\r\n        })\r\n   }\r\n\r\n   useEffect(()=> getDocks(), [])\r\n   return{docks}\r\n}\r\n\r\nexport default useDocksData;\r\n\r\n","C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Docks\\docksService.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\data.js",[],"C:\\Users\\Zoran\\source\\repos\\TransportApp\\TransportLog-basic\\src\\pages\\Home\\data.js",[],["132","133"],{"ruleId":"134","severity":1,"message":"135","line":19,"column":7,"nodeType":"136","messageId":"137","endLine":19,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":15,"column":7,"nodeType":"136","messageId":"137","endLine":15,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":18,"column":7,"nodeType":"136","messageId":"137","endLine":18,"endColumn":25},{"ruleId":"134","severity":1,"message":"138","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":14},{"ruleId":"134","severity":1,"message":"139","line":10,"column":10,"nodeType":"136","messageId":"137","endLine":10,"endColumn":21},{"ruleId":"134","severity":1,"message":"140","line":10,"column":23,"nodeType":"136","messageId":"137","endLine":10,"endColumn":33},{"ruleId":"134","severity":1,"message":"141","line":23,"column":10,"nodeType":"136","messageId":"137","endLine":23,"endColumn":14},{"ruleId":"134","severity":1,"message":"142","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":16,"column":7,"nodeType":"136","messageId":"137","endLine":16,"endColumn":25},{"ruleId":"134","severity":1,"message":"143","line":14,"column":9,"nodeType":"136","messageId":"137","endLine":14,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":39,"column":13,"nodeType":"146","endLine":42,"endColumn":15},{"ruleId":"134","severity":1,"message":"147","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"148","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"134","severity":1,"message":"148","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":13},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},"no-unused-vars","'notesEditorOptions' is assigned a value but never used.","Identifier","unusedVar","'Ajax' is defined but never used.","'DataManager' is defined but never used.","'UrlAdaptor' is defined but never used.","'jobs' is assigned a value but never used.","'useState' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'json' is defined but never used.","'React' is defined but never used.","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-global-assign","no-unsafe-negation"]