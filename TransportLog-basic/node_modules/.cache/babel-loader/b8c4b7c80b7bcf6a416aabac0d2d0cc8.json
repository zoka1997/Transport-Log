{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDefined, isObject, isFunction } from \"../../core/utils/type\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport browser from \"../../core/utils/browser\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nimport { getPublicElement } from \"../../core/element\";\nimport { normalizeDataSourceOptions } from \"../../data/data_source/utils\";\nimport { normalizeKeyName } from \"../../events/utils/index\";\nvar {\n  isWrapped: isWrapped\n} = variableWrapper;\nimport \"../text_box\";\nimport \"../number_box\";\nimport \"../check_box\";\nimport \"../select_box\";\nimport \"../date_box\";\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\n\nvar EditorFactoryMixin = function () {\n  var getResultConfig = function (config, options) {\n    return extend(config, {\n      readOnly: options.readOnly,\n      placeholder: options.placeholder,\n      inputAttr: {\n        id: options.id\n      },\n      tabIndex: options.tabIndex\n    }, options.editorOptions);\n  };\n\n  var checkEnterBug = function () {\n    return browser.mozilla || devices.real().ios;\n  };\n\n  var getTextEditorConfig = function (options) {\n    var data = {};\n    var isEnterBug = checkEnterBug();\n    var sharedData = options.sharedData || data;\n    return getResultConfig({\n      placeholder: options.placeholder,\n      width: options.width,\n      value: options.value,\n      onValueChanged: function (e) {\n        var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\n        var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\n\n        var updateValue = function (e, notFireEvent) {\n          options && options.setValue(e.value, notFireEvent);\n        };\n\n        clearTimeout(data.valueChangeTimeout);\n\n        if (isInputOrKeyUpEvent && needDelayedUpdate) {\n          sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout(function () {\n            updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout);\n          }, isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0);\n        } else {\n          updateValue(e);\n        }\n      },\n      onKeyDown: function (e) {\n        if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\n          eventsEngine.trigger($(e.component._input()), \"change\");\n        }\n      },\n      valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\n    }, options);\n  };\n\n  var prepareBooleanEditor = function (options) {\n    if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\n      prepareSelectBox(extend(options, {\n        lookup: {\n          displayExpr: function (data) {\n            if (true === data) {\n              return options.trueText || \"true\";\n            } else if (false === data) {\n              return options.falseText || \"false\";\n            }\n          },\n          dataSource: [true, false]\n        }\n      }));\n    } else {\n      !function (options) {\n        options.editorName = \"dxCheckBox\";\n        options.editorOptions = getResultConfig({\n          elementAttr: {\n            id: options.id\n          },\n          value: isDefined(options.value) ? options.value : void 0,\n          hoverStateEnabled: !options.readOnly,\n          focusStateEnabled: !options.readOnly,\n          activeStateEnabled: false,\n          onValueChanged: function (e) {\n            options.setValue && options.setValue(e.value, e);\n          }\n        }, options);\n      }(options);\n    }\n  };\n\n  function prepareSelectBox(options) {\n    var lookup = options.lookup;\n    var displayGetter;\n    var dataSource;\n    var postProcess;\n    var isFilterRow = \"filterRow\" === options.parentType;\n\n    if (lookup) {\n      displayGetter = compileGetter(lookup.displayExpr);\n      dataSource = lookup.dataSource;\n\n      if (isFunction(dataSource) && !isWrapped(dataSource)) {\n        dataSource = dataSource(options.row || {});\n        !function (options) {\n          if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\n            var editorOptions = options.editorOptions || {};\n            options.editorOptions = editorOptions;\n            var selectBox;\n            var onInitialized = editorOptions.onInitialized;\n\n            editorOptions.onInitialized = function (e) {\n              onInitialized && onInitialized.apply(this, arguments);\n              selectBox = e.component;\n              selectBox.on(\"disposing\", stopWatch);\n            };\n\n            var dataSource;\n            var stopWatch = options.row.watch(() => {\n              dataSource = options.lookup.dataSource(options.row);\n              return dataSource && dataSource.filter;\n            }, () => {\n              selectBox.option(\"dataSource\", dataSource);\n            }, row => {\n              options.row = row;\n            });\n          }\n        }(options);\n      }\n\n      if (isObject(dataSource) || Array.isArray(dataSource)) {\n        dataSource = normalizeDataSourceOptions(dataSource);\n\n        if (isFilterRow) {\n          postProcess = dataSource.postProcess;\n\n          dataSource.postProcess = function (items) {\n            if (0 === this.pageIndex()) {\n              items = items.slice(0);\n              items.unshift(null);\n            }\n\n            if (postProcess) {\n              return postProcess.call(this, items);\n            }\n\n            return items;\n          };\n        }\n      }\n\n      var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\n      options.editorName = \"dxSelectBox\";\n      options.editorOptions = getResultConfig({\n        searchEnabled: true,\n        value: options.value,\n        valueExpr: options.lookup.valueExpr,\n        searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\n        allowClearing: allowClearing,\n        showClearButton: allowClearing,\n        displayExpr: function (data) {\n          if (null === data) {\n            return options.showAllText;\n          }\n\n          return displayGetter(data);\n        },\n        dataSource: dataSource,\n        onValueChanged: function (e) {\n          var params = [e.value];\n          !isFilterRow && params.push(e.component.option(\"text\"));\n          options.setValue.apply(this, params);\n        }\n      }, options);\n    }\n  }\n\n  return {\n    createEditor: function ($container, options) {\n      options.cancel = false;\n      options.editorElement = getPublicElement($container);\n\n      if (!isDefined(options.tabIndex)) {\n        options.tabIndex = this.option(\"tabIndex\");\n      }\n\n      if (options.lookup) {\n        prepareSelectBox(options);\n      } else {\n        switch (options.dataType) {\n          case \"date\":\n          case \"datetime\":\n            !function (options) {\n              options.editorName = \"dxDateBox\";\n              options.editorOptions = getResultConfig({\n                value: options.value,\n                onValueChanged: function (args) {\n                  options.setValue(args.value);\n                },\n                onKeyDown: function (_ref) {\n                  var {\n                    component: component,\n                    event: event\n                  } = _ref;\n                  var useMaskBehavior = component.option(\"useMaskBehavior\");\n\n                  if ((checkEnterBug() || useMaskBehavior) && \"enter\" === normalizeKeyName(event)) {\n                    component.blur();\n                    component.focus();\n                  }\n                },\n                displayFormat: options.format,\n                type: options.dataType,\n                dateSerializationFormat: null,\n                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\n              }, options);\n            }(options);\n            break;\n\n          case \"boolean\":\n            prepareBooleanEditor(options);\n            break;\n\n          case \"number\":\n            !function (options) {\n              var config = getTextEditorConfig(options);\n              config.value = isDefined(options.value) ? options.value : null;\n              options.editorName = \"dxNumberBox\";\n              options.editorOptions = config;\n            }(options);\n            break;\n\n          default:\n            !function (options) {\n              var config = getTextEditorConfig(options);\n              var isSearching = \"searchPanel\" === options.parentType;\n\n              if (options.editorType && \"dxTextBox\" !== options.editorType) {\n                config.value = options.value;\n              } else {\n                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\");\n              }\n\n              var value;\n              config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\n              config.mode = config.mode || (isSearching ? \"search\" : \"text\");\n              options.editorName = \"dxTextBox\";\n              options.editorOptions = config;\n            }(options);\n        }\n      }\n\n      if (\"dataRow\" === options.parentType && options.editorType) {\n        options.editorName = options.editorType;\n      }\n\n      this.executeAction(\"onEditorPreparing\", options);\n\n      if (options.cancel) {\n        return;\n      }\n\n      if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\n        options.editorOptions.showValidationMark = false;\n      }\n\n      !function (that, options) {\n        var $editorElement = $(options.editorElement);\n\n        if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\n          if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\n            if (!options.isOnForm) {\n              $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\n              $editorElement.parent().addClass(EDITOR_INLINE_BLOCK);\n            }\n          }\n\n          that._createComponent($editorElement, options.editorName, options.editorOptions);\n\n          if (\"dxDateBox\" === options.editorName) {\n            var dateBox = $editorElement.dxDateBox(\"instance\");\n\n            var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\n\n            dateBox.registerKeyHandler(\"enter\", e => {\n              if (dateBox.option(\"opened\")) {\n                defaultEnterKeyHandler(e);\n              }\n\n              return true;\n            });\n          }\n\n          if (\"dxTextArea\" === options.editorName) {\n            $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", function (event) {\n              if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\n                event.stopPropagation();\n              }\n            });\n          }\n        }\n      }(this, options);\n      this.executeAction(\"onEditorPrepared\", options);\n    }\n  };\n}();\n\nexport default EditorFactoryMixin;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js"],"names":["$","eventsEngine","isDefined","isObject","isFunction","variableWrapper","compileGetter","browser","extend","devices","getPublicElement","normalizeDataSourceOptions","normalizeKeyName","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","config","options","readOnly","placeholder","inputAttr","id","tabIndex","editorOptions","checkEnterBug","mozilla","real","ios","getTextEditorConfig","data","isEnterBug","sharedData","width","value","onValueChanged","e","needDelayedUpdate","parentType","isInputOrKeyUpEvent","event","type","updateValue","notFireEvent","setValue","clearTimeout","valueChangeTimeout","setTimeout","updateValueTimeout","onKeyDown","trigger","component","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","lookup","displayExpr","trueText","falseText","dataSource","editorName","elementAttr","hoverStateEnabled","focusStateEnabled","activeStateEnabled","displayGetter","postProcess","isFilterRow","row","watch","selectBox","onInitialized","apply","arguments","on","stopWatch","filter","option","Array","isArray","items","pageIndex","slice","unshift","call","allowClearing","Boolean","searchEnabled","valueExpr","searchExpr","showClearButton","showAllText","params","push","createEditor","$container","cancel","editorElement","dataType","args","_ref","useMaskBehavior","blur","focus","displayFormat","format","dateSerializationFormat","isSearching","editorType","toString","mode","executeAction","isOnForm","showValidationMark","that","$editorElement","addClass","addWidgetPrefix","parent","_createComponent","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","ctrlKey","shiftKey","stopPropagation"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(_ref) {\r\n                                    var {\r\n                                        component: component,\r\n                                        event: event\r\n                                    } = _ref;\r\n                                    var useMaskBehavior = component.option(\"useMaskBehavior\");\r\n                                    if ((checkEnterBug() || useMaskBehavior) && \"enter\" === normalizeKeyName(event)) {\r\n                                        component.blur();\r\n                                        component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n"]},"metadata":{},"sourceType":"module"}