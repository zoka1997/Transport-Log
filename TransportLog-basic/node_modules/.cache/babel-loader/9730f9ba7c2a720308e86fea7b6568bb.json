{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { each } from \"../../core/utils/iterator\";\nimport modules from \"./ui.grid_core.modules\";\nvar ERROR_ROW_CLASS = \"dx-error-row\";\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\nvar ACTION_CLASS = \"action\";\nvar ErrorHandlingController = modules.ViewController.inherit({\n  init: function () {\n    this._columnHeadersView = this.getView(\"columnHeadersView\");\n    this._rowsView = this.getView(\"rowsView\");\n  },\n  _createErrorRow: function (error, $tableElements) {\n    var that = this;\n    var $errorRow;\n    var $closeButton;\n\n    var $errorMessage = this._renderErrorMessage(error);\n\n    if ($tableElements) {\n      $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\n      $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\n      eventsEngine.on($closeButton, clickEventName, that.createAction(function (args) {\n        var e = args.event;\n        var $errorRow;\n        var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\n        e.stopPropagation();\n        each($tableElements, function (_, tableElement) {\n          $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\n          that.removeErrorRow($errorRow);\n        });\n        that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction();\n      }));\n      $(\"<td>\").attr({\n        colSpan: that.getController(\"columns\").getVisibleColumns().length,\n        role: \"presentation\"\n      }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\n      return $errorRow;\n    }\n\n    return $errorMessage;\n  },\n  _renderErrorMessage: function (error) {\n    var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\n    var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\n\n    if (error.url) {\n      $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message);\n    }\n\n    return $message;\n  },\n  renderErrorRow: function (error, rowIndex, $popupContent) {\n    var that = this;\n    var $errorMessageElement;\n    var $firstErrorRow;\n\n    if ($popupContent) {\n      $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\n      $errorMessageElement = that._createErrorRow(error);\n      $popupContent.prepend($errorMessageElement);\n      return $errorMessageElement;\n    }\n\n    var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\n    var $tableElements = viewElement.getTableElements();\n    each($tableElements, function (_, tableElement) {\n      $errorMessageElement = that._createErrorRow(error, $tableElements);\n      $firstErrorRow = $firstErrorRow || $errorMessageElement;\n\n      if (rowIndex >= 0) {\n        var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\n\n        that.removeErrorRow($row.next());\n        $errorMessageElement.insertAfter($row);\n      } else {\n        var $tbody = $(tableElement).children(\"tbody\");\n        var rowElements = $tbody.children(\"tr\");\n\n        if (that._columnHeadersView.isVisible()) {\n          that.removeErrorRow(rowElements.last());\n          $(tableElement).append($errorMessageElement);\n        } else {\n          that.removeErrorRow(rowElements.first());\n          $tbody.first().prepend($errorMessageElement);\n        }\n      }\n    });\n    var resizingController = that.getController(\"resizing\");\n    resizingController && resizingController.fireContentReadyAction();\n    return $firstErrorRow;\n  },\n  removeErrorRow: function ($row) {\n    if (!$row) {\n      var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\n\n      $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\n\n      if (!$row || !$row.length) {\n        var $rowsViewElement = this._rowsView.element();\n\n        $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS);\n      }\n    }\n\n    $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove();\n  },\n  optionChanged: function (args) {\n    switch (args.name) {\n      case \"errorRowEnabled\":\n        args.handled = true;\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nexport var errorHandlingModule = {\n  defaultOptions: function () {\n    return {\n      errorRowEnabled: true\n    };\n  },\n  controllers: {\n    errorHandling: ErrorHandlingController\n  },\n  extenders: {\n    controllers: {\n      data: {\n        init: function () {\n          var that = this;\n          var errorHandlingController = that.getController(\"errorHandling\");\n          that.callBase();\n          that.dataErrorOccurred.add(function (error, $popupContent) {\n            if (that.option(\"errorRowEnabled\")) {\n              errorHandlingController.renderErrorRow(error, void 0, $popupContent);\n            }\n          });\n          that.changed.add(function (e) {\n            if (e && \"loadError\" === e.changeType) {\n              return;\n            }\n\n            var errorHandlingController = that.getController(\"errorHandling\");\n            var editingController = that.getController(\"editing\");\n\n            if (editingController && !editingController.hasChanges()) {\n              errorHandlingController && errorHandlingController.removeErrorRow();\n            }\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js"],"names":["$","eventsEngine","name","clickEventName","each","modules","ERROR_ROW_CLASS","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","ViewController","inherit","init","_columnHeadersView","getView","_rowsView","_createErrorRow","error","$tableElements","that","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","addClass","addWidgetPrefix","on","createAction","args","e","event","errorRowIndex","currentTarget","closest","index","stopPropagation","_","tableElement","children","eq","removeErrorRow","getController","fireContentReadyAction","attr","colSpan","getVisibleColumns","length","role","prepend","append","appendTo","message","url","replace","$message","text","renderErrorRow","rowIndex","$popupContent","$errorMessageElement","$firstErrorRow","find","remove","viewElement","isVisible","getTableElements","$row","_getRowElements","next","insertAfter","$tbody","rowElements","last","first","resizingController","$columnHeaders","element","$rowsViewElement","hasClass","optionChanged","handled","callBase","errorHandlingModule","defaultOptions","errorRowEnabled","controllers","errorHandling","extenders","data","errorHandlingController","dataErrorOccurred","add","option","changed","changeType","editingController","hasChanges"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}