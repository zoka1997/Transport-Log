{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/base/widgetObserver.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Widget from \"../../widget/ui.widget\";\n\nclass WidgetObserver extends Widget {\n  notifyObserver(subject, args) {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      observer.fire(subject, args);\n    }\n  }\n\n  invoke() {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      return observer.fire.apply(observer, arguments);\n    }\n  }\n\n}\n\nexport default WidgetObserver;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/base/widgetObserver.js"],"names":["Widget","WidgetObserver","notifyObserver","subject","args","observer","option","fire","invoke","apply","arguments"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,wBAAnB;;AACA,MAAMC,cAAN,SAA6BD,MAA7B,CAAoC;AAChCE,EAAAA,cAAc,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAC1B,QAAIC,QAAQ,GAAG,KAAKC,MAAL,CAAY,UAAZ,CAAf;;AACA,QAAID,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACE,IAAT,CAAcJ,OAAd,EAAuBC,IAAvB;AACH;AACJ;;AACDI,EAAAA,MAAM,GAAG;AACL,QAAIH,QAAQ,GAAG,KAAKC,MAAL,CAAY,UAAZ,CAAf;;AACA,QAAID,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,IAAT,CAAcE,KAAd,CAAoBJ,QAApB,EAA8BK,SAA9B,CAAP;AACH;AACJ;;AAZ+B;;AAcpC,eAAeT,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/base/widgetObserver.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../../widget/ui.widget\";\r\nclass WidgetObserver extends Widget {\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n}\r\nexport default WidgetObserver;\r\n"]},"metadata":{},"sourceType":"module"}