{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 22.1.6\n * Build date: Tue Oct 18 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsManager = exports.scheduleGuards = exports.unscheduleGuards = void 0;\n/* eslint-disable no-restricted-globals */\n\nvar comparer_1 = require(\"./configuration/comparer\");\n\nvar tree_1 = require(\"./configuration/tree\");\n\nvar utils_1 = require(\"./configuration/utils\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar optionsManagers = new Set();\nvar guardTimeoutHandler = -1;\n\nfunction unscheduleGuards() {\n  clearTimeout(guardTimeoutHandler);\n}\n\nexports.unscheduleGuards = unscheduleGuards;\n\nfunction scheduleGuards() {\n  unscheduleGuards();\n  guardTimeoutHandler = window.setTimeout(function () {\n    optionsManagers.forEach(function (optionManager) {\n      return optionManager.execGuards();\n    });\n  });\n}\n\nexports.scheduleGuards = scheduleGuards;\n\nvar OptionsManager =\n/** @class */\nfunction () {\n  function OptionsManager(templatesManager) {\n    this.guards = {};\n    this.isUpdating = false;\n    this.templatesManager = templatesManager;\n    optionsManagers.add(this);\n    this.onOptionChanged = this.onOptionChanged.bind(this);\n    this.wrapOptionValue = this.wrapOptionValue.bind(this);\n  }\n\n  OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\n    this.instance = instance;\n    this.currentConfig = config;\n    this.subscribableOptions = new Set(subscribableOptions);\n    this.independentEvents = new Set(independentEvents);\n  };\n\n  OptionsManager.prototype.getInitialOptions = function (rootNode) {\n    var _this = this;\n\n    var config = tree_1.buildConfig(rootNode, false);\n    Object.keys(config.templates).forEach(function (key) {\n      _this.templatesManager.add(key, config.templates[key]);\n    });\n    var options = {};\n    Object.keys(config.options).forEach(function (key) {\n      options[key] = _this.wrapOptionValue(key, config.options[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      options.integrationOptions = {\n        templates: this.templatesManager.templates\n      };\n    }\n\n    return options;\n  };\n\n  OptionsManager.prototype.update = function (config) {\n    var _this = this;\n\n    var changedOptions = [];\n\n    var optionChangedHandler = function (_a) {\n      var value = _a.value,\n          fullName = _a.fullName;\n      changedOptions.push([fullName, value]);\n    };\n\n    this.instance.on('optionChanged', optionChangedHandler);\n    var changes = comparer_1.getChanges(config, this.currentConfig);\n\n    if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n      return;\n    }\n\n    this.instance.beginUpdate();\n    this.isUpdating = true;\n    changes.removedOptions.forEach(function (optionName) {\n      _this.resetOption(optionName);\n    });\n    Object.keys(changes.templates).forEach(function (key) {\n      _this.templatesManager.add(key, changes.templates[key]);\n    });\n\n    if (this.templatesManager.templatesCount > 0) {\n      this.setValue('integrationOptions', {\n        templates: this.templatesManager.templates\n      });\n    }\n\n    Object.keys(changes.options).forEach(function (key) {\n      _this.setValue(key, changes.options[key]);\n    });\n    this.isUpdating = false;\n    this.instance.off('optionChanged', optionChangedHandler);\n    this.currentConfig = config;\n    changedOptions.forEach(function (_a) {\n      var name = _a[0],\n          value = _a[1];\n      var currentPropValue = config.options[name];\n\n      if (Object.prototype.hasOwnProperty.call(config.options, name) && currentPropValue !== value) {\n        _this.setValue(name, currentPropValue);\n      }\n    });\n    this.instance.endUpdate();\n  };\n\n  OptionsManager.prototype.onOptionChanged = function (e) {\n    var _this = this;\n\n    var _a;\n\n    if (this.isUpdating) {\n      return;\n    }\n\n    var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor || valueDescriptor.value !== e.value) {\n      this.callOptionChangeHandler(e.fullName, e.value);\n    }\n\n    valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n\n    if (!valueDescriptor) {\n      return;\n    }\n\n    var value = valueDescriptor.value,\n        type = valueDescriptor.type;\n\n    if (value instanceof Array && type === tree_1.ValueType.Array) {\n      for (var i = 0; i < value.length; i += 1) {\n        if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\n          this.addGuard(e.fullName, value);\n          return;\n        }\n      }\n    } else if (type === tree_1.ValueType.Complex && value instanceof Object) {\n      Object.keys(value).forEach(function (key) {\n        var _a;\n\n        if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\n          return;\n        }\n\n        _this.addGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n      });\n    } else {\n      var valuesAreEqual = value === e.value;\n      var valuesAreEqualObjects = !valuesAreEqual && value instanceof Object && e.value instanceof Object && utils_1.shallowEquals(value, e.value);\n\n      if (valuesAreEqual || valuesAreEqualObjects || this.instance.skipOptionsRollBack) {\n        return;\n      }\n\n      this.addGuard(e.fullName, value);\n    }\n  };\n\n  OptionsManager.prototype.dispose = function () {\n    var _this = this;\n\n    optionsManagers.delete(this);\n    Object.keys(this.guards).forEach(function (optionName) {\n      delete _this.guards[optionName];\n    });\n  };\n\n  OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n    return this.subscribableOptions.has(optionName);\n  };\n\n  OptionsManager.prototype.isIndependentEvent = function (optionName) {\n    return this.independentEvents.has(optionName);\n  };\n\n  OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n    if (!this.isOptionSubscribable(optionName)) {\n      return;\n    }\n\n    var parts = optionName.split('.');\n    var propName = parts[parts.length - 1];\n\n    if (propName.startsWith('on')) {\n      return;\n    }\n\n    var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n    parts[parts.length - 1] = eventName;\n    var changeEvent = tree_1.findValue(this.currentConfig, parts);\n\n    if (!changeEvent) {\n      return;\n    }\n\n    if (typeof changeEvent.value !== 'function') {\n      throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n    }\n\n    changeEvent.value(optionValue);\n  };\n\n  OptionsManager.prototype.wrapOptionValue = function (name, value) {\n    var _this = this;\n\n    if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        if (!_this.isUpdating || _this.isIndependentEvent(name)) {\n          value.apply(void 0, args);\n        }\n      };\n    }\n\n    return value;\n  };\n\n  OptionsManager.prototype.addGuard = function (optionName, optionValue) {\n    var _this = this;\n\n    if (this.guards[optionName] !== undefined) {\n      return;\n    }\n\n    var handler = function () {\n      _this.setValue(optionName, optionValue);\n\n      delete _this.guards[optionName];\n    };\n\n    this.guards[optionName] = handler;\n    scheduleGuards();\n  };\n\n  OptionsManager.prototype.execGuards = function () {\n    Object.values(this.guards).forEach(function (handler) {\n      return handler();\n    });\n  };\n\n  OptionsManager.prototype.resetOption = function (name) {\n    this.instance.resetOption(name);\n  };\n\n  OptionsManager.prototype.setValue = function (name, value) {\n    if (this.guards[name]) {\n      delete this.guards[name];\n    }\n\n    this.instance.option(name, this.wrapOptionValue(name, value));\n  };\n\n  return OptionsManager;\n}();\n\nexports.OptionsManager = OptionsManager;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme-react/core/options-manager.js"],"names":["Object","defineProperty","exports","value","OptionsManager","scheduleGuards","unscheduleGuards","comparer_1","require","tree_1","utils_1","helpers_1","optionsManagers","Set","guardTimeoutHandler","clearTimeout","window","setTimeout","forEach","optionManager","execGuards","templatesManager","guards","isUpdating","add","onOptionChanged","bind","wrapOptionValue","prototype","setInstance","instance","config","subscribableOptions","independentEvents","currentConfig","getInitialOptions","rootNode","_this","buildConfig","keys","templates","key","options","templatesCount","integrationOptions","update","changedOptions","optionChangedHandler","_a","fullName","push","on","changes","getChanges","removedOptions","length","beginUpdate","optionName","resetOption","setValue","off","name","currentPropValue","hasOwnProperty","call","endUpdate","e","valueDescriptor","findValue","split","callOptionChangeHandler","type","Array","ValueType","i","addGuard","Complex","mergeNameParts","valuesAreEqual","valuesAreEqualObjects","shallowEquals","skipOptionsRollBack","dispose","delete","isOptionSubscribable","has","isIndependentEvent","optionValue","parts","propName","startsWith","eventName","capitalizeFirstLetter","changeEvent","Error","substr","args","_i","arguments","apply","undefined","handler","values","option"],"mappings":"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","sourcesContent":["/*!\n * devextreme-react\n * Version: 22.1.6\n * Build date: Tue Oct 18 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsManager = exports.scheduleGuards = exports.unscheduleGuards = void 0;\n/* eslint-disable no-restricted-globals */\nvar comparer_1 = require(\"./configuration/comparer\");\nvar tree_1 = require(\"./configuration/tree\");\nvar utils_1 = require(\"./configuration/utils\");\nvar helpers_1 = require(\"./helpers\");\nvar optionsManagers = new Set();\nvar guardTimeoutHandler = -1;\nfunction unscheduleGuards() {\n    clearTimeout(guardTimeoutHandler);\n}\nexports.unscheduleGuards = unscheduleGuards;\nfunction scheduleGuards() {\n    unscheduleGuards();\n    guardTimeoutHandler = window.setTimeout(function () {\n        optionsManagers.forEach(function (optionManager) { return optionManager.execGuards(); });\n    });\n}\nexports.scheduleGuards = scheduleGuards;\nvar OptionsManager = /** @class */ (function () {\n    function OptionsManager(templatesManager) {\n        this.guards = {};\n        this.isUpdating = false;\n        this.templatesManager = templatesManager;\n        optionsManagers.add(this);\n        this.onOptionChanged = this.onOptionChanged.bind(this);\n        this.wrapOptionValue = this.wrapOptionValue.bind(this);\n    }\n    OptionsManager.prototype.setInstance = function (instance, config, subscribableOptions, independentEvents) {\n        this.instance = instance;\n        this.currentConfig = config;\n        this.subscribableOptions = new Set(subscribableOptions);\n        this.independentEvents = new Set(independentEvents);\n    };\n    OptionsManager.prototype.getInitialOptions = function (rootNode) {\n        var _this = this;\n        var config = tree_1.buildConfig(rootNode, false);\n        Object.keys(config.templates).forEach(function (key) {\n            _this.templatesManager.add(key, config.templates[key]);\n        });\n        var options = {};\n        Object.keys(config.options).forEach(function (key) {\n            options[key] = _this.wrapOptionValue(key, config.options[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            options.integrationOptions = {\n                templates: this.templatesManager.templates,\n            };\n        }\n        return options;\n    };\n    OptionsManager.prototype.update = function (config) {\n        var _this = this;\n        var changedOptions = [];\n        var optionChangedHandler = function (_a) {\n            var value = _a.value, fullName = _a.fullName;\n            changedOptions.push([fullName, value]);\n        };\n        this.instance.on('optionChanged', optionChangedHandler);\n        var changes = comparer_1.getChanges(config, this.currentConfig);\n        if (!changes.options && !changes.templates && !changes.removedOptions.length) {\n            return;\n        }\n        this.instance.beginUpdate();\n        this.isUpdating = true;\n        changes.removedOptions.forEach(function (optionName) {\n            _this.resetOption(optionName);\n        });\n        Object.keys(changes.templates).forEach(function (key) {\n            _this.templatesManager.add(key, changes.templates[key]);\n        });\n        if (this.templatesManager.templatesCount > 0) {\n            this.setValue('integrationOptions', {\n                templates: this.templatesManager.templates,\n            });\n        }\n        Object.keys(changes.options).forEach(function (key) {\n            _this.setValue(key, changes.options[key]);\n        });\n        this.isUpdating = false;\n        this.instance.off('optionChanged', optionChangedHandler);\n        this.currentConfig = config;\n        changedOptions.forEach(function (_a) {\n            var name = _a[0], value = _a[1];\n            var currentPropValue = config.options[name];\n            if (Object.prototype.hasOwnProperty.call(config.options, name)\n                && currentPropValue !== value) {\n                _this.setValue(name, currentPropValue);\n            }\n        });\n        this.instance.endUpdate();\n    };\n    OptionsManager.prototype.onOptionChanged = function (e) {\n        var _this = this;\n        var _a;\n        if (this.isUpdating) {\n            return;\n        }\n        var valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor || valueDescriptor.value !== e.value) {\n            this.callOptionChangeHandler(e.fullName, e.value);\n        }\n        valueDescriptor = tree_1.findValue(this.currentConfig, e.fullName.split('.'));\n        if (!valueDescriptor) {\n            return;\n        }\n        var value = valueDescriptor.value, type = valueDescriptor.type;\n        if (value instanceof Array && type === tree_1.ValueType.Array) {\n            for (var i = 0; i < value.length; i += 1) {\n                if (value[i] !== ((_a = e.value) === null || _a === void 0 ? void 0 : _a[i])) {\n                    this.addGuard(e.fullName, value);\n                    return;\n                }\n            }\n        }\n        else if (type === tree_1.ValueType.Complex && value instanceof Object) {\n            Object.keys(value).forEach(function (key) {\n                var _a;\n                if (value[key] === ((_a = e.value) === null || _a === void 0 ? void 0 : _a[key])) {\n                    return;\n                }\n                _this.addGuard(utils_1.mergeNameParts(e.fullName, key), value[key]);\n            });\n        }\n        else {\n            var valuesAreEqual = value === e.value;\n            var valuesAreEqualObjects = !valuesAreEqual\n                && value instanceof Object\n                && e.value instanceof Object\n                && utils_1.shallowEquals(value, e.value);\n            if (valuesAreEqual || valuesAreEqualObjects || this.instance.skipOptionsRollBack) {\n                return;\n            }\n            this.addGuard(e.fullName, value);\n        }\n    };\n    OptionsManager.prototype.dispose = function () {\n        var _this = this;\n        optionsManagers.delete(this);\n        Object.keys(this.guards).forEach(function (optionName) {\n            delete _this.guards[optionName];\n        });\n    };\n    OptionsManager.prototype.isOptionSubscribable = function (optionName) {\n        return this.subscribableOptions.has(optionName);\n    };\n    OptionsManager.prototype.isIndependentEvent = function (optionName) {\n        return this.independentEvents.has(optionName);\n    };\n    OptionsManager.prototype.callOptionChangeHandler = function (optionName, optionValue) {\n        if (!this.isOptionSubscribable(optionName)) {\n            return;\n        }\n        var parts = optionName.split('.');\n        var propName = parts[parts.length - 1];\n        if (propName.startsWith('on')) {\n            return;\n        }\n        var eventName = \"on\" + helpers_1.capitalizeFirstLetter(propName) + \"Change\";\n        parts[parts.length - 1] = eventName;\n        var changeEvent = tree_1.findValue(this.currentConfig, parts);\n        if (!changeEvent) {\n            return;\n        }\n        if (typeof changeEvent.value !== 'function') {\n            throw new Error(\"Invalid value for the \" + eventName + \" property.\\n                \" + eventName + \" must be a function.\");\n        }\n        changeEvent.value(optionValue);\n    };\n    OptionsManager.prototype.wrapOptionValue = function (name, value) {\n        var _this = this;\n        if (name.substr(0, 2) === 'on' && typeof value === 'function') {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                if (!_this.isUpdating || _this.isIndependentEvent(name)) {\n                    value.apply(void 0, args);\n                }\n            };\n        }\n        return value;\n    };\n    OptionsManager.prototype.addGuard = function (optionName, optionValue) {\n        var _this = this;\n        if (this.guards[optionName] !== undefined) {\n            return;\n        }\n        var handler = function () {\n            _this.setValue(optionName, optionValue);\n            delete _this.guards[optionName];\n        };\n        this.guards[optionName] = handler;\n        scheduleGuards();\n    };\n    OptionsManager.prototype.execGuards = function () {\n        Object.values(this.guards)\n            .forEach(function (handler) { return handler(); });\n    };\n    OptionsManager.prototype.resetOption = function (name) {\n        this.instance.resetOption(name);\n    };\n    OptionsManager.prototype.setValue = function (name, value) {\n        if (this.guards[name]) {\n            delete this.guards[name];\n        }\n        this.instance.option(name, this.wrapOptionValue(name, value));\n    };\n    return OptionsManager;\n}());\nexports.OptionsManager = OptionsManager;\n"]},"metadata":{},"sourceType":"script"}