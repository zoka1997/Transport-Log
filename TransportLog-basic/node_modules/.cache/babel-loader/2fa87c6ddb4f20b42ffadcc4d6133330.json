{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../../../../core/utils/date\";\nimport { getViewStartByOptions, setOptionHour } from \"./base\";\nimport { getValidStartDate } from \"./week\";\nvar SATURDAY_INDEX = 6;\nvar SUNDAY_INDEX = 0;\nvar MONDAY_INDEX = 1;\nvar DAYS_IN_WEEK = 7;\nexport var isDataOnWeekend = date => {\n  var day = date.getDay();\n  return day === SATURDAY_INDEX || day === SUNDAY_INDEX;\n};\nexport var getWeekendsCount = days => 2 * Math.floor(days / 7);\nexport var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeek) => {\n  var viewStart = getViewStartByOptions(startDate, currentDate, intervalDuration, getValidStartDate(startDate, firstDayOfWeek));\n  var firstViewDate = dateUtils.getFirstWeekDate(viewStart, firstDayOfWeek);\n\n  if (isDataOnWeekend(firstViewDate)) {\n    var currentDay = firstViewDate.getDay();\n    var distance = (MONDAY_INDEX + DAYS_IN_WEEK - currentDay) % 7;\n    firstViewDate.setDate(firstViewDate.getDate() + distance);\n  }\n\n  return setOptionHour(firstViewDate, startDayHour);\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js"],"names":["dateUtils","getViewStartByOptions","setOptionHour","getValidStartDate","SATURDAY_INDEX","SUNDAY_INDEX","MONDAY_INDEX","DAYS_IN_WEEK","isDataOnWeekend","date","day","getDay","getWeekendsCount","days","Math","floor","calculateStartViewDate","currentDate","startDayHour","startDate","intervalDuration","firstDayOfWeek","viewStart","firstViewDate","getFirstWeekDate","currentDay","distance","setDate","getDate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,sCAAtB;AACA,SACIC,qBADJ,EAEIC,aAFJ,QAGO,QAHP;AAIA,SACIC,iBADJ,QAEO,QAFP;AAGA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,OAAO,IAAIC,eAAe,GAAGC,IAAI,IAAI;AACjC,MAAIC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;AACA,SAAOD,GAAG,KAAKN,cAAR,IAA0BM,GAAG,KAAKL,YAAzC;AACH,CAHM;AAIP,OAAO,IAAIO,gBAAgB,GAAGC,IAAI,IAAI,IAAIC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,CAAlB,CAAnC;AACP,OAAO,IAAIG,sBAAsB,GAAG,CAACC,WAAD,EAAcC,YAAd,EAA4BC,SAA5B,EAAuCC,gBAAvC,EAAyDC,cAAzD,KAA4E;AAC5G,MAAIC,SAAS,GAAGrB,qBAAqB,CAACkB,SAAD,EAAYF,WAAZ,EAAyBG,gBAAzB,EAA2CjB,iBAAiB,CAACgB,SAAD,EAAYE,cAAZ,CAA5D,CAArC;AACA,MAAIE,aAAa,GAAGvB,SAAS,CAACwB,gBAAV,CAA2BF,SAA3B,EAAsCD,cAAtC,CAApB;;AACA,MAAIb,eAAe,CAACe,aAAD,CAAnB,EAAoC;AAChC,QAAIE,UAAU,GAAGF,aAAa,CAACZ,MAAd,EAAjB;AACA,QAAIe,QAAQ,GAAG,CAACpB,YAAY,GAAGC,YAAf,GAA8BkB,UAA/B,IAA6C,CAA5D;AACAF,IAAAA,aAAa,CAACI,OAAd,CAAsBJ,aAAa,CAACK,OAAd,KAA0BF,QAAhD;AACH;;AACD,SAAOxB,aAAa,CAACqB,aAAD,EAAgBL,YAAhB,CAApB;AACH,CATM","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../../../../../core/utils/date\";\r\nimport {\r\n    getViewStartByOptions,\r\n    setOptionHour\r\n} from \"./base\";\r\nimport {\r\n    getValidStartDate\r\n} from \"./week\";\r\nvar SATURDAY_INDEX = 6;\r\nvar SUNDAY_INDEX = 0;\r\nvar MONDAY_INDEX = 1;\r\nvar DAYS_IN_WEEK = 7;\r\nexport var isDataOnWeekend = date => {\r\n    var day = date.getDay();\r\n    return day === SATURDAY_INDEX || day === SUNDAY_INDEX\r\n};\r\nexport var getWeekendsCount = days => 2 * Math.floor(days / 7);\r\nexport var calculateStartViewDate = (currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeek) => {\r\n    var viewStart = getViewStartByOptions(startDate, currentDate, intervalDuration, getValidStartDate(startDate, firstDayOfWeek));\r\n    var firstViewDate = dateUtils.getFirstWeekDate(viewStart, firstDayOfWeek);\r\n    if (isDataOnWeekend(firstViewDate)) {\r\n        var currentDay = firstViewDate.getDay();\r\n        var distance = (MONDAY_INDEX + DAYS_IN_WEEK - currentDay) % 7;\r\n        firstViewDate.setDate(firstViewDate.getDate() + distance)\r\n    }\r\n    return setOptionHour(firstViewDate, startDayHour)\r\n};\r\n"]},"metadata":{},"sourceType":"module"}