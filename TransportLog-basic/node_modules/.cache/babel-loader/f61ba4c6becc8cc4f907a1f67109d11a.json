{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\nimport { getViewStartByOptions } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { formatWeekdayAndDay } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { VIEWS } from \"../constants\";\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\n\nclass SchedulerTimelineMonth extends SchedulerTimeline {\n  get type() {\n    return VIEWS.TIMELINE_MONTH;\n  }\n\n  get viewDirection() {\n    return \"horizontal\";\n  }\n\n  get renovatedHeaderPanelComponent() {\n    return dxrDateHeader;\n  }\n\n  _renderView() {\n    super._renderView();\n\n    this._updateScrollable();\n  }\n\n  _getElementClass() {\n    return TIMELINE_CLASS;\n  }\n\n  _getDateHeaderTemplate() {\n    return this.option(\"dateCellTemplate\");\n  }\n\n  _calculateDurationInCells(timeDiff) {\n    return timeDiff / this.getCellDuration();\n  }\n\n  isIndicatorVisible() {\n    return true;\n  }\n\n  _getFormat() {\n    return formatWeekdayAndDay;\n  }\n\n  _getIntervalBetween(currentDate) {\n    var firstViewDate = this.getStartViewDate();\n    var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n    return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset;\n  }\n\n  _getViewStartByOptions() {\n    return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")));\n  }\n\n  generateRenderOptions() {\n    var options = super.generateRenderOptions(true);\n    return _extends({}, options, {\n      getDateForHeaderText: (_, date) => date\n    });\n  }\n\n}\n\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\nexport default SchedulerTimelineMonth;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js"],"names":["_extends","registerComponent","SchedulerTimeline","dateUtils","dxrDateHeader","getViewStartByOptions","formatWeekdayAndDay","VIEWS","TIMELINE_CLASS","SchedulerTimelineMonth","type","TIMELINE_MONTH","viewDirection","renovatedHeaderPanelComponent","_renderView","_updateScrollable","_getElementClass","_getDateHeaderTemplate","option","_calculateDurationInCells","timeDiff","getCellDuration","isIndicatorVisible","_getFormat","_getIntervalBetween","currentDate","firstViewDate","getStartViewDate","timeZoneOffset","getTimezonesDifference","getTime","_getViewStartByOptions","getFirstMonthDate","generateRenderOptions","options","getDateForHeaderText","_","date"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,wEAA1B;AACA,SACIC,qBADJ,QAEO,uEAFP;AAGA,SACIC,mBADJ,QAEO,sEAFP;AAGA,SACIC,KADJ,QAEO,cAFP;AAGA,IAAIC,cAAc,GAAG,6BAArB;;AACA,MAAMC,sBAAN,SAAqCP,iBAArC,CAAuD;AAC3C,MAAJQ,IAAI,GAAG;AACP,WAAOH,KAAK,CAACI,cAAb;AACH;;AACgB,MAAbC,aAAa,GAAG;AAChB,WAAO,YAAP;AACH;;AACgC,MAA7BC,6BAA6B,GAAG;AAChC,WAAOT,aAAP;AACH;;AACDU,EAAAA,WAAW,GAAG;AACV,UAAMA,WAAN;;AACA,SAAKC,iBAAL;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,WAAOR,cAAP;AACH;;AACDS,EAAAA,sBAAsB,GAAG;AACrB,WAAO,KAAKC,MAAL,CAAY,kBAAZ,CAAP;AACH;;AACDC,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAChC,WAAOA,QAAQ,GAAG,KAAKC,eAAL,EAAlB;AACH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,WAAO,IAAP;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAOjB,mBAAP;AACH;;AACDkB,EAAAA,mBAAmB,CAACC,WAAD,EAAc;AAC7B,QAAIC,aAAa,GAAG,KAAKC,gBAAL,EAApB;AACA,QAAIC,cAAc,GAAGzB,SAAS,CAAC0B,sBAAV,CAAiCH,aAAjC,EAAgDD,WAAhD,CAArB;AACA,WAAOA,WAAW,CAACK,OAAZ,MAAyBJ,aAAa,CAACI,OAAd,KAA0B,OAAO,KAAKZ,MAAL,CAAY,cAAZ,CAA1D,IAAyFU,cAAhG;AACH;;AACDG,EAAAA,sBAAsB,GAAG;AACrB,WAAO1B,qBAAqB,CAAC,KAAKa,MAAL,CAAY,WAAZ,CAAD,EAA2B,KAAKA,MAAL,CAAY,aAAZ,CAA3B,EAAuD,KAAKA,MAAL,CAAY,eAAZ,CAAvD,EAAqFf,SAAS,CAAC6B,iBAAV,CAA4B,KAAKd,MAAL,CAAY,WAAZ,CAA5B,CAArF,CAA5B;AACH;;AACDe,EAAAA,qBAAqB,GAAG;AACpB,QAAIC,OAAO,GAAG,MAAMD,qBAAN,CAA4B,IAA5B,CAAd;AACA,WAAOjC,QAAQ,CAAC,EAAD,EAAKkC,OAAL,EAAc;AACzBC,MAAAA,oBAAoB,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAaA;AADV,KAAd,CAAf;AAGH;;AA1CkD;;AA4CvDpC,iBAAiB,CAAC,0BAAD,EAA6BQ,sBAA7B,CAAjB;AACA,eAAeA,sBAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\r\nimport {\r\n    getViewStartByOptions\r\n} from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\r\nimport {\r\n    formatWeekdayAndDay\r\n} from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport {\r\n    VIEWS\r\n} from \"../constants\";\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\r\nclass SchedulerTimelineMonth extends SchedulerTimeline {\r\n    get type() {\r\n        return VIEWS.TIMELINE_MONTH\r\n    }\r\n    get viewDirection() {\r\n        return \"horizontal\"\r\n    }\r\n    get renovatedHeaderPanelComponent() {\r\n        return dxrDateHeader\r\n    }\r\n    _renderView() {\r\n        super._renderView();\r\n        this._updateScrollable()\r\n    }\r\n    _getElementClass() {\r\n        return TIMELINE_CLASS\r\n    }\r\n    _getDateHeaderTemplate() {\r\n        return this.option(\"dateCellTemplate\")\r\n    }\r\n    _calculateDurationInCells(timeDiff) {\r\n        return timeDiff / this.getCellDuration()\r\n    }\r\n    isIndicatorVisible() {\r\n        return true\r\n    }\r\n    _getFormat() {\r\n        return formatWeekdayAndDay\r\n    }\r\n    _getIntervalBetween(currentDate) {\r\n        var firstViewDate = this.getStartViewDate();\r\n        var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\r\n        return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset\r\n    }\r\n    _getViewStartByOptions() {\r\n        return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")))\r\n    }\r\n    generateRenderOptions() {\r\n        var options = super.generateRenderOptions(true);\r\n        return _extends({}, options, {\r\n            getDateForHeaderText: (_, date) => date\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\r\nexport default SchedulerTimelineMonth;\r\n"]},"metadata":{},"sourceType":"module"}