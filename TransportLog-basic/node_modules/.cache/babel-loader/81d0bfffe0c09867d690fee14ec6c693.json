{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter/excel/excel.cell_format_helper.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport tagHelper from \"./excel.tag_helper\";\nimport cellAlignmentHelper from \"./excel.cell_alignment_helper\";\nimport fillHelper from \"./excel.fill_helper\";\nimport fontHelper from \"./excel.font_helper\";\nvar cellFormatHelper = {\n  tryCreateTag: function (sourceObj, sharedItemsContainer) {\n    var result = null;\n\n    if (isDefined(sourceObj)) {\n      var numberFormatId;\n\n      if (\"number\" === typeof sourceObj.numberFormat) {\n        numberFormatId = sourceObj.numberFormat;\n      } else {\n        numberFormatId = sharedItemsContainer.registerNumberFormat(sourceObj.numberFormat);\n      }\n\n      var fill = sourceObj.fill;\n\n      if (!isDefined(fill)) {\n        fill = fillHelper.tryCreateFillFromSimpleFormat(sourceObj);\n      }\n\n      result = {\n        numberFormatId: numberFormatId,\n        alignment: cellAlignmentHelper.tryCreateTag(sourceObj.alignment),\n        fontId: sharedItemsContainer.registerFont(sourceObj.font),\n        fillId: sharedItemsContainer.registerFill(fill)\n      };\n\n      if (cellFormatHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  copy: function (source) {\n    var result;\n\n    if (null === source) {\n      result = null;\n    } else if (isDefined(source)) {\n      result = {};\n\n      if (void 0 !== source.numberFormat) {\n        result.numberFormat = source.numberFormat;\n      }\n\n      if (void 0 !== source.fill) {\n        result.fill = fillHelper.copy(source.fill);\n      } else {\n        fillHelper.copySimpleFormat(source, result);\n      }\n\n      if (void 0 !== source.alignment) {\n        result.alignment = cellAlignmentHelper.copy(source.alignment);\n      }\n\n      if (void 0 !== source.font) {\n        result.font = fontHelper.copy(source.font);\n      }\n    }\n\n    return result;\n  },\n  areEqual: function (leftTag, rightTag) {\n    return cellFormatHelper.isEmpty(leftTag) && cellFormatHelper.isEmpty(rightTag) || isDefined(leftTag) && isDefined(rightTag) && leftTag.fontId === rightTag.fontId && leftTag.numberFormatId === rightTag.numberFormatId && leftTag.fillId === rightTag.fillId && cellAlignmentHelper.areEqual(leftTag.alignment, rightTag.alignment);\n  },\n  isEmpty: function (tag) {\n    return !isDefined(tag) || !isDefined(tag.fontId) && !isDefined(tag.numberFormatId) && !isDefined(tag.fillId) && cellAlignmentHelper.isEmpty(tag.alignment);\n  },\n  toXml: function (tag) {\n    var isAlignmentEmpty = cellAlignmentHelper.isEmpty(tag.alignment);\n    var applyNumberFormat;\n\n    if (isDefined(tag.numberFormatId)) {\n      applyNumberFormat = tag.numberFormatId > 0 ? 1 : 0;\n    }\n\n    return tagHelper.toXml(\"xf\", {\n      xfId: 0,\n      applyAlignment: isAlignmentEmpty ? null : 1,\n      fontId: tag.fontId,\n      applyNumberFormat: applyNumberFormat,\n      fillId: tag.fillId,\n      numFmtId: tag.numberFormatId\n    }, isAlignmentEmpty ? null : cellAlignmentHelper.toXml(tag.alignment));\n  }\n};\nexport default cellFormatHelper;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/exporter/excel/excel.cell_format_helper.js"],"names":["isDefined","tagHelper","cellAlignmentHelper","fillHelper","fontHelper","cellFormatHelper","tryCreateTag","sourceObj","sharedItemsContainer","result","numberFormatId","numberFormat","registerNumberFormat","fill","tryCreateFillFromSimpleFormat","alignment","fontId","registerFont","font","fillId","registerFill","isEmpty","copy","source","copySimpleFormat","areEqual","leftTag","rightTag","tag","toXml","isAlignmentEmpty","applyNumberFormat","xfId","applyAlignment","numFmtId"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/exporter/excel/excel.cell_format_helper.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport tagHelper from \"./excel.tag_helper\";\r\nimport cellAlignmentHelper from \"./excel.cell_alignment_helper\";\r\nimport fillHelper from \"./excel.fill_helper\";\r\nimport fontHelper from \"./excel.font_helper\";\r\nvar cellFormatHelper = {\r\n    tryCreateTag: function(sourceObj, sharedItemsContainer) {\r\n        var result = null;\r\n        if (isDefined(sourceObj)) {\r\n            var numberFormatId;\r\n            if (\"number\" === typeof sourceObj.numberFormat) {\r\n                numberFormatId = sourceObj.numberFormat\r\n            } else {\r\n                numberFormatId = sharedItemsContainer.registerNumberFormat(sourceObj.numberFormat)\r\n            }\r\n            var fill = sourceObj.fill;\r\n            if (!isDefined(fill)) {\r\n                fill = fillHelper.tryCreateFillFromSimpleFormat(sourceObj)\r\n            }\r\n            result = {\r\n                numberFormatId: numberFormatId,\r\n                alignment: cellAlignmentHelper.tryCreateTag(sourceObj.alignment),\r\n                fontId: sharedItemsContainer.registerFont(sourceObj.font),\r\n                fillId: sharedItemsContainer.registerFill(fill)\r\n            };\r\n            if (cellFormatHelper.isEmpty(result)) {\r\n                result = null\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    copy: function(source) {\r\n        var result;\r\n        if (null === source) {\r\n            result = null\r\n        } else if (isDefined(source)) {\r\n            result = {};\r\n            if (void 0 !== source.numberFormat) {\r\n                result.numberFormat = source.numberFormat\r\n            }\r\n            if (void 0 !== source.fill) {\r\n                result.fill = fillHelper.copy(source.fill)\r\n            } else {\r\n                fillHelper.copySimpleFormat(source, result)\r\n            }\r\n            if (void 0 !== source.alignment) {\r\n                result.alignment = cellAlignmentHelper.copy(source.alignment)\r\n            }\r\n            if (void 0 !== source.font) {\r\n                result.font = fontHelper.copy(source.font)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    areEqual: function(leftTag, rightTag) {\r\n        return cellFormatHelper.isEmpty(leftTag) && cellFormatHelper.isEmpty(rightTag) || isDefined(leftTag) && isDefined(rightTag) && leftTag.fontId === rightTag.fontId && leftTag.numberFormatId === rightTag.numberFormatId && leftTag.fillId === rightTag.fillId && cellAlignmentHelper.areEqual(leftTag.alignment, rightTag.alignment)\r\n    },\r\n    isEmpty: function(tag) {\r\n        return !isDefined(tag) || !isDefined(tag.fontId) && !isDefined(tag.numberFormatId) && !isDefined(tag.fillId) && cellAlignmentHelper.isEmpty(tag.alignment)\r\n    },\r\n    toXml: function(tag) {\r\n        var isAlignmentEmpty = cellAlignmentHelper.isEmpty(tag.alignment);\r\n        var applyNumberFormat;\r\n        if (isDefined(tag.numberFormatId)) {\r\n            applyNumberFormat = tag.numberFormatId > 0 ? 1 : 0\r\n        }\r\n        return tagHelper.toXml(\"xf\", {\r\n            xfId: 0,\r\n            applyAlignment: isAlignmentEmpty ? null : 1,\r\n            fontId: tag.fontId,\r\n            applyNumberFormat: applyNumberFormat,\r\n            fillId: tag.fillId,\r\n            numFmtId: tag.numberFormatId\r\n        }, isAlignmentEmpty ? null : cellAlignmentHelper.toXml(tag.alignment))\r\n    }\r\n};\r\nexport default cellFormatHelper;\r\n"]},"metadata":{},"sourceType":"module"}