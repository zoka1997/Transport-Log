{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/helpers/positionHelper.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar getCellSize = DOMMetaData => {\n  var {\n    dateTableCellsMeta: dateTableCellsMeta\n  } = DOMMetaData;\n  var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;\n\n  if (!length) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  var cellIndex = length > 1 ? 1 : 0;\n  var cellSize = dateTableCellsMeta[cellIndex][0];\n  return {\n    width: cellSize.width,\n    height: cellSize.height\n  };\n};\n\nvar getMaxAllowedHorizontalPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {\n  var {\n    dateTableCellsMeta: dateTableCellsMeta\n  } = DOMMetaData;\n  var firstRow = dateTableCellsMeta[0];\n\n  if (!firstRow) {\n    return 0;\n  }\n\n  var {\n    columnIndex: columnIndex\n  } = viewDataProvider.getLastGroupCellPosition(groupIndex);\n  var cellPosition = firstRow[columnIndex];\n\n  if (!cellPosition) {\n    return 0;\n  }\n\n  return !rtlEnabled ? cellPosition.left + cellPosition.width : cellPosition.left;\n};\n\nexport var getCellHeight = DOMMetaData => getCellSize(DOMMetaData).height;\nexport var getCellWidth = DOMMetaData => getCellSize(DOMMetaData).width;\nexport var getAllDayHeight = (showAllDayPanel, isVerticalGrouping, DOMMetaData) => {\n  if (!showAllDayPanel) {\n    return 0;\n  }\n\n  if (isVerticalGrouping) {\n    var {\n      dateTableCellsMeta: dateTableCellsMeta\n    } = DOMMetaData;\n    var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;\n    return length ? dateTableCellsMeta[0][0].height : 0;\n  }\n\n  var {\n    allDayPanelCellsMeta: allDayPanelCellsMeta\n  } = DOMMetaData;\n  return null !== allDayPanelCellsMeta && void 0 !== allDayPanelCellsMeta && allDayPanelCellsMeta.length ? allDayPanelCellsMeta[0].height : 0;\n};\nexport var getMaxAllowedPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {\n  var validGroupIndex = groupIndex || 0;\n  return getMaxAllowedHorizontalPosition(validGroupIndex, viewDataProvider, rtlEnabled, DOMMetaData);\n};\nexport var getGroupWidth = (groupIndex, viewDataProvider, options) => {\n  var {\n    isVirtualScrolling: isVirtualScrolling,\n    rtlEnabled: rtlEnabled,\n    DOMMetaData: DOMMetaData\n  } = options;\n  var cellWidth = getCellWidth(DOMMetaData);\n  var result = viewDataProvider.getCellCount(options) * cellWidth;\n\n  if (isVirtualScrolling) {\n    var groupedData = viewDataProvider.groupedDataMap.dateTableGroupedMap;\n    var groupLength = groupedData[groupIndex][0].length;\n    result = groupLength * cellWidth;\n  }\n\n  var position = getMaxAllowedPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData);\n  var currentPosition = position[groupIndex];\n\n  if (currentPosition) {\n    if (rtlEnabled) {\n      result = currentPosition - position[groupIndex + 1];\n    } else if (0 === groupIndex) {\n      result = currentPosition;\n    } else {\n      result = currentPosition - position[groupIndex - 1];\n    }\n  }\n\n  return result;\n};\nexport class PositionHelper {\n  get viewDataProvider() {\n    return this.options.viewDataProvider;\n  }\n\n  get rtlEnabled() {\n    return this.options.rtlEnabled;\n  }\n\n  get isGroupedByDate() {\n    return this.options.isGroupedByDate;\n  }\n\n  get groupCount() {\n    return this.options.groupCount;\n  }\n\n  get DOMMetaData() {\n    return this.options.getDOMMetaDataCallback();\n  }\n\n  constructor(options) {\n    this.options = options;\n    this.groupStrategy = this.options.isVerticalGrouping ? new GroupStrategyBase(this.options) : new GroupStrategyHorizontal(this.options);\n  }\n\n  getHorizontalMax(groupIndex) {\n    var getMaxPosition = groupIndex => getMaxAllowedPosition(groupIndex, this.viewDataProvider, this.rtlEnabled, this.DOMMetaData);\n\n    if (this.isGroupedByDate) {\n      var viewPortGroupCount = this.viewDataProvider.getViewPortGroupCount();\n      return Math.max(getMaxPosition(groupIndex), getMaxPosition(viewPortGroupCount - 1));\n    }\n\n    return getMaxPosition(groupIndex);\n  }\n\n  getResizableStep() {\n    var cellWidth = getCellWidth(this.DOMMetaData);\n\n    if (this.isGroupedByDate) {\n      return this.groupCount * cellWidth;\n    }\n\n    return cellWidth;\n  }\n\n  getVerticalMax(options) {\n    return this.groupStrategy.getVerticalMax(options);\n  }\n\n  getOffsetByAllDayPanel(options) {\n    return this.groupStrategy.getOffsetByAllDayPanel(options);\n  }\n\n  getGroupTop(options) {\n    return this.groupStrategy.getGroupTop(options);\n  }\n\n}\n\nclass GroupStrategyBase {\n  constructor(options) {\n    this.options = options;\n  }\n\n  get viewDataProvider() {\n    return this.options.viewDataProvider;\n  }\n\n  get isGroupedByDate() {\n    return this.options.isGroupedByDate;\n  }\n\n  get rtlEnabled() {\n    return this.options.rtlEnabled;\n  }\n\n  get groupCount() {\n    return this.options.groupCount;\n  }\n\n  get DOMMetaData() {\n    return this.options.getDOMMetaDataCallback();\n  }\n\n  getOffsetByAllDayPanel(_ref) {\n    var {\n      groupIndex: groupIndex,\n      supportAllDayRow: supportAllDayRow,\n      showAllDayPanel: showAllDayPanel\n    } = _ref;\n    var result = 0;\n\n    if (supportAllDayRow && showAllDayPanel) {\n      var allDayPanelHeight = getAllDayHeight(showAllDayPanel, true, this.DOMMetaData);\n      result = allDayPanelHeight * (groupIndex + 1);\n    }\n\n    return result;\n  }\n\n  getVerticalMax(options) {\n    var maxAllowedPosition = this._getMaxAllowedVerticalPosition(_extends({}, options, {\n      viewDataProvider: this.viewDataProvider,\n      rtlEnabled: this.rtlEnabled,\n      DOMMetaData: this.DOMMetaData\n    }));\n\n    maxAllowedPosition += this.getOffsetByAllDayPanel(options);\n    return maxAllowedPosition;\n  }\n\n  getGroupTop(_ref2) {\n    var {\n      groupIndex: groupIndex,\n      showAllDayPanel: showAllDayPanel,\n      isGroupedAllDayPanel: isGroupedAllDayPanel\n    } = _ref2;\n    var rowCount = this.viewDataProvider.getRowCountInGroup(groupIndex);\n\n    var maxVerticalPosition = this._getMaxAllowedVerticalPosition({\n      groupIndex: groupIndex,\n      viewDataProvider: this.viewDataProvider,\n      showAllDayPanel: showAllDayPanel,\n      isGroupedAllDayPanel: isGroupedAllDayPanel,\n      isVerticalGrouping: true,\n      DOMMetaData: this.DOMMetaData\n    });\n\n    return maxVerticalPosition - getCellHeight(this.DOMMetaData) * rowCount;\n  }\n\n  _getAllDayHeight(showAllDayPanel) {\n    return getAllDayHeight(showAllDayPanel, true, this.DOMMetaData);\n  }\n\n  _getMaxAllowedVerticalPosition(_ref3) {\n    var {\n      groupIndex: groupIndex,\n      showAllDayPanel: showAllDayPanel,\n      isGroupedAllDayPanel: isGroupedAllDayPanel\n    } = _ref3;\n    var {\n      rowIndex: rowIndex\n    } = this.viewDataProvider.getLastGroupCellPosition(groupIndex);\n    var {\n      dateTableCellsMeta: dateTableCellsMeta\n    } = this.DOMMetaData;\n    var lastGroupRow = dateTableCellsMeta[rowIndex];\n\n    if (!lastGroupRow) {\n      return 0;\n    }\n\n    var result = lastGroupRow[0].top + lastGroupRow[0].height;\n\n    if (isGroupedAllDayPanel) {\n      result -= (groupIndex + 1) * this._getAllDayHeight(showAllDayPanel);\n    }\n\n    return result;\n  }\n\n}\n\nclass GroupStrategyHorizontal extends GroupStrategyBase {\n  getOffsetByAllDayPanel(options) {\n    return 0;\n  }\n\n  getVerticalMax(options) {\n    var {\n      isVirtualScrolling: isVirtualScrolling,\n      groupIndex: groupIndex\n    } = options;\n    var correctedGroupIndex = isVirtualScrolling ? groupIndex : 0;\n    return this._getMaxAllowedVerticalPosition(_extends({}, options, {\n      groupIndex: correctedGroupIndex\n    }));\n  }\n\n  getGroupTop(options) {\n    return 0;\n  }\n\n  _getAllDayHeight(showAllDayPanel) {\n    return getAllDayHeight(showAllDayPanel, false, this.DOMMetaData);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/workspaces/helpers/positionHelper.js"],"names":["_extends","getCellSize","DOMMetaData","dateTableCellsMeta","length","width","height","cellIndex","cellSize","getMaxAllowedHorizontalPosition","groupIndex","viewDataProvider","rtlEnabled","firstRow","columnIndex","getLastGroupCellPosition","cellPosition","left","getCellHeight","getCellWidth","getAllDayHeight","showAllDayPanel","isVerticalGrouping","allDayPanelCellsMeta","getMaxAllowedPosition","validGroupIndex","getGroupWidth","options","isVirtualScrolling","cellWidth","result","getCellCount","groupedData","groupedDataMap","dateTableGroupedMap","groupLength","position","currentPosition","PositionHelper","isGroupedByDate","groupCount","getDOMMetaDataCallback","constructor","groupStrategy","GroupStrategyBase","GroupStrategyHorizontal","getHorizontalMax","getMaxPosition","viewPortGroupCount","getViewPortGroupCount","Math","max","getResizableStep","getVerticalMax","getOffsetByAllDayPanel","getGroupTop","_ref","supportAllDayRow","allDayPanelHeight","maxAllowedPosition","_getMaxAllowedVerticalPosition","_ref2","isGroupedAllDayPanel","rowCount","getRowCountInGroup","maxVerticalPosition","_getAllDayHeight","_ref3","rowIndex","lastGroupRow","top","correctedGroupIndex"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;;AACA,IAAIC,WAAW,GAAGC,WAAW,IAAI;AAC7B,MAAI;AACAC,IAAAA,kBAAkB,EAAEA;AADpB,MAEAD,WAFJ;AAGA,MAAIE,MAAM,GAAG,SAASD,kBAAT,IAA+B,KAAK,CAAL,KAAWA,kBAA1C,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACC,MAAxG;;AACA,MAAI,CAACA,MAAL,EAAa;AACT,WAAO;AACHC,MAAAA,KAAK,EAAE,CADJ;AAEHC,MAAAA,MAAM,EAAE;AAFL,KAAP;AAIH;;AACD,MAAIC,SAAS,GAAGH,MAAM,GAAG,CAAT,GAAa,CAAb,GAAiB,CAAjC;AACA,MAAII,QAAQ,GAAGL,kBAAkB,CAACI,SAAD,CAAlB,CAA8B,CAA9B,CAAf;AACA,SAAO;AACHF,IAAAA,KAAK,EAAEG,QAAQ,CAACH,KADb;AAEHC,IAAAA,MAAM,EAAEE,QAAQ,CAACF;AAFd,GAAP;AAIH,CAjBD;;AAkBA,IAAIG,+BAA+B,GAAG,CAACC,UAAD,EAAaC,gBAAb,EAA+BC,UAA/B,EAA2CV,WAA3C,KAA2D;AAC7F,MAAI;AACAC,IAAAA,kBAAkB,EAAEA;AADpB,MAEAD,WAFJ;AAGA,MAAIW,QAAQ,GAAGV,kBAAkB,CAAC,CAAD,CAAjC;;AACA,MAAI,CAACU,QAAL,EAAe;AACX,WAAO,CAAP;AACH;;AACD,MAAI;AACAC,IAAAA,WAAW,EAAEA;AADb,MAEAH,gBAAgB,CAACI,wBAAjB,CAA0CL,UAA1C,CAFJ;AAGA,MAAIM,YAAY,GAAGH,QAAQ,CAACC,WAAD,CAA3B;;AACA,MAAI,CAACE,YAAL,EAAmB;AACf,WAAO,CAAP;AACH;;AACD,SAAO,CAACJ,UAAD,GAAcI,YAAY,CAACC,IAAb,GAAoBD,YAAY,CAACX,KAA/C,GAAuDW,YAAY,CAACC,IAA3E;AACH,CAhBD;;AAiBA,OAAO,IAAIC,aAAa,GAAGhB,WAAW,IAAID,WAAW,CAACC,WAAD,CAAX,CAAyBI,MAA5D;AACP,OAAO,IAAIa,YAAY,GAAGjB,WAAW,IAAID,WAAW,CAACC,WAAD,CAAX,CAAyBG,KAA3D;AACP,OAAO,IAAIe,eAAe,GAAG,CAACC,eAAD,EAAkBC,kBAAlB,EAAsCpB,WAAtC,KAAsD;AAC/E,MAAI,CAACmB,eAAL,EAAsB;AAClB,WAAO,CAAP;AACH;;AACD,MAAIC,kBAAJ,EAAwB;AACpB,QAAI;AACAnB,MAAAA,kBAAkB,EAAEA;AADpB,QAEAD,WAFJ;AAGA,QAAIE,MAAM,GAAG,SAASD,kBAAT,IAA+B,KAAK,CAAL,KAAWA,kBAA1C,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACC,MAAxG;AACA,WAAOA,MAAM,GAAGD,kBAAkB,CAAC,CAAD,CAAlB,CAAsB,CAAtB,EAAyBG,MAA5B,GAAqC,CAAlD;AACH;;AACD,MAAI;AACAiB,IAAAA,oBAAoB,EAAEA;AADtB,MAEArB,WAFJ;AAGA,SAAO,SAASqB,oBAAT,IAAiC,KAAK,CAAL,KAAWA,oBAA5C,IAAoEA,oBAAoB,CAACnB,MAAzF,GAAkGmB,oBAAoB,CAAC,CAAD,CAApB,CAAwBjB,MAA1H,GAAmI,CAA1I;AACH,CAfM;AAgBP,OAAO,IAAIkB,qBAAqB,GAAG,CAACd,UAAD,EAAaC,gBAAb,EAA+BC,UAA/B,EAA2CV,WAA3C,KAA2D;AAC1F,MAAIuB,eAAe,GAAGf,UAAU,IAAI,CAApC;AACA,SAAOD,+BAA+B,CAACgB,eAAD,EAAkBd,gBAAlB,EAAoCC,UAApC,EAAgDV,WAAhD,CAAtC;AACH,CAHM;AAIP,OAAO,IAAIwB,aAAa,GAAG,CAAChB,UAAD,EAAaC,gBAAb,EAA+BgB,OAA/B,KAA2C;AAClE,MAAI;AACAC,IAAAA,kBAAkB,EAAEA,kBADpB;AAEAhB,IAAAA,UAAU,EAAEA,UAFZ;AAGAV,IAAAA,WAAW,EAAEA;AAHb,MAIAyB,OAJJ;AAKA,MAAIE,SAAS,GAAGV,YAAY,CAACjB,WAAD,CAA5B;AACA,MAAI4B,MAAM,GAAGnB,gBAAgB,CAACoB,YAAjB,CAA8BJ,OAA9B,IAAyCE,SAAtD;;AACA,MAAID,kBAAJ,EAAwB;AACpB,QAAII,WAAW,GAAGrB,gBAAgB,CAACsB,cAAjB,CAAgCC,mBAAlD;AACA,QAAIC,WAAW,GAAGH,WAAW,CAACtB,UAAD,CAAX,CAAwB,CAAxB,EAA2BN,MAA7C;AACA0B,IAAAA,MAAM,GAAGK,WAAW,GAAGN,SAAvB;AACH;;AACD,MAAIO,QAAQ,GAAGZ,qBAAqB,CAACd,UAAD,EAAaC,gBAAb,EAA+BC,UAA/B,EAA2CV,WAA3C,CAApC;AACA,MAAImC,eAAe,GAAGD,QAAQ,CAAC1B,UAAD,CAA9B;;AACA,MAAI2B,eAAJ,EAAqB;AACjB,QAAIzB,UAAJ,EAAgB;AACZkB,MAAAA,MAAM,GAAGO,eAAe,GAAGD,QAAQ,CAAC1B,UAAU,GAAG,CAAd,CAAnC;AACH,KAFD,MAEO,IAAI,MAAMA,UAAV,EAAsB;AACzBoB,MAAAA,MAAM,GAAGO,eAAT;AACH,KAFM,MAEA;AACHP,MAAAA,MAAM,GAAGO,eAAe,GAAGD,QAAQ,CAAC1B,UAAU,GAAG,CAAd,CAAnC;AACH;AACJ;;AACD,SAAOoB,MAAP;AACH,CAzBM;AA0BP,OAAO,MAAMQ,cAAN,CAAqB;AACJ,MAAhB3B,gBAAgB,GAAG;AACnB,WAAO,KAAKgB,OAAL,CAAahB,gBAApB;AACH;;AACa,MAAVC,UAAU,GAAG;AACb,WAAO,KAAKe,OAAL,CAAaf,UAApB;AACH;;AACkB,MAAf2B,eAAe,GAAG;AAClB,WAAO,KAAKZ,OAAL,CAAaY,eAApB;AACH;;AACa,MAAVC,UAAU,GAAG;AACb,WAAO,KAAKb,OAAL,CAAaa,UAApB;AACH;;AACc,MAAXtC,WAAW,GAAG;AACd,WAAO,KAAKyB,OAAL,CAAac,sBAAb,EAAP;AACH;;AACDC,EAAAA,WAAW,CAACf,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKgB,aAAL,GAAqB,KAAKhB,OAAL,CAAaL,kBAAb,GAAkC,IAAIsB,iBAAJ,CAAsB,KAAKjB,OAA3B,CAAlC,GAAwE,IAAIkB,uBAAJ,CAA4B,KAAKlB,OAAjC,CAA7F;AACH;;AACDmB,EAAAA,gBAAgB,CAACpC,UAAD,EAAa;AACzB,QAAIqC,cAAc,GAAGrC,UAAU,IAAIc,qBAAqB,CAACd,UAAD,EAAa,KAAKC,gBAAlB,EAAoC,KAAKC,UAAzC,EAAqD,KAAKV,WAA1D,CAAxD;;AACA,QAAI,KAAKqC,eAAT,EAA0B;AACtB,UAAIS,kBAAkB,GAAG,KAAKrC,gBAAL,CAAsBsC,qBAAtB,EAAzB;AACA,aAAOC,IAAI,CAACC,GAAL,CAASJ,cAAc,CAACrC,UAAD,CAAvB,EAAqCqC,cAAc,CAACC,kBAAkB,GAAG,CAAtB,CAAnD,CAAP;AACH;;AACD,WAAOD,cAAc,CAACrC,UAAD,CAArB;AACH;;AACD0C,EAAAA,gBAAgB,GAAG;AACf,QAAIvB,SAAS,GAAGV,YAAY,CAAC,KAAKjB,WAAN,CAA5B;;AACA,QAAI,KAAKqC,eAAT,EAA0B;AACtB,aAAO,KAAKC,UAAL,GAAkBX,SAAzB;AACH;;AACD,WAAOA,SAAP;AACH;;AACDwB,EAAAA,cAAc,CAAC1B,OAAD,EAAU;AACpB,WAAO,KAAKgB,aAAL,CAAmBU,cAAnB,CAAkC1B,OAAlC,CAAP;AACH;;AACD2B,EAAAA,sBAAsB,CAAC3B,OAAD,EAAU;AAC5B,WAAO,KAAKgB,aAAL,CAAmBW,sBAAnB,CAA0C3B,OAA1C,CAAP;AACH;;AACD4B,EAAAA,WAAW,CAAC5B,OAAD,EAAU;AACjB,WAAO,KAAKgB,aAAL,CAAmBY,WAAnB,CAA+B5B,OAA/B,CAAP;AACH;;AA3CuB;;AA6C5B,MAAMiB,iBAAN,CAAwB;AACpBF,EAAAA,WAAW,CAACf,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACmB,MAAhBhB,gBAAgB,GAAG;AACnB,WAAO,KAAKgB,OAAL,CAAahB,gBAApB;AACH;;AACkB,MAAf4B,eAAe,GAAG;AAClB,WAAO,KAAKZ,OAAL,CAAaY,eAApB;AACH;;AACa,MAAV3B,UAAU,GAAG;AACb,WAAO,KAAKe,OAAL,CAAaf,UAApB;AACH;;AACa,MAAV4B,UAAU,GAAG;AACb,WAAO,KAAKb,OAAL,CAAaa,UAApB;AACH;;AACc,MAAXtC,WAAW,GAAG;AACd,WAAO,KAAKyB,OAAL,CAAac,sBAAb,EAAP;AACH;;AACDa,EAAAA,sBAAsB,CAACE,IAAD,EAAO;AACzB,QAAI;AACA9C,MAAAA,UAAU,EAAEA,UADZ;AAEA+C,MAAAA,gBAAgB,EAAEA,gBAFlB;AAGApC,MAAAA,eAAe,EAAEA;AAHjB,QAIAmC,IAJJ;AAKA,QAAI1B,MAAM,GAAG,CAAb;;AACA,QAAI2B,gBAAgB,IAAIpC,eAAxB,EAAyC;AACrC,UAAIqC,iBAAiB,GAAGtC,eAAe,CAACC,eAAD,EAAkB,IAAlB,EAAwB,KAAKnB,WAA7B,CAAvC;AACA4B,MAAAA,MAAM,GAAG4B,iBAAiB,IAAIhD,UAAU,GAAG,CAAjB,CAA1B;AACH;;AACD,WAAOoB,MAAP;AACH;;AACDuB,EAAAA,cAAc,CAAC1B,OAAD,EAAU;AACpB,QAAIgC,kBAAkB,GAAG,KAAKC,8BAAL,CAAoC5D,QAAQ,CAAC,EAAD,EAAK2B,OAAL,EAAc;AAC/EhB,MAAAA,gBAAgB,EAAE,KAAKA,gBADwD;AAE/EC,MAAAA,UAAU,EAAE,KAAKA,UAF8D;AAG/EV,MAAAA,WAAW,EAAE,KAAKA;AAH6D,KAAd,CAA5C,CAAzB;;AAKAyD,IAAAA,kBAAkB,IAAI,KAAKL,sBAAL,CAA4B3B,OAA5B,CAAtB;AACA,WAAOgC,kBAAP;AACH;;AACDJ,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACf,QAAI;AACAnD,MAAAA,UAAU,EAAEA,UADZ;AAEAW,MAAAA,eAAe,EAAEA,eAFjB;AAGAyC,MAAAA,oBAAoB,EAAEA;AAHtB,QAIAD,KAJJ;AAKA,QAAIE,QAAQ,GAAG,KAAKpD,gBAAL,CAAsBqD,kBAAtB,CAAyCtD,UAAzC,CAAf;;AACA,QAAIuD,mBAAmB,GAAG,KAAKL,8BAAL,CAAoC;AAC1DlD,MAAAA,UAAU,EAAEA,UAD8C;AAE1DC,MAAAA,gBAAgB,EAAE,KAAKA,gBAFmC;AAG1DU,MAAAA,eAAe,EAAEA,eAHyC;AAI1DyC,MAAAA,oBAAoB,EAAEA,oBAJoC;AAK1DxC,MAAAA,kBAAkB,EAAE,IALsC;AAM1DpB,MAAAA,WAAW,EAAE,KAAKA;AANwC,KAApC,CAA1B;;AAQA,WAAO+D,mBAAmB,GAAG/C,aAAa,CAAC,KAAKhB,WAAN,CAAb,GAAkC6D,QAA/D;AACH;;AACDG,EAAAA,gBAAgB,CAAC7C,eAAD,EAAkB;AAC9B,WAAOD,eAAe,CAACC,eAAD,EAAkB,IAAlB,EAAwB,KAAKnB,WAA7B,CAAtB;AACH;;AACD0D,EAAAA,8BAA8B,CAACO,KAAD,EAAQ;AAClC,QAAI;AACAzD,MAAAA,UAAU,EAAEA,UADZ;AAEAW,MAAAA,eAAe,EAAEA,eAFjB;AAGAyC,MAAAA,oBAAoB,EAAEA;AAHtB,QAIAK,KAJJ;AAKA,QAAI;AACAC,MAAAA,QAAQ,EAAEA;AADV,QAEA,KAAKzD,gBAAL,CAAsBI,wBAAtB,CAA+CL,UAA/C,CAFJ;AAGA,QAAI;AACAP,MAAAA,kBAAkB,EAAEA;AADpB,QAEA,KAAKD,WAFT;AAGA,QAAImE,YAAY,GAAGlE,kBAAkB,CAACiE,QAAD,CAArC;;AACA,QAAI,CAACC,YAAL,EAAmB;AACf,aAAO,CAAP;AACH;;AACD,QAAIvC,MAAM,GAAGuC,YAAY,CAAC,CAAD,CAAZ,CAAgBC,GAAhB,GAAsBD,YAAY,CAAC,CAAD,CAAZ,CAAgB/D,MAAnD;;AACA,QAAIwD,oBAAJ,EAA0B;AACtBhC,MAAAA,MAAM,IAAI,CAACpB,UAAU,GAAG,CAAd,IAAmB,KAAKwD,gBAAL,CAAsB7C,eAAtB,CAA7B;AACH;;AACD,WAAOS,MAAP;AACH;;AAlFmB;;AAoFxB,MAAMe,uBAAN,SAAsCD,iBAAtC,CAAwD;AACpDU,EAAAA,sBAAsB,CAAC3B,OAAD,EAAU;AAC5B,WAAO,CAAP;AACH;;AACD0B,EAAAA,cAAc,CAAC1B,OAAD,EAAU;AACpB,QAAI;AACAC,MAAAA,kBAAkB,EAAEA,kBADpB;AAEAlB,MAAAA,UAAU,EAAEA;AAFZ,QAGAiB,OAHJ;AAIA,QAAI4C,mBAAmB,GAAG3C,kBAAkB,GAAGlB,UAAH,GAAgB,CAA5D;AACA,WAAO,KAAKkD,8BAAL,CAAoC5D,QAAQ,CAAC,EAAD,EAAK2B,OAAL,EAAc;AAC7DjB,MAAAA,UAAU,EAAE6D;AADiD,KAAd,CAA5C,CAAP;AAGH;;AACDhB,EAAAA,WAAW,CAAC5B,OAAD,EAAU;AACjB,WAAO,CAAP;AACH;;AACDuC,EAAAA,gBAAgB,CAAC7C,eAAD,EAAkB;AAC9B,WAAOD,eAAe,CAACC,eAAD,EAAkB,KAAlB,EAAyB,KAAKnB,WAA9B,CAAtB;AACH;;AAnBmD","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/helpers/positionHelper.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar getCellSize = DOMMetaData => {\r\n    var {\r\n        dateTableCellsMeta: dateTableCellsMeta\r\n    } = DOMMetaData;\r\n    var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;\r\n    if (!length) {\r\n        return {\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    }\r\n    var cellIndex = length > 1 ? 1 : 0;\r\n    var cellSize = dateTableCellsMeta[cellIndex][0];\r\n    return {\r\n        width: cellSize.width,\r\n        height: cellSize.height\r\n    }\r\n};\r\nvar getMaxAllowedHorizontalPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {\r\n    var {\r\n        dateTableCellsMeta: dateTableCellsMeta\r\n    } = DOMMetaData;\r\n    var firstRow = dateTableCellsMeta[0];\r\n    if (!firstRow) {\r\n        return 0\r\n    }\r\n    var {\r\n        columnIndex: columnIndex\r\n    } = viewDataProvider.getLastGroupCellPosition(groupIndex);\r\n    var cellPosition = firstRow[columnIndex];\r\n    if (!cellPosition) {\r\n        return 0\r\n    }\r\n    return !rtlEnabled ? cellPosition.left + cellPosition.width : cellPosition.left\r\n};\r\nexport var getCellHeight = DOMMetaData => getCellSize(DOMMetaData).height;\r\nexport var getCellWidth = DOMMetaData => getCellSize(DOMMetaData).width;\r\nexport var getAllDayHeight = (showAllDayPanel, isVerticalGrouping, DOMMetaData) => {\r\n    if (!showAllDayPanel) {\r\n        return 0\r\n    }\r\n    if (isVerticalGrouping) {\r\n        var {\r\n            dateTableCellsMeta: dateTableCellsMeta\r\n        } = DOMMetaData;\r\n        var length = null === dateTableCellsMeta || void 0 === dateTableCellsMeta ? void 0 : dateTableCellsMeta.length;\r\n        return length ? dateTableCellsMeta[0][0].height : 0\r\n    }\r\n    var {\r\n        allDayPanelCellsMeta: allDayPanelCellsMeta\r\n    } = DOMMetaData;\r\n    return null !== allDayPanelCellsMeta && void 0 !== allDayPanelCellsMeta && allDayPanelCellsMeta.length ? allDayPanelCellsMeta[0].height : 0\r\n};\r\nexport var getMaxAllowedPosition = (groupIndex, viewDataProvider, rtlEnabled, DOMMetaData) => {\r\n    var validGroupIndex = groupIndex || 0;\r\n    return getMaxAllowedHorizontalPosition(validGroupIndex, viewDataProvider, rtlEnabled, DOMMetaData)\r\n};\r\nexport var getGroupWidth = (groupIndex, viewDataProvider, options) => {\r\n    var {\r\n        isVirtualScrolling: isVirtualScrolling,\r\n        rtlEnabled: rtlEnabled,\r\n        DOMMetaData: DOMMetaData\r\n    } = options;\r\n    var cellWidth = getCellWidth(DOMMetaData);\r\n    var result = viewDataProvider.getCellCount(options) * cellWidth;\r\n    if (isVirtualScrolling) {\r\n        var groupedData = viewDataProvider.groupedDataMap.dateTableGroupedMap;\r\n        var groupLength = groupedData[groupIndex][0].length;\r\n        result = groupLength * cellWidth\r\n    }\r\n    var position = getMaxAllowedPosition(groupIndex, viewDataProvider, rtlEnabled, DOMMetaData);\r\n    var currentPosition = position[groupIndex];\r\n    if (currentPosition) {\r\n        if (rtlEnabled) {\r\n            result = currentPosition - position[groupIndex + 1]\r\n        } else if (0 === groupIndex) {\r\n            result = currentPosition\r\n        } else {\r\n            result = currentPosition - position[groupIndex - 1]\r\n        }\r\n    }\r\n    return result\r\n};\r\nexport class PositionHelper {\r\n    get viewDataProvider() {\r\n        return this.options.viewDataProvider\r\n    }\r\n    get rtlEnabled() {\r\n        return this.options.rtlEnabled\r\n    }\r\n    get isGroupedByDate() {\r\n        return this.options.isGroupedByDate\r\n    }\r\n    get groupCount() {\r\n        return this.options.groupCount\r\n    }\r\n    get DOMMetaData() {\r\n        return this.options.getDOMMetaDataCallback()\r\n    }\r\n    constructor(options) {\r\n        this.options = options;\r\n        this.groupStrategy = this.options.isVerticalGrouping ? new GroupStrategyBase(this.options) : new GroupStrategyHorizontal(this.options)\r\n    }\r\n    getHorizontalMax(groupIndex) {\r\n        var getMaxPosition = groupIndex => getMaxAllowedPosition(groupIndex, this.viewDataProvider, this.rtlEnabled, this.DOMMetaData);\r\n        if (this.isGroupedByDate) {\r\n            var viewPortGroupCount = this.viewDataProvider.getViewPortGroupCount();\r\n            return Math.max(getMaxPosition(groupIndex), getMaxPosition(viewPortGroupCount - 1))\r\n        }\r\n        return getMaxPosition(groupIndex)\r\n    }\r\n    getResizableStep() {\r\n        var cellWidth = getCellWidth(this.DOMMetaData);\r\n        if (this.isGroupedByDate) {\r\n            return this.groupCount * cellWidth\r\n        }\r\n        return cellWidth\r\n    }\r\n    getVerticalMax(options) {\r\n        return this.groupStrategy.getVerticalMax(options)\r\n    }\r\n    getOffsetByAllDayPanel(options) {\r\n        return this.groupStrategy.getOffsetByAllDayPanel(options)\r\n    }\r\n    getGroupTop(options) {\r\n        return this.groupStrategy.getGroupTop(options)\r\n    }\r\n}\r\nclass GroupStrategyBase {\r\n    constructor(options) {\r\n        this.options = options\r\n    }\r\n    get viewDataProvider() {\r\n        return this.options.viewDataProvider\r\n    }\r\n    get isGroupedByDate() {\r\n        return this.options.isGroupedByDate\r\n    }\r\n    get rtlEnabled() {\r\n        return this.options.rtlEnabled\r\n    }\r\n    get groupCount() {\r\n        return this.options.groupCount\r\n    }\r\n    get DOMMetaData() {\r\n        return this.options.getDOMMetaDataCallback()\r\n    }\r\n    getOffsetByAllDayPanel(_ref) {\r\n        var {\r\n            groupIndex: groupIndex,\r\n            supportAllDayRow: supportAllDayRow,\r\n            showAllDayPanel: showAllDayPanel\r\n        } = _ref;\r\n        var result = 0;\r\n        if (supportAllDayRow && showAllDayPanel) {\r\n            var allDayPanelHeight = getAllDayHeight(showAllDayPanel, true, this.DOMMetaData);\r\n            result = allDayPanelHeight * (groupIndex + 1)\r\n        }\r\n        return result\r\n    }\r\n    getVerticalMax(options) {\r\n        var maxAllowedPosition = this._getMaxAllowedVerticalPosition(_extends({}, options, {\r\n            viewDataProvider: this.viewDataProvider,\r\n            rtlEnabled: this.rtlEnabled,\r\n            DOMMetaData: this.DOMMetaData\r\n        }));\r\n        maxAllowedPosition += this.getOffsetByAllDayPanel(options);\r\n        return maxAllowedPosition\r\n    }\r\n    getGroupTop(_ref2) {\r\n        var {\r\n            groupIndex: groupIndex,\r\n            showAllDayPanel: showAllDayPanel,\r\n            isGroupedAllDayPanel: isGroupedAllDayPanel\r\n        } = _ref2;\r\n        var rowCount = this.viewDataProvider.getRowCountInGroup(groupIndex);\r\n        var maxVerticalPosition = this._getMaxAllowedVerticalPosition({\r\n            groupIndex: groupIndex,\r\n            viewDataProvider: this.viewDataProvider,\r\n            showAllDayPanel: showAllDayPanel,\r\n            isGroupedAllDayPanel: isGroupedAllDayPanel,\r\n            isVerticalGrouping: true,\r\n            DOMMetaData: this.DOMMetaData\r\n        });\r\n        return maxVerticalPosition - getCellHeight(this.DOMMetaData) * rowCount\r\n    }\r\n    _getAllDayHeight(showAllDayPanel) {\r\n        return getAllDayHeight(showAllDayPanel, true, this.DOMMetaData)\r\n    }\r\n    _getMaxAllowedVerticalPosition(_ref3) {\r\n        var {\r\n            groupIndex: groupIndex,\r\n            showAllDayPanel: showAllDayPanel,\r\n            isGroupedAllDayPanel: isGroupedAllDayPanel\r\n        } = _ref3;\r\n        var {\r\n            rowIndex: rowIndex\r\n        } = this.viewDataProvider.getLastGroupCellPosition(groupIndex);\r\n        var {\r\n            dateTableCellsMeta: dateTableCellsMeta\r\n        } = this.DOMMetaData;\r\n        var lastGroupRow = dateTableCellsMeta[rowIndex];\r\n        if (!lastGroupRow) {\r\n            return 0\r\n        }\r\n        var result = lastGroupRow[0].top + lastGroupRow[0].height;\r\n        if (isGroupedAllDayPanel) {\r\n            result -= (groupIndex + 1) * this._getAllDayHeight(showAllDayPanel)\r\n        }\r\n        return result\r\n    }\r\n}\r\nclass GroupStrategyHorizontal extends GroupStrategyBase {\r\n    getOffsetByAllDayPanel(options) {\r\n        return 0\r\n    }\r\n    getVerticalMax(options) {\r\n        var {\r\n            isVirtualScrolling: isVirtualScrolling,\r\n            groupIndex: groupIndex\r\n        } = options;\r\n        var correctedGroupIndex = isVirtualScrolling ? groupIndex : 0;\r\n        return this._getMaxAllowedVerticalPosition(_extends({}, options, {\r\n            groupIndex: correctedGroupIndex\r\n        }))\r\n    }\r\n    getGroupTop(options) {\r\n        return 0\r\n    }\r\n    _getAllDayHeight(showAllDayPanel) {\r\n        return getAllDayHeight(showAllDayPanel, false, this.DOMMetaData)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}