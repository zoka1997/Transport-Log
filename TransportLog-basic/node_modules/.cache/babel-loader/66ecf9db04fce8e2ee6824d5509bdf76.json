{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/recurrence_editor.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../../core/component_registrator\";\nimport Guid from \"../../core/guid\";\nimport $ from \"../../core/renderer\";\nimport dateUtils from \"../../core/utils/date\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined } from \"../../core/utils/type\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport Form from \"../form\";\nimport ButtonGroup from \"../button_group\";\nimport DateBox from \"../date_box\";\nimport Editor from \"../editor/editor\";\nimport NumberBox from \"../number_box\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport \"../radio_group\";\nvar RECURRENCE_EDITOR = \"dx-recurrence-editor\";\nvar LABEL_POSTFIX = \"-label\";\nvar WRAPPER_POSTFIX = \"-wrapper\";\nvar RECURRENCE_EDITOR_CONTAINER = \"dx-recurrence-editor-container\";\nvar REPEAT_END_EDITOR = \"dx-recurrence-repeat-end\";\nvar REPEAT_END_TYPE_EDITOR = \"dx-recurrence-radiogroup-repeat-type\";\nvar REPEAT_COUNT_EDITOR = \"dx-recurrence-numberbox-repeat-count\";\nvar REPEAT_UNTIL_DATE_EDITOR = \"dx-recurrence-datebox-until-date\";\nvar RECURRENCE_BUTTON_GROUP = \"dx-recurrence-button-group\";\nvar FREQUENCY_EDITOR = \"dx-recurrence-selectbox-freq\";\nvar INTERVAL_EDITOR = \"dx-recurrence-numberbox-interval\";\nvar REPEAT_ON_EDITOR = \"dx-recurrence-repeat-on\";\nvar DAY_OF_MONTH = \"dx-recurrence-numberbox-day-of-month\";\nvar MONTH_OF_YEAR = \"dx-recurrence-selectbox-month-of-year\";\nvar recurrentEditorNumberBoxWidth = 70;\nvar recurrentEditorSelectBoxWidth = 120;\nvar defaultRecurrenceTypeIndex = 1;\nvar frequenciesMessages = [{\n  recurrence: \"dxScheduler-recurrenceHourly\",\n  value: \"hourly\"\n}, {\n  recurrence: \"dxScheduler-recurrenceDaily\",\n  value: \"daily\"\n}, {\n  recurrence: \"dxScheduler-recurrenceWeekly\",\n  value: \"weekly\"\n}, {\n  recurrence: \"dxScheduler-recurrenceMonthly\",\n  value: \"monthly\"\n}, {\n  recurrence: \"dxScheduler-recurrenceYearly\",\n  value: \"yearly\"\n}];\nvar frequencies = frequenciesMessages.map(item => ({\n  text: () => messageLocalization.format(item.recurrence),\n  value: item.value\n}));\nvar repeatEndTypes = [{\n  type: \"never\"\n}, {\n  type: \"until\"\n}, {\n  type: \"count\"\n}];\nvar days = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\n\nclass RecurrenceRule {\n  constructor(rule) {\n    this._recurrenceProcessor = getRecurrenceProcessor();\n    this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(rule).rule;\n  }\n\n  makeRules(string) {\n    this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(string).rule;\n  }\n\n  makeRule(field, value) {\n    if (!value || Array.isArray(value) && !value.length) {\n      delete this._recurrenceRule[field];\n      return;\n    }\n\n    if (isDefined(field)) {\n      if (\"until\" === field) {\n        delete this._recurrenceRule.count;\n      }\n\n      if (\"count\" === field) {\n        delete this._recurrenceRule.until;\n      }\n\n      this._recurrenceRule[field] = value;\n    }\n  }\n\n  getRepeatEndRule() {\n    var rules = this._recurrenceRule;\n\n    if (\"count\" in rules) {\n      return \"count\";\n    }\n\n    if (\"until\" in rules) {\n      return \"until\";\n    }\n\n    return \"never\";\n  }\n\n  getRecurrenceString() {\n    return this._recurrenceProcessor.getRecurrenceString(this._recurrenceRule);\n  }\n\n  getRules() {\n    return this._recurrenceRule;\n  }\n\n  getDaysFromByDayRule() {\n    return this._recurrenceProcessor.daysFromByDayRule(this._recurrenceRule);\n  }\n\n}\n\nclass RecurrenceEditor extends Editor {\n  _getDefaultOptions() {\n    var defaultOptions = super._getDefaultOptions();\n\n    return extend(defaultOptions, {\n      value: null,\n      startDate: new Date(),\n      firstDayOfWeek: void 0\n    });\n  }\n\n  _getFirstDayOfWeek() {\n    var firstDayOfWeek = this.option(\"firstDayOfWeek\");\n    return isDefined(firstDayOfWeek) ? firstDayOfWeek : dateLocalization.firstDayOfWeekIndex();\n  }\n\n  _createComponent(element, name) {\n    var config = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n\n    this._extendConfig(config, {\n      readOnly: this.option(\"readOnly\")\n    });\n\n    return super._createComponent(element, name, config);\n  }\n\n  _init() {\n    super._init();\n\n    this._recurrenceRule = new RecurrenceRule(this.option(\"value\"));\n  }\n\n  _render() {\n    super._render();\n\n    this.$element().addClass(RECURRENCE_EDITOR);\n    this._$container = $(\"<div>\").addClass(RECURRENCE_EDITOR_CONTAINER).appendTo(this.$element());\n\n    this._prepareEditors();\n\n    this._renderEditors(this._$container);\n  }\n\n  getEditorByField(fieldName) {\n    var editor = this.getRecurrenceForm().getEditor(fieldName);\n\n    if (!isDefined(editor)) {\n      switch (fieldName) {\n        case \"byday\":\n          editor = this._weekEditor;\n          break;\n\n        case \"count\":\n          editor = this._repeatCountEditor;\n          break;\n\n        case \"until\":\n          editor = this._repeatUntilDate;\n      }\n    }\n\n    return editor;\n  }\n\n  _prepareEditors() {\n    var freq = (this._recurrenceRule.getRules().freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase();\n    this._editors = [this._createFreqEditor(freq), this._createIntervalEditor(freq), this._createRepeatOnLabel(freq), {\n      itemType: \"group\",\n      cssClass: REPEAT_ON_EDITOR,\n      colCount: 2,\n      colCountByScreen: {\n        xs: 2\n      },\n      items: this._createRepeatOnEditor(freq)\n    }, {\n      itemType: \"group\",\n      items: this._createRepeatEndEditor()\n    }];\n    return this._editors;\n  }\n\n  _createFreqEditor(freq) {\n    return {\n      dataField: \"freq\",\n      name: \"FREQ\",\n      editorType: \"dxSelectBox\",\n      cssClass: FREQUENCY_EDITOR,\n      editorOptions: {\n        items: frequencies,\n        value: freq,\n        field: \"freq\",\n        valueExpr: \"value\",\n        displayExpr: \"text\",\n        layout: \"horizontal\",\n        elementAttr: {\n          class: FREQUENCY_EDITOR\n        },\n        onValueChanged: args => this._valueChangedHandler(args)\n      },\n      label: {\n        text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\")\n      }\n    };\n  }\n\n  _createIntervalEditor(freq) {\n    var interval = this._recurrenceRule.getRules().interval || 1;\n    return {\n      itemType: \"group\",\n      colCount: 2,\n      cssClass: \"\".concat(INTERVAL_EDITOR).concat(WRAPPER_POSTFIX),\n      colCountByScreen: {\n        xs: 2\n      },\n      items: [{\n        dataField: \"interval\",\n        editorType: \"dxNumberBox\",\n        editorOptions: {\n          format: \"#\",\n          width: recurrentEditorNumberBoxWidth,\n          min: 1,\n          field: \"interval\",\n          value: interval,\n          showSpinButtons: true,\n          useLargeSpinButtons: false,\n          elementAttr: {\n            class: INTERVAL_EDITOR\n          },\n          onValueChanged: args => this._valueChangedHandler(args)\n        },\n        label: {\n          text: messageLocalization.format(\"dxScheduler-recurrenceRepeatEvery\")\n        }\n      }, {\n        name: \"intervalLabel\",\n        cssClass: \"\".concat(INTERVAL_EDITOR).concat(LABEL_POSTFIX),\n        template: () => messageLocalization.format(\"dxScheduler-recurrenceRepeat\".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase()))\n      }]\n    };\n  }\n\n  _createRepeatOnLabel(freq) {\n    return {\n      itemType: \"group\",\n      cssClass: \"\".concat(REPEAT_ON_EDITOR).concat(LABEL_POSTFIX),\n      items: [{\n        name: \"repeatOnLabel\",\n        colSpan: 2,\n        template: () => messageLocalization.format(\"dxScheduler-recurrenceRepeatOn\"),\n        visible: freq && \"daily\" !== freq && \"hourly\" !== freq\n      }]\n    };\n  }\n\n  _createRepeatOnEditor(freq) {\n    return [this._createByDayEditor(freq), this._createByMonthEditor(freq), this._createByMonthDayEditor(freq)];\n  }\n\n  _createByDayEditor(freq) {\n    return {\n      dataField: \"byday\",\n      colSpan: 2,\n      template: (_, itemElement) => {\n        var firstDayOfWeek = this._getFirstDayOfWeek();\n\n        var byDay = this._daysOfWeekByRules();\n\n        var localDaysNames = dateLocalization.getDayNames(\"abbreviated\");\n        var dayNames = days.slice(firstDayOfWeek).concat(days.slice(0, firstDayOfWeek));\n        var itemsButtonGroup = localDaysNames.slice(firstDayOfWeek).concat(localDaysNames.slice(0, firstDayOfWeek)).map((item, index) => ({\n          text: item,\n          key: dayNames[index]\n        }));\n        this._$repeatOnWeek = $(\"<div>\").addClass(RECURRENCE_BUTTON_GROUP).appendTo(itemElement);\n        this._weekEditor = this._createComponent(this._$repeatOnWeek, ButtonGroup, {\n          items: itemsButtonGroup,\n          field: \"byday\",\n          selectionMode: \"multiple\",\n          selectedItemKeys: byDay,\n          keyExpr: \"key\",\n          onSelectionChanged: e => {\n            var selectedKeys = e.component.option(\"selectedItemKeys\");\n\n            this._recurrenceRule.makeRule(\"byday\", selectedKeys);\n\n            this._changeEditorValue();\n          }\n        });\n      },\n      visible: \"weekly\" === freq,\n      label: {\n        visible: false\n      }\n    };\n  }\n\n  _createByMonthEditor(freq) {\n    var monthsName = dateLocalization.getMonthNames(\"wide\");\n    var months = [...Array(12)].map((_, i) => ({\n      value: \"\".concat(i + 1),\n      text: monthsName[i]\n    }));\n    return {\n      dataField: \"bymonth\",\n      editorType: \"dxSelectBox\",\n      editorOptions: {\n        field: \"bymonth\",\n        items: months,\n        value: this._monthOfYearByRules(),\n        width: recurrentEditorSelectBoxWidth,\n        displayExpr: \"text\",\n        valueExpr: \"value\",\n        elementAttr: {\n          class: MONTH_OF_YEAR\n        },\n        onValueChanged: args => this._valueChangedHandler(args)\n      },\n      visible: \"yearly\" === freq,\n      label: {\n        visible: false\n      }\n    };\n  }\n\n  _createByMonthDayEditor(freq) {\n    return {\n      dataField: \"bymonthday\",\n      editorType: \"dxNumberBox\",\n      editorOptions: {\n        min: 1,\n        max: 31,\n        format: \"#\",\n        width: recurrentEditorNumberBoxWidth,\n        field: \"bymonthday\",\n        showSpinButtons: true,\n        useLargeSpinButtons: false,\n        value: this._dayOfMonthByRules(),\n        elementAttr: {\n          class: DAY_OF_MONTH\n        },\n        onValueChanged: args => this._valueChangedHandler(args)\n      },\n      visible: \"monthly\" === freq || \"yearly\" === freq,\n      label: {\n        visible: false\n      }\n    };\n  }\n\n  _createRepeatEndEditor() {\n    var repeatType = this._recurrenceRule.getRepeatEndRule();\n\n    return [{\n      dataField: \"repeatEnd\",\n      editorType: \"dxRadioGroup\",\n      editorOptions: {\n        items: repeatEndTypes,\n        value: repeatType,\n        valueExpr: \"type\",\n        field: \"repeatEnd\",\n        itemTemplate: itemData => {\n          if (\"count\" === itemData.type) {\n            return this._renderRepeatCountEditor();\n          }\n\n          if (\"until\" === itemData.type) {\n            return this._renderRepeatUntilEditor();\n          }\n\n          return this._renderDefaultRepeatEnd();\n        },\n        layout: \"vertical\",\n        elementAttr: {\n          class: REPEAT_END_TYPE_EDITOR\n        },\n        onValueChanged: args => this._repeatEndValueChangedHandler(args)\n      },\n      label: {\n        text: messageLocalization.format(\"dxScheduler-recurrenceEnd\")\n      }\n    }];\n  }\n\n  _renderEditors($container) {\n    this._recurrenceForm = this._createComponent($container, Form, {\n      items: this._editors,\n      showValidationSummary: false,\n      scrollingEnabled: true,\n      showColonAfterLabel: false,\n      labelLocation: \"top\"\n    });\n\n    this._disableRepeatEndParts();\n  }\n\n  _setAriaDescribedBy(editor, $label) {\n    var labelId = \"label-\".concat(new Guid());\n    editor.setAria(\"describedby\", labelId);\n    editor.setAria(\"id\", labelId, $label);\n  }\n\n  getRecurrenceForm() {\n    return this._recurrenceForm;\n  }\n\n  changeValueByVisibility(value) {\n    if (value) {\n      if (!this.option(\"value\")) {\n        this._handleDefaults();\n      }\n    } else {\n      this._recurrenceRule.makeRules(\"\");\n\n      this.option(\"value\", \"\");\n    }\n  }\n\n  _handleDefaults() {\n    this._recurrenceRule.makeRule(\"freq\", frequenciesMessages[defaultRecurrenceTypeIndex].value);\n\n    this._changeEditorValue();\n  }\n\n  _changeEditorValue() {\n    this.option(\"value\", this._recurrenceRule.getRecurrenceString() || \"\");\n  }\n\n  _daysOfWeekByRules() {\n    var daysByRule = this._recurrenceRule.getDaysFromByDayRule();\n\n    if (!daysByRule.length) {\n      daysByRule = [days[this.option(\"startDate\").getDay()]];\n    }\n\n    return daysByRule;\n  }\n\n  _dayOfMonthByRules() {\n    var dayByRule = this._recurrenceRule.getRules().bymonthday;\n\n    if (!dayByRule) {\n      dayByRule = this.option(\"startDate\").getDate();\n    }\n\n    return dayByRule;\n  }\n\n  _monthOfYearByRules() {\n    var monthByRule = this._recurrenceRule.getRules().bymonth;\n\n    if (!monthByRule) {\n      monthByRule = this.option(\"startDate\").getMonth() + 1;\n    }\n\n    return String(monthByRule);\n  }\n\n  _renderDefaultRepeatEnd() {\n    var $editorTemplate = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\n    $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceNever\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorTemplate);\n    return $editorTemplate;\n  }\n\n  _repeatEndValueChangedHandler(args) {\n    var value = args.value;\n\n    this._disableRepeatEndParts(value);\n\n    if (\"until\" === value) {\n      this._recurrenceRule.makeRule(value, this._getUntilValue());\n    }\n\n    if (\"count\" === value) {\n      this._recurrenceRule.makeRule(value, this._repeatCountEditor.option(\"value\"));\n    }\n\n    if (\"never\" === value) {\n      this._recurrenceRule.makeRule(\"count\", \"\");\n\n      this._recurrenceRule.makeRule(\"until\", \"\");\n    }\n\n    this._changeEditorValue();\n  }\n\n  _disableRepeatEndParts() {\n    var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._recurrenceRule.getRepeatEndRule();\n\n    if (\"until\" === value) {\n      this._repeatCountEditor.option(\"disabled\", true);\n\n      this._repeatUntilDate.option(\"disabled\", false);\n    }\n\n    if (\"count\" === value) {\n      this._repeatCountEditor.option(\"disabled\", false);\n\n      this._repeatUntilDate.option(\"disabled\", true);\n    }\n\n    if (\"never\" === value) {\n      this._repeatCountEditor.option(\"disabled\", true);\n\n      this._repeatUntilDate.option(\"disabled\", true);\n    }\n  }\n\n  _renderRepeatCountEditor() {\n    var repeatCount = this._recurrenceRule.getRules().count || 1;\n    var $editorWrapper = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\n    $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceAfter\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\n    this._$repeatCountEditor = $(\"<div>\").addClass(REPEAT_COUNT_EDITOR).appendTo($editorWrapper);\n    $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceRepeatCount\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\n    this._repeatCountEditor = this._createComponent(this._$repeatCountEditor, NumberBox, {\n      field: \"count\",\n      format: \"#\",\n      width: recurrentEditorNumberBoxWidth,\n      min: 1,\n      showSpinButtons: true,\n      useLargeSpinButtons: false,\n      value: repeatCount,\n      onValueChanged: this._repeatCountValueChangeHandler.bind(this)\n    });\n    return $editorWrapper;\n  }\n\n  _repeatCountValueChangeHandler(args) {\n    if (\"count\" === this._recurrenceRule.getRepeatEndRule()) {\n      var value = args.value;\n\n      this._recurrenceRule.makeRule(\"count\", value);\n\n      this._changeEditorValue();\n    }\n  }\n\n  _formatUntilDate(date) {\n    if (this._recurrenceRule.getRules().until && dateUtils.sameDate(this._recurrenceRule.getRules().until, date)) {\n      return date;\n    }\n\n    return dateUtils.setToDayEnd(date);\n  }\n\n  _renderRepeatUntilEditor() {\n    var repeatUntil = this._recurrenceRule.getRules().until || this._formatUntilDate(new Date());\n\n    var $editorWrapper = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\n    $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceOn\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\n    this._$repeatDateEditor = $(\"<div>\").addClass(REPEAT_UNTIL_DATE_EDITOR).appendTo($editorWrapper);\n    this._repeatUntilDate = this._createComponent(this._$repeatDateEditor, DateBox, {\n      field: \"until\",\n      value: repeatUntil,\n      type: \"date\",\n      onValueChanged: this._repeatUntilValueChangeHandler.bind(this),\n      calendarOptions: {\n        firstDayOfWeek: this._getFirstDayOfWeek()\n      },\n      useMaskBehavior: true\n    });\n    return $editorWrapper;\n  }\n\n  _repeatUntilValueChangeHandler(args) {\n    if (\"until\" === this._recurrenceRule.getRepeatEndRule()) {\n      var untilDate = this._formatUntilDate(new Date(args.value));\n\n      this._repeatUntilDate.option(\"value\", untilDate);\n\n      this._recurrenceRule.makeRule(\"until\", untilDate);\n\n      this._changeEditorValue();\n    }\n  }\n\n  _valueChangedHandler(args) {\n    var {\n      value: value,\n      previousValue: previousValue\n    } = args;\n    var field = args.component.option(\"field\");\n\n    if (!this.option(\"visible\")) {\n      this.option(\"value\", \"\");\n    } else {\n      this._recurrenceRule.makeRule(field, value);\n\n      if (\"freq\" === field) {\n        this._makeRepeatOnRule(value);\n\n        this._changeRepeatOnVisibility(value, previousValue);\n      }\n\n      this._changeEditorValue();\n    }\n  }\n\n  _makeRepeatOnRule(value) {\n    if (\"daily\" === value || \"hourly\" === value) {\n      this._recurrenceRule.makeRule(\"byday\", \"\");\n\n      this._recurrenceRule.makeRule(\"bymonth\", \"\");\n\n      this._recurrenceRule.makeRule(\"bymonthday\", \"\");\n    }\n\n    if (\"weekly\" === value) {\n      this._recurrenceRule.makeRule(\"byday\", this._daysOfWeekByRules());\n\n      this._recurrenceRule.makeRule(\"bymonth\", \"\");\n\n      this._recurrenceRule.makeRule(\"bymonthday\", \"\");\n    }\n\n    if (\"monthly\" === value) {\n      this._recurrenceRule.makeRule(\"bymonthday\", this._dayOfMonthByRules());\n\n      this._recurrenceRule.makeRule(\"bymonth\", \"\");\n\n      this._recurrenceRule.makeRule(\"byday\", \"\");\n    }\n\n    if (\"yearly\" === value) {\n      this._recurrenceRule.makeRule(\"bymonthday\", this._dayOfMonthByRules());\n\n      this._recurrenceRule.makeRule(\"bymonth\", this._monthOfYearByRules());\n\n      this._recurrenceRule.makeRule(\"byday\", \"\");\n    }\n  }\n\n  _optionChanged(args) {\n    var _this$_recurrenceForm, _this$_repeatCountEdi, _this$_weekEditor, _this$_repeatUntilDat;\n\n    switch (args.name) {\n      case \"readOnly\":\n        null === (_this$_recurrenceForm = this._recurrenceForm) || void 0 === _this$_recurrenceForm ? void 0 : _this$_recurrenceForm.option(\"readOnly\", args.value);\n        null === (_this$_repeatCountEdi = this._repeatCountEditor) || void 0 === _this$_repeatCountEdi ? void 0 : _this$_repeatCountEdi.option(\"readOnly\", args.value);\n        null === (_this$_weekEditor = this._weekEditor) || void 0 === _this$_weekEditor ? void 0 : _this$_weekEditor.option(\"readOnly\", args.value);\n        null === (_this$_repeatUntilDat = this._repeatUntilDate) || void 0 === _this$_repeatUntilDat ? void 0 : _this$_repeatUntilDat.option(\"readOnly\", args.value);\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"value\":\n        this._recurrenceRule.makeRules(args.value);\n\n        this._changeRepeatIntervalLabel();\n\n        this._disableRepeatEndParts();\n\n        this._changeEditorsValue(this._recurrenceRule.getRules());\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"startDate\":\n        this._makeRepeatOnRule(this._recurrenceRule.getRules().freq);\n\n        if (isDefined(this._recurrenceRule.getRecurrenceString())) {\n          this._changeEditorValue();\n        }\n\n        break;\n\n      case \"firstDayOfWeek\":\n        if (this._weekEditor) {\n          var localDaysNames = dateLocalization.getDayNames(\"abbreviated\");\n          var dayNames = days.slice(args.value).concat(days.slice(0, args.value));\n          var itemsButtonGroup = localDaysNames.slice(args.value).concat(localDaysNames.slice(0, args.value)).map((item, index) => ({\n            text: item,\n            key: dayNames[index]\n          }));\n\n          this._weekEditor.option(\"items\", itemsButtonGroup);\n        }\n\n        if (this._$repeatDateEditor) {\n          this._repeatUntilDate.option(\"calendarOptions.firstDayOfWeek\", this._getFirstDayOfWeek());\n        }\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _changeRepeatOnVisibility(freq, previousFreq) {\n    if (freq !== previousFreq) {\n      this._recurrenceForm.itemOption(\"byday\", \"visible\", false);\n\n      this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", false);\n\n      this._recurrenceForm.itemOption(\"bymonth\", \"visible\", false);\n\n      this._recurrenceForm.itemOption(\"repeatOnLabel\", \"visible\", freq && \"daily\" !== freq && \"hourly\" !== freq);\n\n      if (\"weekly\" === freq) {\n        this._recurrenceForm.itemOption(\"byday\", \"visible\", true);\n      }\n\n      if (\"monthly\" === freq) {\n        this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", true);\n      }\n\n      if (\"yearly\" === freq) {\n        this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", true);\n\n        this._recurrenceForm.itemOption(\"bymonth\", \"visible\", true);\n      }\n    }\n  }\n\n  _changeRepeatIntervalLabel() {\n    var freq = this._recurrenceRule.getRules().freq;\n\n    freq && this._recurrenceForm.itemOption(\"intervalLabel\", \"template\", messageLocalization.format(\"dxScheduler-recurrenceRepeat\".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase())));\n  }\n\n  _changeEditorsValue(rules) {\n    this._recurrenceForm.getEditor(\"freq\").option(\"value\", (rules.freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase());\n\n    this._changeDayOfWeekValue();\n\n    this._changeDayOfMonthValue();\n\n    this._changeMonthOfYearValue();\n\n    this._changeIntervalValue(rules.interval);\n\n    this._changeRepeatCountValue();\n\n    this._changeRepeatEndValue();\n\n    this._changeRepeatUntilValue();\n  }\n\n  _changeIntervalValue(value) {\n    this._recurrenceForm.getEditor(\"interval\").option(\"value\", value || 1);\n  }\n\n  _changeRepeatEndValue() {\n    var repeatType = this._recurrenceRule.getRepeatEndRule();\n\n    this._recurrenceForm.getEditor(\"repeatEnd\").option(\"value\", repeatType);\n  }\n\n  _changeDayOfWeekValue() {\n    var isEditorVisible = this._recurrenceForm.itemOption(\"byday\").visible;\n\n    if (isEditorVisible) {\n      var _days = this._daysOfWeekByRules();\n\n      this.getEditorByField(\"byday\").option(\"selectedItemKeys\", _days);\n    }\n  }\n\n  _changeDayOfMonthValue() {\n    var isEditorVisible = this._recurrenceForm.itemOption(\"bymonthday\").visible;\n\n    if (isEditorVisible) {\n      var day = this._dayOfMonthByRules();\n\n      this._recurrenceForm.getEditor(\"bymonthday\").option(\"value\", day);\n    }\n  }\n\n  _changeMonthOfYearValue() {\n    var isEditorVisible = this._recurrenceForm.itemOption(\"bymonth\").visible;\n\n    if (isEditorVisible) {\n      var month = this._monthOfYearByRules();\n\n      this._recurrenceForm.getEditor(\"bymonth\").option(\"value\", month);\n    }\n  }\n\n  _changeRepeatCountValue() {\n    var count = this._recurrenceRule.getRules().count || 1;\n\n    this._repeatCountEditor.option(\"value\", count);\n  }\n\n  _changeRepeatUntilValue() {\n    this._repeatUntilDate.option(\"value\", this._getUntilValue());\n  }\n\n  _getUntilValue() {\n    return this._recurrenceRule.getRules().until || this._formatUntilDate(new Date());\n  }\n\n  toggle() {\n    this._freqEditor.focus();\n  }\n\n  setAria() {\n    if (this._switchEditor) {\n      this._switchEditor.setAria(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1]);\n    }\n  }\n\n}\n\nregisterComponent(\"dxRecurrenceEditor\", RecurrenceEditor);\nexport default RecurrenceEditor;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/recurrence_editor.js"],"names":["registerComponent","Guid","$","dateUtils","extend","isDefined","dateLocalization","messageLocalization","Form","ButtonGroup","DateBox","Editor","NumberBox","getRecurrenceProcessor","RECURRENCE_EDITOR","LABEL_POSTFIX","WRAPPER_POSTFIX","RECURRENCE_EDITOR_CONTAINER","REPEAT_END_EDITOR","REPEAT_END_TYPE_EDITOR","REPEAT_COUNT_EDITOR","REPEAT_UNTIL_DATE_EDITOR","RECURRENCE_BUTTON_GROUP","FREQUENCY_EDITOR","INTERVAL_EDITOR","REPEAT_ON_EDITOR","DAY_OF_MONTH","MONTH_OF_YEAR","recurrentEditorNumberBoxWidth","recurrentEditorSelectBoxWidth","defaultRecurrenceTypeIndex","frequenciesMessages","recurrence","value","frequencies","map","item","text","format","repeatEndTypes","type","days","RecurrenceRule","constructor","rule","_recurrenceProcessor","_recurrenceRule","evalRecurrenceRule","makeRules","string","makeRule","field","Array","isArray","length","count","until","getRepeatEndRule","rules","getRecurrenceString","getRules","getDaysFromByDayRule","daysFromByDayRule","RecurrenceEditor","_getDefaultOptions","defaultOptions","startDate","Date","firstDayOfWeek","_getFirstDayOfWeek","option","firstDayOfWeekIndex","_createComponent","element","name","config","arguments","_extendConfig","readOnly","_init","_render","$element","addClass","_$container","appendTo","_prepareEditors","_renderEditors","getEditorByField","fieldName","editor","getRecurrenceForm","getEditor","_weekEditor","_repeatCountEditor","_repeatUntilDate","freq","toLowerCase","_editors","_createFreqEditor","_createIntervalEditor","_createRepeatOnLabel","itemType","cssClass","colCount","colCountByScreen","xs","items","_createRepeatOnEditor","_createRepeatEndEditor","dataField","editorType","editorOptions","valueExpr","displayExpr","layout","elementAttr","class","onValueChanged","args","_valueChangedHandler","label","interval","concat","width","min","showSpinButtons","useLargeSpinButtons","template","charAt","toUpperCase","substr","colSpan","visible","_createByDayEditor","_createByMonthEditor","_createByMonthDayEditor","_","itemElement","byDay","_daysOfWeekByRules","localDaysNames","getDayNames","dayNames","slice","itemsButtonGroup","index","key","_$repeatOnWeek","selectionMode","selectedItemKeys","keyExpr","onSelectionChanged","e","selectedKeys","component","_changeEditorValue","monthsName","getMonthNames","months","i","_monthOfYearByRules","max","_dayOfMonthByRules","repeatType","itemTemplate","itemData","_renderRepeatCountEditor","_renderRepeatUntilEditor","_renderDefaultRepeatEnd","_repeatEndValueChangedHandler","$container","_recurrenceForm","showValidationSummary","scrollingEnabled","showColonAfterLabel","labelLocation","_disableRepeatEndParts","_setAriaDescribedBy","$label","labelId","setAria","changeValueByVisibility","_handleDefaults","daysByRule","getDay","dayByRule","bymonthday","getDate","monthByRule","bymonth","getMonth","String","$editorTemplate","_getUntilValue","repeatCount","$editorWrapper","_$repeatCountEditor","_repeatCountValueChangeHandler","bind","_formatUntilDate","date","sameDate","setToDayEnd","repeatUntil","_$repeatDateEditor","_repeatUntilValueChangeHandler","calendarOptions","useMaskBehavior","untilDate","previousValue","_makeRepeatOnRule","_changeRepeatOnVisibility","_optionChanged","_this$_recurrenceForm","_this$_repeatCountEdi","_this$_weekEditor","_this$_repeatUntilDat","_changeRepeatIntervalLabel","_changeEditorsValue","previousFreq","itemOption","_changeDayOfWeekValue","_changeDayOfMonthValue","_changeMonthOfYearValue","_changeIntervalValue","_changeRepeatCountValue","_changeRepeatEndValue","_changeRepeatUntilValue","isEditorVisible","_days","day","month","toggle","_freqEditor","focus","_switchEditor"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/recurrence_editor.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport Guid from \"../../core/guid\";\r\nimport $ from \"../../core/renderer\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Form from \"../form\";\r\nimport ButtonGroup from \"../button_group\";\r\nimport DateBox from \"../date_box\";\r\nimport Editor from \"../editor/editor\";\r\nimport NumberBox from \"../number_box\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport \"../radio_group\";\r\nvar RECURRENCE_EDITOR = \"dx-recurrence-editor\";\r\nvar LABEL_POSTFIX = \"-label\";\r\nvar WRAPPER_POSTFIX = \"-wrapper\";\r\nvar RECURRENCE_EDITOR_CONTAINER = \"dx-recurrence-editor-container\";\r\nvar REPEAT_END_EDITOR = \"dx-recurrence-repeat-end\";\r\nvar REPEAT_END_TYPE_EDITOR = \"dx-recurrence-radiogroup-repeat-type\";\r\nvar REPEAT_COUNT_EDITOR = \"dx-recurrence-numberbox-repeat-count\";\r\nvar REPEAT_UNTIL_DATE_EDITOR = \"dx-recurrence-datebox-until-date\";\r\nvar RECURRENCE_BUTTON_GROUP = \"dx-recurrence-button-group\";\r\nvar FREQUENCY_EDITOR = \"dx-recurrence-selectbox-freq\";\r\nvar INTERVAL_EDITOR = \"dx-recurrence-numberbox-interval\";\r\nvar REPEAT_ON_EDITOR = \"dx-recurrence-repeat-on\";\r\nvar DAY_OF_MONTH = \"dx-recurrence-numberbox-day-of-month\";\r\nvar MONTH_OF_YEAR = \"dx-recurrence-selectbox-month-of-year\";\r\nvar recurrentEditorNumberBoxWidth = 70;\r\nvar recurrentEditorSelectBoxWidth = 120;\r\nvar defaultRecurrenceTypeIndex = 1;\r\nvar frequenciesMessages = [{\r\n    recurrence: \"dxScheduler-recurrenceHourly\",\r\n    value: \"hourly\"\r\n}, {\r\n    recurrence: \"dxScheduler-recurrenceDaily\",\r\n    value: \"daily\"\r\n}, {\r\n    recurrence: \"dxScheduler-recurrenceWeekly\",\r\n    value: \"weekly\"\r\n}, {\r\n    recurrence: \"dxScheduler-recurrenceMonthly\",\r\n    value: \"monthly\"\r\n}, {\r\n    recurrence: \"dxScheduler-recurrenceYearly\",\r\n    value: \"yearly\"\r\n}];\r\nvar frequencies = frequenciesMessages.map(item => ({\r\n    text: () => messageLocalization.format(item.recurrence),\r\n    value: item.value\r\n}));\r\nvar repeatEndTypes = [{\r\n    type: \"never\"\r\n}, {\r\n    type: \"until\"\r\n}, {\r\n    type: \"count\"\r\n}];\r\nvar days = [\"SU\", \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\"];\r\nclass RecurrenceRule {\r\n    constructor(rule) {\r\n        this._recurrenceProcessor = getRecurrenceProcessor();\r\n        this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(rule).rule\r\n    }\r\n    makeRules(string) {\r\n        this._recurrenceRule = this._recurrenceProcessor.evalRecurrenceRule(string).rule\r\n    }\r\n    makeRule(field, value) {\r\n        if (!value || Array.isArray(value) && !value.length) {\r\n            delete this._recurrenceRule[field];\r\n            return\r\n        }\r\n        if (isDefined(field)) {\r\n            if (\"until\" === field) {\r\n                delete this._recurrenceRule.count\r\n            }\r\n            if (\"count\" === field) {\r\n                delete this._recurrenceRule.until\r\n            }\r\n            this._recurrenceRule[field] = value\r\n        }\r\n    }\r\n    getRepeatEndRule() {\r\n        var rules = this._recurrenceRule;\r\n        if (\"count\" in rules) {\r\n            return \"count\"\r\n        }\r\n        if (\"until\" in rules) {\r\n            return \"until\"\r\n        }\r\n        return \"never\"\r\n    }\r\n    getRecurrenceString() {\r\n        return this._recurrenceProcessor.getRecurrenceString(this._recurrenceRule)\r\n    }\r\n    getRules() {\r\n        return this._recurrenceRule\r\n    }\r\n    getDaysFromByDayRule() {\r\n        return this._recurrenceProcessor.daysFromByDayRule(this._recurrenceRule)\r\n    }\r\n}\r\nclass RecurrenceEditor extends Editor {\r\n    _getDefaultOptions() {\r\n        var defaultOptions = super._getDefaultOptions();\r\n        return extend(defaultOptions, {\r\n            value: null,\r\n            startDate: new Date,\r\n            firstDayOfWeek: void 0\r\n        })\r\n    }\r\n    _getFirstDayOfWeek() {\r\n        var firstDayOfWeek = this.option(\"firstDayOfWeek\");\r\n        return isDefined(firstDayOfWeek) ? firstDayOfWeek : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    _createComponent(element, name) {\r\n        var config = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n        this._extendConfig(config, {\r\n            readOnly: this.option(\"readOnly\")\r\n        });\r\n        return super._createComponent(element, name, config)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._recurrenceRule = new RecurrenceRule(this.option(\"value\"))\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this.$element().addClass(RECURRENCE_EDITOR);\r\n        this._$container = $(\"<div>\").addClass(RECURRENCE_EDITOR_CONTAINER).appendTo(this.$element());\r\n        this._prepareEditors();\r\n        this._renderEditors(this._$container)\r\n    }\r\n    getEditorByField(fieldName) {\r\n        var editor = this.getRecurrenceForm().getEditor(fieldName);\r\n        if (!isDefined(editor)) {\r\n            switch (fieldName) {\r\n                case \"byday\":\r\n                    editor = this._weekEditor;\r\n                    break;\r\n                case \"count\":\r\n                    editor = this._repeatCountEditor;\r\n                    break;\r\n                case \"until\":\r\n                    editor = this._repeatUntilDate\r\n            }\r\n        }\r\n        return editor\r\n    }\r\n    _prepareEditors() {\r\n        var freq = (this._recurrenceRule.getRules().freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase();\r\n        this._editors = [this._createFreqEditor(freq), this._createIntervalEditor(freq), this._createRepeatOnLabel(freq), {\r\n            itemType: \"group\",\r\n            cssClass: REPEAT_ON_EDITOR,\r\n            colCount: 2,\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            items: this._createRepeatOnEditor(freq)\r\n        }, {\r\n            itemType: \"group\",\r\n            items: this._createRepeatEndEditor()\r\n        }];\r\n        return this._editors\r\n    }\r\n    _createFreqEditor(freq) {\r\n        return {\r\n            dataField: \"freq\",\r\n            name: \"FREQ\",\r\n            editorType: \"dxSelectBox\",\r\n            cssClass: FREQUENCY_EDITOR,\r\n            editorOptions: {\r\n                items: frequencies,\r\n                value: freq,\r\n                field: \"freq\",\r\n                valueExpr: \"value\",\r\n                displayExpr: \"text\",\r\n                layout: \"horizontal\",\r\n                elementAttr: {\r\n                    class: FREQUENCY_EDITOR\r\n                },\r\n                onValueChanged: args => this._valueChangedHandler(args)\r\n            },\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-editorLabelRecurrence\")\r\n            }\r\n        }\r\n    }\r\n    _createIntervalEditor(freq) {\r\n        var interval = this._recurrenceRule.getRules().interval || 1;\r\n        return {\r\n            itemType: \"group\",\r\n            colCount: 2,\r\n            cssClass: \"\".concat(INTERVAL_EDITOR).concat(WRAPPER_POSTFIX),\r\n            colCountByScreen: {\r\n                xs: 2\r\n            },\r\n            items: [{\r\n                dataField: \"interval\",\r\n                editorType: \"dxNumberBox\",\r\n                editorOptions: {\r\n                    format: \"#\",\r\n                    width: recurrentEditorNumberBoxWidth,\r\n                    min: 1,\r\n                    field: \"interval\",\r\n                    value: interval,\r\n                    showSpinButtons: true,\r\n                    useLargeSpinButtons: false,\r\n                    elementAttr: {\r\n                        class: INTERVAL_EDITOR\r\n                    },\r\n                    onValueChanged: args => this._valueChangedHandler(args)\r\n                },\r\n                label: {\r\n                    text: messageLocalization.format(\"dxScheduler-recurrenceRepeatEvery\")\r\n                }\r\n            }, {\r\n                name: \"intervalLabel\",\r\n                cssClass: \"\".concat(INTERVAL_EDITOR).concat(LABEL_POSTFIX),\r\n                template: () => messageLocalization.format(\"dxScheduler-recurrenceRepeat\".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase()))\r\n            }]\r\n        }\r\n    }\r\n    _createRepeatOnLabel(freq) {\r\n        return {\r\n            itemType: \"group\",\r\n            cssClass: \"\".concat(REPEAT_ON_EDITOR).concat(LABEL_POSTFIX),\r\n            items: [{\r\n                name: \"repeatOnLabel\",\r\n                colSpan: 2,\r\n                template: () => messageLocalization.format(\"dxScheduler-recurrenceRepeatOn\"),\r\n                visible: freq && \"daily\" !== freq && \"hourly\" !== freq\r\n            }]\r\n        }\r\n    }\r\n    _createRepeatOnEditor(freq) {\r\n        return [this._createByDayEditor(freq), this._createByMonthEditor(freq), this._createByMonthDayEditor(freq)]\r\n    }\r\n    _createByDayEditor(freq) {\r\n        return {\r\n            dataField: \"byday\",\r\n            colSpan: 2,\r\n            template: (_, itemElement) => {\r\n                var firstDayOfWeek = this._getFirstDayOfWeek();\r\n                var byDay = this._daysOfWeekByRules();\r\n                var localDaysNames = dateLocalization.getDayNames(\"abbreviated\");\r\n                var dayNames = days.slice(firstDayOfWeek).concat(days.slice(0, firstDayOfWeek));\r\n                var itemsButtonGroup = localDaysNames.slice(firstDayOfWeek).concat(localDaysNames.slice(0, firstDayOfWeek)).map((item, index) => ({\r\n                    text: item,\r\n                    key: dayNames[index]\r\n                }));\r\n                this._$repeatOnWeek = $(\"<div>\").addClass(RECURRENCE_BUTTON_GROUP).appendTo(itemElement);\r\n                this._weekEditor = this._createComponent(this._$repeatOnWeek, ButtonGroup, {\r\n                    items: itemsButtonGroup,\r\n                    field: \"byday\",\r\n                    selectionMode: \"multiple\",\r\n                    selectedItemKeys: byDay,\r\n                    keyExpr: \"key\",\r\n                    onSelectionChanged: e => {\r\n                        var selectedKeys = e.component.option(\"selectedItemKeys\");\r\n                        this._recurrenceRule.makeRule(\"byday\", selectedKeys);\r\n                        this._changeEditorValue()\r\n                    }\r\n                })\r\n            },\r\n            visible: \"weekly\" === freq,\r\n            label: {\r\n                visible: false\r\n            }\r\n        }\r\n    }\r\n    _createByMonthEditor(freq) {\r\n        var monthsName = dateLocalization.getMonthNames(\"wide\");\r\n        var months = [...Array(12)].map((_, i) => ({\r\n            value: \"\".concat(i + 1),\r\n            text: monthsName[i]\r\n        }));\r\n        return {\r\n            dataField: \"bymonth\",\r\n            editorType: \"dxSelectBox\",\r\n            editorOptions: {\r\n                field: \"bymonth\",\r\n                items: months,\r\n                value: this._monthOfYearByRules(),\r\n                width: recurrentEditorSelectBoxWidth,\r\n                displayExpr: \"text\",\r\n                valueExpr: \"value\",\r\n                elementAttr: {\r\n                    class: MONTH_OF_YEAR\r\n                },\r\n                onValueChanged: args => this._valueChangedHandler(args)\r\n            },\r\n            visible: \"yearly\" === freq,\r\n            label: {\r\n                visible: false\r\n            }\r\n        }\r\n    }\r\n    _createByMonthDayEditor(freq) {\r\n        return {\r\n            dataField: \"bymonthday\",\r\n            editorType: \"dxNumberBox\",\r\n            editorOptions: {\r\n                min: 1,\r\n                max: 31,\r\n                format: \"#\",\r\n                width: recurrentEditorNumberBoxWidth,\r\n                field: \"bymonthday\",\r\n                showSpinButtons: true,\r\n                useLargeSpinButtons: false,\r\n                value: this._dayOfMonthByRules(),\r\n                elementAttr: {\r\n                    class: DAY_OF_MONTH\r\n                },\r\n                onValueChanged: args => this._valueChangedHandler(args)\r\n            },\r\n            visible: \"monthly\" === freq || \"yearly\" === freq,\r\n            label: {\r\n                visible: false\r\n            }\r\n        }\r\n    }\r\n    _createRepeatEndEditor() {\r\n        var repeatType = this._recurrenceRule.getRepeatEndRule();\r\n        return [{\r\n            dataField: \"repeatEnd\",\r\n            editorType: \"dxRadioGroup\",\r\n            editorOptions: {\r\n                items: repeatEndTypes,\r\n                value: repeatType,\r\n                valueExpr: \"type\",\r\n                field: \"repeatEnd\",\r\n                itemTemplate: itemData => {\r\n                    if (\"count\" === itemData.type) {\r\n                        return this._renderRepeatCountEditor()\r\n                    }\r\n                    if (\"until\" === itemData.type) {\r\n                        return this._renderRepeatUntilEditor()\r\n                    }\r\n                    return this._renderDefaultRepeatEnd()\r\n                },\r\n                layout: \"vertical\",\r\n                elementAttr: {\r\n                    class: REPEAT_END_TYPE_EDITOR\r\n                },\r\n                onValueChanged: args => this._repeatEndValueChangedHandler(args)\r\n            },\r\n            label: {\r\n                text: messageLocalization.format(\"dxScheduler-recurrenceEnd\")\r\n            }\r\n        }]\r\n    }\r\n    _renderEditors($container) {\r\n        this._recurrenceForm = this._createComponent($container, Form, {\r\n            items: this._editors,\r\n            showValidationSummary: false,\r\n            scrollingEnabled: true,\r\n            showColonAfterLabel: false,\r\n            labelLocation: \"top\"\r\n        });\r\n        this._disableRepeatEndParts()\r\n    }\r\n    _setAriaDescribedBy(editor, $label) {\r\n        var labelId = \"label-\".concat(new Guid);\r\n        editor.setAria(\"describedby\", labelId);\r\n        editor.setAria(\"id\", labelId, $label)\r\n    }\r\n    getRecurrenceForm() {\r\n        return this._recurrenceForm\r\n    }\r\n    changeValueByVisibility(value) {\r\n        if (value) {\r\n            if (!this.option(\"value\")) {\r\n                this._handleDefaults()\r\n            }\r\n        } else {\r\n            this._recurrenceRule.makeRules(\"\");\r\n            this.option(\"value\", \"\")\r\n        }\r\n    }\r\n    _handleDefaults() {\r\n        this._recurrenceRule.makeRule(\"freq\", frequenciesMessages[defaultRecurrenceTypeIndex].value);\r\n        this._changeEditorValue()\r\n    }\r\n    _changeEditorValue() {\r\n        this.option(\"value\", this._recurrenceRule.getRecurrenceString() || \"\")\r\n    }\r\n    _daysOfWeekByRules() {\r\n        var daysByRule = this._recurrenceRule.getDaysFromByDayRule();\r\n        if (!daysByRule.length) {\r\n            daysByRule = [days[this.option(\"startDate\").getDay()]]\r\n        }\r\n        return daysByRule\r\n    }\r\n    _dayOfMonthByRules() {\r\n        var dayByRule = this._recurrenceRule.getRules().bymonthday;\r\n        if (!dayByRule) {\r\n            dayByRule = this.option(\"startDate\").getDate()\r\n        }\r\n        return dayByRule\r\n    }\r\n    _monthOfYearByRules() {\r\n        var monthByRule = this._recurrenceRule.getRules().bymonth;\r\n        if (!monthByRule) {\r\n            monthByRule = this.option(\"startDate\").getMonth() + 1\r\n        }\r\n        return String(monthByRule)\r\n    }\r\n    _renderDefaultRepeatEnd() {\r\n        var $editorTemplate = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceNever\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorTemplate);\r\n        return $editorTemplate\r\n    }\r\n    _repeatEndValueChangedHandler(args) {\r\n        var value = args.value;\r\n        this._disableRepeatEndParts(value);\r\n        if (\"until\" === value) {\r\n            this._recurrenceRule.makeRule(value, this._getUntilValue())\r\n        }\r\n        if (\"count\" === value) {\r\n            this._recurrenceRule.makeRule(value, this._repeatCountEditor.option(\"value\"))\r\n        }\r\n        if (\"never\" === value) {\r\n            this._recurrenceRule.makeRule(\"count\", \"\");\r\n            this._recurrenceRule.makeRule(\"until\", \"\")\r\n        }\r\n        this._changeEditorValue()\r\n    }\r\n    _disableRepeatEndParts() {\r\n        var value = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._recurrenceRule.getRepeatEndRule();\r\n        if (\"until\" === value) {\r\n            this._repeatCountEditor.option(\"disabled\", true);\r\n            this._repeatUntilDate.option(\"disabled\", false)\r\n        }\r\n        if (\"count\" === value) {\r\n            this._repeatCountEditor.option(\"disabled\", false);\r\n            this._repeatUntilDate.option(\"disabled\", true)\r\n        }\r\n        if (\"never\" === value) {\r\n            this._repeatCountEditor.option(\"disabled\", true);\r\n            this._repeatUntilDate.option(\"disabled\", true)\r\n        }\r\n    }\r\n    _renderRepeatCountEditor() {\r\n        var repeatCount = this._recurrenceRule.getRules().count || 1;\r\n        var $editorWrapper = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceAfter\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\r\n        this._$repeatCountEditor = $(\"<div>\").addClass(REPEAT_COUNT_EDITOR).appendTo($editorWrapper);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceRepeatCount\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\r\n        this._repeatCountEditor = this._createComponent(this._$repeatCountEditor, NumberBox, {\r\n            field: \"count\",\r\n            format: \"#\",\r\n            width: recurrentEditorNumberBoxWidth,\r\n            min: 1,\r\n            showSpinButtons: true,\r\n            useLargeSpinButtons: false,\r\n            value: repeatCount,\r\n            onValueChanged: this._repeatCountValueChangeHandler.bind(this)\r\n        });\r\n        return $editorWrapper\r\n    }\r\n    _repeatCountValueChangeHandler(args) {\r\n        if (\"count\" === this._recurrenceRule.getRepeatEndRule()) {\r\n            var value = args.value;\r\n            this._recurrenceRule.makeRule(\"count\", value);\r\n            this._changeEditorValue()\r\n        }\r\n    }\r\n    _formatUntilDate(date) {\r\n        if (this._recurrenceRule.getRules().until && dateUtils.sameDate(this._recurrenceRule.getRules().until, date)) {\r\n            return date\r\n        }\r\n        return dateUtils.setToDayEnd(date)\r\n    }\r\n    _renderRepeatUntilEditor() {\r\n        var repeatUntil = this._recurrenceRule.getRules().until || this._formatUntilDate(new Date);\r\n        var $editorWrapper = $(\"<div>\").addClass(REPEAT_END_EDITOR + WRAPPER_POSTFIX);\r\n        $(\"<div>\").text(messageLocalization.format(\"dxScheduler-recurrenceOn\")).addClass(REPEAT_END_EDITOR + LABEL_POSTFIX).appendTo($editorWrapper);\r\n        this._$repeatDateEditor = $(\"<div>\").addClass(REPEAT_UNTIL_DATE_EDITOR).appendTo($editorWrapper);\r\n        this._repeatUntilDate = this._createComponent(this._$repeatDateEditor, DateBox, {\r\n            field: \"until\",\r\n            value: repeatUntil,\r\n            type: \"date\",\r\n            onValueChanged: this._repeatUntilValueChangeHandler.bind(this),\r\n            calendarOptions: {\r\n                firstDayOfWeek: this._getFirstDayOfWeek()\r\n            },\r\n            useMaskBehavior: true\r\n        });\r\n        return $editorWrapper\r\n    }\r\n    _repeatUntilValueChangeHandler(args) {\r\n        if (\"until\" === this._recurrenceRule.getRepeatEndRule()) {\r\n            var untilDate = this._formatUntilDate(new Date(args.value));\r\n            this._repeatUntilDate.option(\"value\", untilDate);\r\n            this._recurrenceRule.makeRule(\"until\", untilDate);\r\n            this._changeEditorValue()\r\n        }\r\n    }\r\n    _valueChangedHandler(args) {\r\n        var {\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        var field = args.component.option(\"field\");\r\n        if (!this.option(\"visible\")) {\r\n            this.option(\"value\", \"\")\r\n        } else {\r\n            this._recurrenceRule.makeRule(field, value);\r\n            if (\"freq\" === field) {\r\n                this._makeRepeatOnRule(value);\r\n                this._changeRepeatOnVisibility(value, previousValue)\r\n            }\r\n            this._changeEditorValue()\r\n        }\r\n    }\r\n    _makeRepeatOnRule(value) {\r\n        if (\"daily\" === value || \"hourly\" === value) {\r\n            this._recurrenceRule.makeRule(\"byday\", \"\");\r\n            this._recurrenceRule.makeRule(\"bymonth\", \"\");\r\n            this._recurrenceRule.makeRule(\"bymonthday\", \"\")\r\n        }\r\n        if (\"weekly\" === value) {\r\n            this._recurrenceRule.makeRule(\"byday\", this._daysOfWeekByRules());\r\n            this._recurrenceRule.makeRule(\"bymonth\", \"\");\r\n            this._recurrenceRule.makeRule(\"bymonthday\", \"\")\r\n        }\r\n        if (\"monthly\" === value) {\r\n            this._recurrenceRule.makeRule(\"bymonthday\", this._dayOfMonthByRules());\r\n            this._recurrenceRule.makeRule(\"bymonth\", \"\");\r\n            this._recurrenceRule.makeRule(\"byday\", \"\")\r\n        }\r\n        if (\"yearly\" === value) {\r\n            this._recurrenceRule.makeRule(\"bymonthday\", this._dayOfMonthByRules());\r\n            this._recurrenceRule.makeRule(\"bymonth\", this._monthOfYearByRules());\r\n            this._recurrenceRule.makeRule(\"byday\", \"\")\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_recurrenceForm, _this$_repeatCountEdi, _this$_weekEditor, _this$_repeatUntilDat;\r\n        switch (args.name) {\r\n            case \"readOnly\":\r\n                null === (_this$_recurrenceForm = this._recurrenceForm) || void 0 === _this$_recurrenceForm ? void 0 : _this$_recurrenceForm.option(\"readOnly\", args.value);\r\n                null === (_this$_repeatCountEdi = this._repeatCountEditor) || void 0 === _this$_repeatCountEdi ? void 0 : _this$_repeatCountEdi.option(\"readOnly\", args.value);\r\n                null === (_this$_weekEditor = this._weekEditor) || void 0 === _this$_weekEditor ? void 0 : _this$_weekEditor.option(\"readOnly\", args.value);\r\n                null === (_this$_repeatUntilDat = this._repeatUntilDate) || void 0 === _this$_repeatUntilDat ? void 0 : _this$_repeatUntilDat.option(\"readOnly\", args.value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"value\":\r\n                this._recurrenceRule.makeRules(args.value);\r\n                this._changeRepeatIntervalLabel();\r\n                this._disableRepeatEndParts();\r\n                this._changeEditorsValue(this._recurrenceRule.getRules());\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"startDate\":\r\n                this._makeRepeatOnRule(this._recurrenceRule.getRules().freq);\r\n                if (isDefined(this._recurrenceRule.getRecurrenceString())) {\r\n                    this._changeEditorValue()\r\n                }\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                if (this._weekEditor) {\r\n                    var localDaysNames = dateLocalization.getDayNames(\"abbreviated\");\r\n                    var dayNames = days.slice(args.value).concat(days.slice(0, args.value));\r\n                    var itemsButtonGroup = localDaysNames.slice(args.value).concat(localDaysNames.slice(0, args.value)).map((item, index) => ({\r\n                        text: item,\r\n                        key: dayNames[index]\r\n                    }));\r\n                    this._weekEditor.option(\"items\", itemsButtonGroup)\r\n                }\r\n                if (this._$repeatDateEditor) {\r\n                    this._repeatUntilDate.option(\"calendarOptions.firstDayOfWeek\", this._getFirstDayOfWeek())\r\n                }\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeRepeatOnVisibility(freq, previousFreq) {\r\n        if (freq !== previousFreq) {\r\n            this._recurrenceForm.itemOption(\"byday\", \"visible\", false);\r\n            this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", false);\r\n            this._recurrenceForm.itemOption(\"bymonth\", \"visible\", false);\r\n            this._recurrenceForm.itemOption(\"repeatOnLabel\", \"visible\", freq && \"daily\" !== freq && \"hourly\" !== freq);\r\n            if (\"weekly\" === freq) {\r\n                this._recurrenceForm.itemOption(\"byday\", \"visible\", true)\r\n            }\r\n            if (\"monthly\" === freq) {\r\n                this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", true)\r\n            }\r\n            if (\"yearly\" === freq) {\r\n                this._recurrenceForm.itemOption(\"bymonthday\", \"visible\", true);\r\n                this._recurrenceForm.itemOption(\"bymonth\", \"visible\", true)\r\n            }\r\n        }\r\n    }\r\n    _changeRepeatIntervalLabel() {\r\n        var freq = this._recurrenceRule.getRules().freq;\r\n        freq && this._recurrenceForm.itemOption(\"intervalLabel\", \"template\", messageLocalization.format(\"dxScheduler-recurrenceRepeat\".concat(freq.charAt(0).toUpperCase()).concat(freq.substr(1).toLowerCase())))\r\n    }\r\n    _changeEditorsValue(rules) {\r\n        this._recurrenceForm.getEditor(\"freq\").option(\"value\", (rules.freq || frequenciesMessages[defaultRecurrenceTypeIndex].value).toLowerCase());\r\n        this._changeDayOfWeekValue();\r\n        this._changeDayOfMonthValue();\r\n        this._changeMonthOfYearValue();\r\n        this._changeIntervalValue(rules.interval);\r\n        this._changeRepeatCountValue();\r\n        this._changeRepeatEndValue();\r\n        this._changeRepeatUntilValue()\r\n    }\r\n    _changeIntervalValue(value) {\r\n        this._recurrenceForm.getEditor(\"interval\").option(\"value\", value || 1)\r\n    }\r\n    _changeRepeatEndValue() {\r\n        var repeatType = this._recurrenceRule.getRepeatEndRule();\r\n        this._recurrenceForm.getEditor(\"repeatEnd\").option(\"value\", repeatType)\r\n    }\r\n    _changeDayOfWeekValue() {\r\n        var isEditorVisible = this._recurrenceForm.itemOption(\"byday\").visible;\r\n        if (isEditorVisible) {\r\n            var _days = this._daysOfWeekByRules();\r\n            this.getEditorByField(\"byday\").option(\"selectedItemKeys\", _days)\r\n        }\r\n    }\r\n    _changeDayOfMonthValue() {\r\n        var isEditorVisible = this._recurrenceForm.itemOption(\"bymonthday\").visible;\r\n        if (isEditorVisible) {\r\n            var day = this._dayOfMonthByRules();\r\n            this._recurrenceForm.getEditor(\"bymonthday\").option(\"value\", day)\r\n        }\r\n    }\r\n    _changeMonthOfYearValue() {\r\n        var isEditorVisible = this._recurrenceForm.itemOption(\"bymonth\").visible;\r\n        if (isEditorVisible) {\r\n            var month = this._monthOfYearByRules();\r\n            this._recurrenceForm.getEditor(\"bymonth\").option(\"value\", month)\r\n        }\r\n    }\r\n    _changeRepeatCountValue() {\r\n        var count = this._recurrenceRule.getRules().count || 1;\r\n        this._repeatCountEditor.option(\"value\", count)\r\n    }\r\n    _changeRepeatUntilValue() {\r\n        this._repeatUntilDate.option(\"value\", this._getUntilValue())\r\n    }\r\n    _getUntilValue() {\r\n        return this._recurrenceRule.getRules().until || this._formatUntilDate(new Date)\r\n    }\r\n    toggle() {\r\n        this._freqEditor.focus()\r\n    }\r\n    setAria() {\r\n        if (this._switchEditor) {\r\n            this._switchEditor.setAria(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1])\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxRecurrenceEditor\", RecurrenceEditor);\r\nexport default RecurrenceEditor;\r\n"]},"metadata":{},"sourceType":"module"}