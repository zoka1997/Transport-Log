{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_controller.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isDateAndTimeView } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nexport class CellsSelectionController {\n  handleArrowClick(options) {\n    var {\n      key: key,\n      focusedCellPosition: focusedCellPosition,\n      edgeIndices: edgeIndices,\n      getCellDataByPosition: getCellDataByPosition,\n      isAllDayPanelCell: isAllDayPanelCell\n    } = options;\n    var nextCellIndices;\n\n    switch (key) {\n      case \"down\":\n        nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, \"next\", edgeIndices);\n        break;\n\n      case \"up\":\n        nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, \"prev\", edgeIndices);\n        break;\n\n      case \"left\":\n        nextCellIndices = this.getCellFromNextColumnPosition(_extends({}, options, {\n          direction: \"prev\"\n        }));\n        break;\n\n      case \"right\":\n        nextCellIndices = this.getCellFromNextColumnPosition(_extends({}, options, {\n          direction: \"next\"\n        }));\n    }\n\n    var currentCellData = getCellDataByPosition(nextCellIndices.rowIndex, nextCellIndices.columnIndex, isAllDayPanelCell);\n    return this.moveToCell(_extends({}, options, {\n      currentCellData: currentCellData\n    }));\n  }\n\n  getCellFromNextRowPosition(focusedCellPosition, direction, edgeIndices) {\n    var {\n      columnIndex: columnIndex,\n      rowIndex: rowIndex\n    } = focusedCellPosition;\n    var deltaPosition = \"next\" === direction ? 1 : -1;\n    var nextRowIndex = rowIndex + deltaPosition;\n    var validRowIndex = nextRowIndex >= 0 && nextRowIndex <= edgeIndices.lastRowIndex ? nextRowIndex : rowIndex;\n    return {\n      columnIndex: columnIndex,\n      rowIndex: validRowIndex\n    };\n  }\n\n  getCellFromNextColumnPosition(options) {\n    var {\n      focusedCellPosition: focusedCellPosition,\n      direction: direction,\n      edgeIndices: edgeIndices,\n      isRTL: isRTL,\n      isGroupedByDate: isGroupedByDate,\n      groupCount: groupCount,\n      isMultiSelection: isMultiSelection,\n      viewType: viewType\n    } = options;\n    var {\n      columnIndex: columnIndex,\n      rowIndex: rowIndex\n    } = focusedCellPosition;\n    var {\n      firstColumnIndex: firstColumnIndex,\n      lastColumnIndex: lastColumnIndex,\n      firstRowIndex: firstRowIndex,\n      lastRowIndex: lastRowIndex\n    } = edgeIndices;\n    var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\n    var sign = isRTL ? -1 : 1;\n    var deltaColumnIndex = \"next\" === direction ? sign * step : -1 * sign * step;\n    var nextColumnIndex = columnIndex + deltaColumnIndex;\n    var isValidColumnIndex = nextColumnIndex >= firstColumnIndex && nextColumnIndex <= lastColumnIndex;\n\n    if (isValidColumnIndex) {\n      return {\n        columnIndex: nextColumnIndex,\n        rowIndex: rowIndex\n      };\n    }\n\n    return isDateAndTimeView(viewType) ? focusedCellPosition : this._processEdgeCell({\n      nextColumnIndex: nextColumnIndex,\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      firstColumnIndex: firstColumnIndex,\n      lastColumnIndex: lastColumnIndex,\n      firstRowIndex: firstRowIndex,\n      lastRowIndex: lastRowIndex,\n      step: step\n    });\n  }\n\n  _processEdgeCell(options) {\n    var {\n      nextColumnIndex: nextColumnIndex,\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      firstColumnIndex: firstColumnIndex,\n      lastColumnIndex: lastColumnIndex,\n      firstRowIndex: firstRowIndex,\n      lastRowIndex: lastRowIndex,\n      step: step\n    } = options;\n    var validColumnIndex = nextColumnIndex;\n    var validRowIndex = rowIndex;\n    var isLeftEdgeCell = nextColumnIndex < firstColumnIndex;\n    var isRightEdgeCell = nextColumnIndex > lastColumnIndex;\n\n    if (isLeftEdgeCell) {\n      var columnIndexInNextRow = lastColumnIndex - (step - columnIndex % step - 1);\n      var nextRowIndex = rowIndex - 1;\n      var isValidRowIndex = nextRowIndex >= firstRowIndex;\n      validRowIndex = isValidRowIndex ? nextRowIndex : rowIndex;\n      validColumnIndex = isValidRowIndex ? columnIndexInNextRow : columnIndex;\n    }\n\n    if (isRightEdgeCell) {\n      var _columnIndexInNextRow = firstColumnIndex + columnIndex % step;\n\n      var _nextRowIndex = rowIndex + 1;\n\n      var _isValidRowIndex = _nextRowIndex <= lastRowIndex;\n\n      validRowIndex = _isValidRowIndex ? _nextRowIndex : rowIndex;\n      validColumnIndex = _isValidRowIndex ? _columnIndexInNextRow : columnIndex;\n    }\n\n    return {\n      columnIndex: validColumnIndex,\n      rowIndex: validRowIndex\n    };\n  }\n\n  moveToCell(options) {\n    var {\n      isMultiSelection: isMultiSelection,\n      isMultiSelectionAllowed: isMultiSelectionAllowed,\n      focusedCellData: focusedCellData,\n      currentCellData: currentCellData\n    } = options;\n    var isValidMultiSelection = isMultiSelection && isMultiSelectionAllowed;\n    var nextFocusedCellData = isValidMultiSelection ? this._getNextCellData(currentCellData, focusedCellData) : currentCellData;\n    return nextFocusedCellData;\n  }\n\n  _getNextCellData(nextFocusedCellData, focusedCellData, isVirtualCell) {\n    if (isVirtualCell) {\n      return focusedCellData;\n    }\n\n    var isValidNextFocusedCell = this._isValidNextFocusedCell(nextFocusedCellData, focusedCellData);\n\n    return isValidNextFocusedCell ? nextFocusedCellData : focusedCellData;\n  }\n\n  _isValidNextFocusedCell(nextFocusedCellData, focusedCellData) {\n    if (!focusedCellData) {\n      return true;\n    }\n\n    var {\n      groupIndex: groupIndex,\n      allDay: allDay\n    } = focusedCellData;\n    var {\n      groupIndex: nextGroupIndex,\n      allDay: nextAllDay\n    } = nextFocusedCellData;\n    return groupIndex === nextGroupIndex && allDay === nextAllDay;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/workspaces/cells_selection_controller.js"],"names":["_extends","isDateAndTimeView","CellsSelectionController","handleArrowClick","options","key","focusedCellPosition","edgeIndices","getCellDataByPosition","isAllDayPanelCell","nextCellIndices","getCellFromNextRowPosition","getCellFromNextColumnPosition","direction","currentCellData","rowIndex","columnIndex","moveToCell","deltaPosition","nextRowIndex","validRowIndex","lastRowIndex","isRTL","isGroupedByDate","groupCount","isMultiSelection","viewType","firstColumnIndex","lastColumnIndex","firstRowIndex","step","sign","deltaColumnIndex","nextColumnIndex","isValidColumnIndex","_processEdgeCell","validColumnIndex","isLeftEdgeCell","isRightEdgeCell","columnIndexInNextRow","isValidRowIndex","_columnIndexInNextRow","_nextRowIndex","_isValidRowIndex","isMultiSelectionAllowed","focusedCellData","isValidMultiSelection","nextFocusedCellData","_getNextCellData","isVirtualCell","isValidNextFocusedCell","_isValidNextFocusedCell","groupIndex","allDay","nextGroupIndex","nextAllDay"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/cells_selection_controller.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    isDateAndTimeView\r\n} from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nexport class CellsSelectionController {\r\n    handleArrowClick(options) {\r\n        var {\r\n            key: key,\r\n            focusedCellPosition: focusedCellPosition,\r\n            edgeIndices: edgeIndices,\r\n            getCellDataByPosition: getCellDataByPosition,\r\n            isAllDayPanelCell: isAllDayPanelCell\r\n        } = options;\r\n        var nextCellIndices;\r\n        switch (key) {\r\n            case \"down\":\r\n                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, \"next\", edgeIndices);\r\n                break;\r\n            case \"up\":\r\n                nextCellIndices = this.getCellFromNextRowPosition(focusedCellPosition, \"prev\", edgeIndices);\r\n                break;\r\n            case \"left\":\r\n                nextCellIndices = this.getCellFromNextColumnPosition(_extends({}, options, {\r\n                    direction: \"prev\"\r\n                }));\r\n                break;\r\n            case \"right\":\r\n                nextCellIndices = this.getCellFromNextColumnPosition(_extends({}, options, {\r\n                    direction: \"next\"\r\n                }))\r\n        }\r\n        var currentCellData = getCellDataByPosition(nextCellIndices.rowIndex, nextCellIndices.columnIndex, isAllDayPanelCell);\r\n        return this.moveToCell(_extends({}, options, {\r\n            currentCellData: currentCellData\r\n        }))\r\n    }\r\n    getCellFromNextRowPosition(focusedCellPosition, direction, edgeIndices) {\r\n        var {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        } = focusedCellPosition;\r\n        var deltaPosition = \"next\" === direction ? 1 : -1;\r\n        var nextRowIndex = rowIndex + deltaPosition;\r\n        var validRowIndex = nextRowIndex >= 0 && nextRowIndex <= edgeIndices.lastRowIndex ? nextRowIndex : rowIndex;\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: validRowIndex\r\n        }\r\n    }\r\n    getCellFromNextColumnPosition(options) {\r\n        var {\r\n            focusedCellPosition: focusedCellPosition,\r\n            direction: direction,\r\n            edgeIndices: edgeIndices,\r\n            isRTL: isRTL,\r\n            isGroupedByDate: isGroupedByDate,\r\n            groupCount: groupCount,\r\n            isMultiSelection: isMultiSelection,\r\n            viewType: viewType\r\n        } = options;\r\n        var {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        } = focusedCellPosition;\r\n        var {\r\n            firstColumnIndex: firstColumnIndex,\r\n            lastColumnIndex: lastColumnIndex,\r\n            firstRowIndex: firstRowIndex,\r\n            lastRowIndex: lastRowIndex\r\n        } = edgeIndices;\r\n        var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\r\n        var sign = isRTL ? -1 : 1;\r\n        var deltaColumnIndex = \"next\" === direction ? sign * step : -1 * sign * step;\r\n        var nextColumnIndex = columnIndex + deltaColumnIndex;\r\n        var isValidColumnIndex = nextColumnIndex >= firstColumnIndex && nextColumnIndex <= lastColumnIndex;\r\n        if (isValidColumnIndex) {\r\n            return {\r\n                columnIndex: nextColumnIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return isDateAndTimeView(viewType) ? focusedCellPosition : this._processEdgeCell({\r\n            nextColumnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex,\r\n            firstColumnIndex: firstColumnIndex,\r\n            lastColumnIndex: lastColumnIndex,\r\n            firstRowIndex: firstRowIndex,\r\n            lastRowIndex: lastRowIndex,\r\n            step: step\r\n        })\r\n    }\r\n    _processEdgeCell(options) {\r\n        var {\r\n            nextColumnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex,\r\n            columnIndex: columnIndex,\r\n            firstColumnIndex: firstColumnIndex,\r\n            lastColumnIndex: lastColumnIndex,\r\n            firstRowIndex: firstRowIndex,\r\n            lastRowIndex: lastRowIndex,\r\n            step: step\r\n        } = options;\r\n        var validColumnIndex = nextColumnIndex;\r\n        var validRowIndex = rowIndex;\r\n        var isLeftEdgeCell = nextColumnIndex < firstColumnIndex;\r\n        var isRightEdgeCell = nextColumnIndex > lastColumnIndex;\r\n        if (isLeftEdgeCell) {\r\n            var columnIndexInNextRow = lastColumnIndex - (step - columnIndex % step - 1);\r\n            var nextRowIndex = rowIndex - 1;\r\n            var isValidRowIndex = nextRowIndex >= firstRowIndex;\r\n            validRowIndex = isValidRowIndex ? nextRowIndex : rowIndex;\r\n            validColumnIndex = isValidRowIndex ? columnIndexInNextRow : columnIndex\r\n        }\r\n        if (isRightEdgeCell) {\r\n            var _columnIndexInNextRow = firstColumnIndex + columnIndex % step;\r\n            var _nextRowIndex = rowIndex + 1;\r\n            var _isValidRowIndex = _nextRowIndex <= lastRowIndex;\r\n            validRowIndex = _isValidRowIndex ? _nextRowIndex : rowIndex;\r\n            validColumnIndex = _isValidRowIndex ? _columnIndexInNextRow : columnIndex\r\n        }\r\n        return {\r\n            columnIndex: validColumnIndex,\r\n            rowIndex: validRowIndex\r\n        }\r\n    }\r\n    moveToCell(options) {\r\n        var {\r\n            isMultiSelection: isMultiSelection,\r\n            isMultiSelectionAllowed: isMultiSelectionAllowed,\r\n            focusedCellData: focusedCellData,\r\n            currentCellData: currentCellData\r\n        } = options;\r\n        var isValidMultiSelection = isMultiSelection && isMultiSelectionAllowed;\r\n        var nextFocusedCellData = isValidMultiSelection ? this._getNextCellData(currentCellData, focusedCellData) : currentCellData;\r\n        return nextFocusedCellData\r\n    }\r\n    _getNextCellData(nextFocusedCellData, focusedCellData, isVirtualCell) {\r\n        if (isVirtualCell) {\r\n            return focusedCellData\r\n        }\r\n        var isValidNextFocusedCell = this._isValidNextFocusedCell(nextFocusedCellData, focusedCellData);\r\n        return isValidNextFocusedCell ? nextFocusedCellData : focusedCellData\r\n    }\r\n    _isValidNextFocusedCell(nextFocusedCellData, focusedCellData) {\r\n        if (!focusedCellData) {\r\n            return true\r\n        }\r\n        var {\r\n            groupIndex: groupIndex,\r\n            allDay: allDay\r\n        } = focusedCellData;\r\n        var {\r\n            groupIndex: nextGroupIndex,\r\n            allDay: nextAllDay\r\n        } = nextFocusedCellData;\r\n        return groupIndex === nextGroupIndex && allDay === nextAllDay\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}