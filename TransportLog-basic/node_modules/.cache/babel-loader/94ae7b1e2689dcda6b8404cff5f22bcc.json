{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../core/utils/date\";\nvar toMs = dateUtils.dateToMilliseconds;\n\nclass DateAdapterCore {\n  constructor(source) {\n    this._source = new Date(source.getTime ? source.getTime() : source);\n  }\n\n  get source() {\n    return this._source;\n  }\n\n  result() {\n    return this._source;\n  }\n\n  getTimezoneOffset() {\n    var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n\n    var value = this._source.getTimezoneOffset();\n\n    if (\"minute\" === format) {\n      return value * toMs(\"minute\");\n    }\n\n    return value;\n  }\n\n  getTime() {\n    return this._source.getTime();\n  }\n\n  setTime(value) {\n    this._source.setTime(value);\n\n    return this;\n  }\n\n  addTime(value) {\n    this._source.setTime(this._source.getTime() + value);\n\n    return this;\n  }\n\n  setMinutes(value) {\n    this._source.setMinutes(value);\n\n    return this;\n  }\n\n  addMinutes(value) {\n    this._source.setMinutes(this._source.getMinutes() + value);\n\n    return this;\n  }\n\n  subtractMinutes(value) {\n    this._source.setMinutes(this._source.getMinutes() - value);\n\n    return this;\n  }\n\n}\n\nvar DateAdapter = date => new DateAdapterCore(date);\n\nexport default DateAdapter;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/dateAdapter.js"],"names":["dateUtils","toMs","dateToMilliseconds","DateAdapterCore","constructor","source","_source","Date","getTime","result","getTimezoneOffset","format","arguments","length","value","setTime","addTime","setMinutes","addMinutes","getMinutes","subtractMinutes","DateAdapter","date"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,IAAIC,IAAI,GAAGD,SAAS,CAACE,kBAArB;;AACA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKC,OAAL,GAAe,IAAIC,IAAJ,CAASF,MAAM,CAACG,OAAP,GAAiBH,MAAM,CAACG,OAAP,EAAjB,GAAoCH,MAA7C,CAAf;AACH;;AACS,MAANA,MAAM,GAAG;AACT,WAAO,KAAKC,OAAZ;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKH,OAAZ;AACH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAAK,CAAnF;;AACA,QAAIE,KAAK,GAAG,KAAKR,OAAL,CAAaI,iBAAb,EAAZ;;AACA,QAAI,aAAaC,MAAjB,EAAyB;AACrB,aAAOG,KAAK,GAAGb,IAAI,CAAC,QAAD,CAAnB;AACH;;AACD,WAAOa,KAAP;AACH;;AACDN,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,OAAL,CAAaE,OAAb,EAAP;AACH;;AACDO,EAAAA,OAAO,CAACD,KAAD,EAAQ;AACX,SAAKR,OAAL,CAAaS,OAAb,CAAqBD,KAArB;;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,OAAO,CAACF,KAAD,EAAQ;AACX,SAAKR,OAAL,CAAaS,OAAb,CAAqB,KAAKT,OAAL,CAAaE,OAAb,KAAyBM,KAA9C;;AACA,WAAO,IAAP;AACH;;AACDG,EAAAA,UAAU,CAACH,KAAD,EAAQ;AACd,SAAKR,OAAL,CAAaW,UAAb,CAAwBH,KAAxB;;AACA,WAAO,IAAP;AACH;;AACDI,EAAAA,UAAU,CAACJ,KAAD,EAAQ;AACd,SAAKR,OAAL,CAAaW,UAAb,CAAwB,KAAKX,OAAL,CAAaa,UAAb,KAA4BL,KAApD;;AACA,WAAO,IAAP;AACH;;AACDM,EAAAA,eAAe,CAACN,KAAD,EAAQ;AACnB,SAAKR,OAAL,CAAaW,UAAb,CAAwB,KAAKX,OAAL,CAAaa,UAAb,KAA4BL,KAApD;;AACA,WAAO,IAAP;AACH;;AAxCiB;;AA0CtB,IAAIO,WAAW,GAAGC,IAAI,IAAI,IAAInB,eAAJ,CAAoBmB,IAApB,CAA1B;;AACA,eAAeD,WAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../core/utils/date\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass DateAdapterCore {\r\n    constructor(source) {\r\n        this._source = new Date(source.getTime ? source.getTime() : source)\r\n    }\r\n    get source() {\r\n        return this._source\r\n    }\r\n    result() {\r\n        return this._source\r\n    }\r\n    getTimezoneOffset() {\r\n        var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\r\n        var value = this._source.getTimezoneOffset();\r\n        if (\"minute\" === format) {\r\n            return value * toMs(\"minute\")\r\n        }\r\n        return value\r\n    }\r\n    getTime() {\r\n        return this._source.getTime()\r\n    }\r\n    setTime(value) {\r\n        this._source.setTime(value);\r\n        return this\r\n    }\r\n    addTime(value) {\r\n        this._source.setTime(this._source.getTime() + value);\r\n        return this\r\n    }\r\n    setMinutes(value) {\r\n        this._source.setMinutes(value);\r\n        return this\r\n    }\r\n    addMinutes(value) {\r\n        this._source.setMinutes(this._source.getMinutes() + value);\r\n        return this\r\n    }\r\n    subtractMinutes(value) {\r\n        this._source.setMinutes(this._source.getMinutes() - value);\r\n        return this\r\n    }\r\n}\r\nvar DateAdapter = date => new DateAdapterCore(date);\r\nexport default DateAdapter;\r\n"]},"metadata":{},"sourceType":"module"}