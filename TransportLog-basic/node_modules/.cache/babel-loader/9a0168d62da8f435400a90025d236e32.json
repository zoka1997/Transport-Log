{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/model/appointments.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getCellWidth, getCellHeight, getAllDayHeight, PositionHelper } from \"../../../../ui/scheduler/workspaces/helpers/positionHelper\";\nimport { getGroupCount } from \"../../../../ui/scheduler/resources/utils\";\nimport { isGroupingByDate } from \"../workspaces/utils\";\nimport dateUtils from \"../../../../core/utils/date\";\nimport { calculateIsGroupedAllDayPanel, getCellDuration } from \"../view_model/to_test/views/utils/base\";\n\nvar toMs = name => dateUtils.dateToMilliseconds(name);\n\nexport var getAppointmentRenderingStrategyName = viewType => {\n  var {\n    renderingStrategy: renderingStrategy\n  } = {\n    day: {\n      renderingStrategy: \"vertical\"\n    },\n    week: {\n      renderingStrategy: \"week\"\n    },\n    workWeek: {\n      renderingStrategy: \"week\"\n    },\n    month: {\n      renderingStrategy: \"horizontalMonth\"\n    },\n    timelineDay: {\n      renderingStrategy: \"horizontal\"\n    },\n    timelineWeek: {\n      renderingStrategy: \"horizontal\"\n    },\n    timelineWorkWeek: {\n      renderingStrategy: \"horizontal\"\n    },\n    timelineMonth: {\n      renderingStrategy: \"horizontalMonthLine\"\n    },\n    agenda: {\n      renderingStrategy: \"agenda\"\n    }\n  }[viewType];\n  return renderingStrategy;\n};\nexport var getAppointmentsConfig = (schedulerConfig, viewConfig, loadedResources, viewDataProvider, isAllDayPanelSupported) => {\n  var groupCount = getGroupCount(loadedResources);\n  var startViewDate = viewDataProvider.getStartViewDate();\n  var dateRange = [startViewDate, viewDataProvider.getLastViewDateByEndDayHour(viewConfig.endDayHour)];\n  return {\n    adaptivityEnabled: schedulerConfig.adaptivityEnabled,\n    rtlEnabled: schedulerConfig.rtlEnabled,\n    resources: schedulerConfig.resources,\n    timeZone: schedulerConfig.timeZone,\n    groups: schedulerConfig.groups,\n    startDayHour: viewConfig.startDayHour,\n    viewStartDayHour: viewConfig.startDayHour,\n    endDayHour: viewConfig.endDayHour,\n    viewEndDayHour: viewConfig.endDayHour,\n    currentDate: viewConfig.currentDate,\n    isVirtualScrolling: \"virtual\" === viewConfig.scrolling.mode,\n    intervalCount: viewConfig.intervalCount,\n    hoursInterval: viewConfig.hoursInterval,\n    showAllDayPanel: viewConfig.showAllDayPanel,\n    allDayPanelMode: viewConfig.allDayPanelMode,\n    supportAllDayRow: isAllDayPanelSupported,\n    groupOrientation: viewDataProvider.getViewOptions().groupOrientation,\n    firstDayOfWeek: viewConfig.firstDayOfWeek,\n    viewType: viewConfig.type,\n    cellDurationInMinutes: viewConfig.cellDuration,\n    maxAppointmentsPerCell: viewConfig.maxAppointmentsPerCell,\n    isVerticalGroupOrientation: viewDataProvider.getViewOptions().isVerticalGrouping,\n    groupByDate: viewDataProvider.getViewOptions().isGroupedByDate,\n    startViewDate: startViewDate,\n    loadedResources: loadedResources,\n    appointmentCountPerCell: 2,\n    appointmentOffset: 26,\n    allowResizing: false,\n    allowAllDayResizing: false,\n    dateTableOffset: 0,\n    groupCount: groupCount,\n    dateRange: dateRange\n  };\n};\nexport var getAppointmentsModel = (appointmentsConfig, viewDataProvider, timeZoneCalculator, dataAccessors, cellsMetaData) => {\n  var groupedByDate = isGroupingByDate(appointmentsConfig.groups, appointmentsConfig.groupOrientation, appointmentsConfig.groupByDate);\n  var {\n    groupCount: groupCount,\n    isVerticalGroupOrientation: isVerticalGroupOrientation\n  } = appointmentsConfig;\n  var positionHelper = new PositionHelper({\n    viewDataProvider: viewDataProvider,\n    groupedByDate: groupedByDate,\n    rtlEnabled: appointmentsConfig.rtlEnabled,\n    groupCount: groupCount,\n    isVerticalGrouping: groupCount && isVerticalGroupOrientation,\n    getDOMMetaDataCallback: () => cellsMetaData\n  });\n  var isGroupedAllDayPanel = calculateIsGroupedAllDayPanel(appointmentsConfig.loadedResources, appointmentsConfig.groupOrientation, appointmentsConfig.showAllDayPanel);\n  var rowCount = viewDataProvider.getRowCount({\n    intervalCount: appointmentsConfig.intervalCount,\n    currentDate: appointmentsConfig.currentDate,\n    viewType: appointmentsConfig.viewType,\n    hoursInterval: appointmentsConfig.hoursInterval,\n    startDayHour: appointmentsConfig.startDayHour,\n    endDayHour: appointmentsConfig.endDayHour\n  });\n  var allDayHeight = getAllDayHeight(appointmentsConfig.showAllDayPanel, appointmentsConfig.isVerticalGroupOrientation, cellsMetaData);\n  var endViewDate = viewDataProvider.getLastCellEndDate();\n  var visibleDayDuration = viewDataProvider.getVisibleDayDuration(appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);\n  var {\n    startCellIndex: leftVirtualCellCount,\n    startRowIndex: topVirtualRowCount\n  } = viewDataProvider.getViewOptions();\n  var cellDuration = getCellDuration(appointmentsConfig.viewType, appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);\n  var appointmentRenderingStrategyName = getAppointmentRenderingStrategyName(appointmentsConfig.viewType);\n  return _extends({}, appointmentsConfig, {\n    appointmentRenderingStrategyName: appointmentRenderingStrategyName,\n    loadedResources: appointmentsConfig.loadedResources,\n    dataAccessors: dataAccessors,\n    timeZoneCalculator: timeZoneCalculator,\n    viewDataProvider: viewDataProvider,\n    positionHelper: positionHelper,\n    isGroupedAllDayPanel: isGroupedAllDayPanel,\n    rowCount: rowCount,\n    cellWidth: getCellWidth(cellsMetaData),\n    cellHeight: getCellHeight(cellsMetaData),\n    allDayHeight: allDayHeight,\n    isGroupedByDate: groupedByDate,\n    endViewDate: endViewDate,\n    visibleDayDuration: visibleDayDuration,\n    intervalDuration: cellDuration,\n    allDayIntervalDuration: toMs(\"day\"),\n    leftVirtualCellCount: leftVirtualCellCount,\n    topVirtualCellCount: topVirtualRowCount,\n    cellDuration: cellDuration,\n    resizableStep: positionHelper.getResizableStep(),\n    DOMMetaData: cellsMetaData\n  });\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/model/appointments.js"],"names":["_extends","getCellWidth","getCellHeight","getAllDayHeight","PositionHelper","getGroupCount","isGroupingByDate","dateUtils","calculateIsGroupedAllDayPanel","getCellDuration","toMs","name","dateToMilliseconds","getAppointmentRenderingStrategyName","viewType","renderingStrategy","day","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","getAppointmentsConfig","schedulerConfig","viewConfig","loadedResources","viewDataProvider","isAllDayPanelSupported","groupCount","startViewDate","getStartViewDate","dateRange","getLastViewDateByEndDayHour","endDayHour","adaptivityEnabled","rtlEnabled","resources","timeZone","groups","startDayHour","viewStartDayHour","viewEndDayHour","currentDate","isVirtualScrolling","scrolling","mode","intervalCount","hoursInterval","showAllDayPanel","allDayPanelMode","supportAllDayRow","groupOrientation","getViewOptions","firstDayOfWeek","type","cellDurationInMinutes","cellDuration","maxAppointmentsPerCell","isVerticalGroupOrientation","isVerticalGrouping","groupByDate","isGroupedByDate","appointmentCountPerCell","appointmentOffset","allowResizing","allowAllDayResizing","dateTableOffset","getAppointmentsModel","appointmentsConfig","timeZoneCalculator","dataAccessors","cellsMetaData","groupedByDate","positionHelper","getDOMMetaDataCallback","isGroupedAllDayPanel","rowCount","getRowCount","allDayHeight","endViewDate","getLastCellEndDate","visibleDayDuration","getVisibleDayDuration","startCellIndex","leftVirtualCellCount","startRowIndex","topVirtualRowCount","appointmentRenderingStrategyName","cellWidth","cellHeight","intervalDuration","allDayIntervalDuration","topVirtualCellCount","resizableStep","getResizableStep","DOMMetaData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,cAJJ,QAKO,4DALP;AAMA,SACIC,aADJ,QAEO,0CAFP;AAGA,SACIC,gBADJ,QAEO,qBAFP;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SACIC,6BADJ,EAEIC,eAFJ,QAGO,wCAHP;;AAIA,IAAIC,IAAI,GAAGC,IAAI,IAAIJ,SAAS,CAACK,kBAAV,CAA6BD,IAA7B,CAAnB;;AACA,OAAO,IAAIE,mCAAmC,GAAGC,QAAQ,IAAI;AACzD,MAAI;AACAC,IAAAA,iBAAiB,EAAEA;AADnB,MAEA;AACAC,IAAAA,GAAG,EAAE;AACDD,MAAAA,iBAAiB,EAAE;AADlB,KADL;AAIAE,IAAAA,IAAI,EAAE;AACFF,MAAAA,iBAAiB,EAAE;AADjB,KAJN;AAOAG,IAAAA,QAAQ,EAAE;AACNH,MAAAA,iBAAiB,EAAE;AADb,KAPV;AAUAI,IAAAA,KAAK,EAAE;AACHJ,MAAAA,iBAAiB,EAAE;AADhB,KAVP;AAaAK,IAAAA,WAAW,EAAE;AACTL,MAAAA,iBAAiB,EAAE;AADV,KAbb;AAgBAM,IAAAA,YAAY,EAAE;AACVN,MAAAA,iBAAiB,EAAE;AADT,KAhBd;AAmBAO,IAAAA,gBAAgB,EAAE;AACdP,MAAAA,iBAAiB,EAAE;AADL,KAnBlB;AAsBAQ,IAAAA,aAAa,EAAE;AACXR,MAAAA,iBAAiB,EAAE;AADR,KAtBf;AAyBAS,IAAAA,MAAM,EAAE;AACJT,MAAAA,iBAAiB,EAAE;AADf;AAzBR,IA4BDD,QA5BC,CAFJ;AA+BA,SAAOC,iBAAP;AACH,CAjCM;AAkCP,OAAO,IAAIU,qBAAqB,GAAG,CAACC,eAAD,EAAkBC,UAAlB,EAA8BC,eAA9B,EAA+CC,gBAA/C,EAAiEC,sBAAjE,KAA4F;AAC3H,MAAIC,UAAU,GAAG1B,aAAa,CAACuB,eAAD,CAA9B;AACA,MAAII,aAAa,GAAGH,gBAAgB,CAACI,gBAAjB,EAApB;AACA,MAAIC,SAAS,GAAG,CAACF,aAAD,EAAgBH,gBAAgB,CAACM,2BAAjB,CAA6CR,UAAU,CAACS,UAAxD,CAAhB,CAAhB;AACA,SAAO;AACHC,IAAAA,iBAAiB,EAAEX,eAAe,CAACW,iBADhC;AAEHC,IAAAA,UAAU,EAAEZ,eAAe,CAACY,UAFzB;AAGHC,IAAAA,SAAS,EAAEb,eAAe,CAACa,SAHxB;AAIHC,IAAAA,QAAQ,EAAEd,eAAe,CAACc,QAJvB;AAKHC,IAAAA,MAAM,EAAEf,eAAe,CAACe,MALrB;AAMHC,IAAAA,YAAY,EAAEf,UAAU,CAACe,YANtB;AAOHC,IAAAA,gBAAgB,EAAEhB,UAAU,CAACe,YAP1B;AAQHN,IAAAA,UAAU,EAAET,UAAU,CAACS,UARpB;AASHQ,IAAAA,cAAc,EAAEjB,UAAU,CAACS,UATxB;AAUHS,IAAAA,WAAW,EAAElB,UAAU,CAACkB,WAVrB;AAWHC,IAAAA,kBAAkB,EAAE,cAAcnB,UAAU,CAACoB,SAAX,CAAqBC,IAXpD;AAYHC,IAAAA,aAAa,EAAEtB,UAAU,CAACsB,aAZvB;AAaHC,IAAAA,aAAa,EAAEvB,UAAU,CAACuB,aAbvB;AAcHC,IAAAA,eAAe,EAAExB,UAAU,CAACwB,eAdzB;AAeHC,IAAAA,eAAe,EAAEzB,UAAU,CAACyB,eAfzB;AAgBHC,IAAAA,gBAAgB,EAAEvB,sBAhBf;AAiBHwB,IAAAA,gBAAgB,EAAEzB,gBAAgB,CAAC0B,cAAjB,GAAkCD,gBAjBjD;AAkBHE,IAAAA,cAAc,EAAE7B,UAAU,CAAC6B,cAlBxB;AAmBH1C,IAAAA,QAAQ,EAAEa,UAAU,CAAC8B,IAnBlB;AAoBHC,IAAAA,qBAAqB,EAAE/B,UAAU,CAACgC,YApB/B;AAqBHC,IAAAA,sBAAsB,EAAEjC,UAAU,CAACiC,sBArBhC;AAsBHC,IAAAA,0BAA0B,EAAEhC,gBAAgB,CAAC0B,cAAjB,GAAkCO,kBAtB3D;AAuBHC,IAAAA,WAAW,EAAElC,gBAAgB,CAAC0B,cAAjB,GAAkCS,eAvB5C;AAwBHhC,IAAAA,aAAa,EAAEA,aAxBZ;AAyBHJ,IAAAA,eAAe,EAAEA,eAzBd;AA0BHqC,IAAAA,uBAAuB,EAAE,CA1BtB;AA2BHC,IAAAA,iBAAiB,EAAE,EA3BhB;AA4BHC,IAAAA,aAAa,EAAE,KA5BZ;AA6BHC,IAAAA,mBAAmB,EAAE,KA7BlB;AA8BHC,IAAAA,eAAe,EAAE,CA9Bd;AA+BHtC,IAAAA,UAAU,EAAEA,UA/BT;AAgCHG,IAAAA,SAAS,EAAEA;AAhCR,GAAP;AAkCH,CAtCM;AAuCP,OAAO,IAAIoC,oBAAoB,GAAG,CAACC,kBAAD,EAAqB1C,gBAArB,EAAuC2C,kBAAvC,EAA2DC,aAA3D,EAA0EC,aAA1E,KAA4F;AAC1H,MAAIC,aAAa,GAAGrE,gBAAgB,CAACiE,kBAAkB,CAAC9B,MAApB,EAA4B8B,kBAAkB,CAACjB,gBAA/C,EAAiEiB,kBAAkB,CAACR,WAApF,CAApC;AACA,MAAI;AACAhC,IAAAA,UAAU,EAAEA,UADZ;AAEA8B,IAAAA,0BAA0B,EAAEA;AAF5B,MAGAU,kBAHJ;AAIA,MAAIK,cAAc,GAAG,IAAIxE,cAAJ,CAAmB;AACpCyB,IAAAA,gBAAgB,EAAEA,gBADkB;AAEpC8C,IAAAA,aAAa,EAAEA,aAFqB;AAGpCrC,IAAAA,UAAU,EAAEiC,kBAAkB,CAACjC,UAHK;AAIpCP,IAAAA,UAAU,EAAEA,UAJwB;AAKpC+B,IAAAA,kBAAkB,EAAE/B,UAAU,IAAI8B,0BALE;AAMpCgB,IAAAA,sBAAsB,EAAE,MAAMH;AANM,GAAnB,CAArB;AAQA,MAAII,oBAAoB,GAAGtE,6BAA6B,CAAC+D,kBAAkB,CAAC3C,eAApB,EAAqC2C,kBAAkB,CAACjB,gBAAxD,EAA0EiB,kBAAkB,CAACpB,eAA7F,CAAxD;AACA,MAAI4B,QAAQ,GAAGlD,gBAAgB,CAACmD,WAAjB,CAA6B;AACxC/B,IAAAA,aAAa,EAAEsB,kBAAkB,CAACtB,aADM;AAExCJ,IAAAA,WAAW,EAAE0B,kBAAkB,CAAC1B,WAFQ;AAGxC/B,IAAAA,QAAQ,EAAEyD,kBAAkB,CAACzD,QAHW;AAIxCoC,IAAAA,aAAa,EAAEqB,kBAAkB,CAACrB,aAJM;AAKxCR,IAAAA,YAAY,EAAE6B,kBAAkB,CAAC7B,YALO;AAMxCN,IAAAA,UAAU,EAAEmC,kBAAkB,CAACnC;AANS,GAA7B,CAAf;AAQA,MAAI6C,YAAY,GAAG9E,eAAe,CAACoE,kBAAkB,CAACpB,eAApB,EAAqCoB,kBAAkB,CAACV,0BAAxD,EAAoFa,aAApF,CAAlC;AACA,MAAIQ,WAAW,GAAGrD,gBAAgB,CAACsD,kBAAjB,EAAlB;AACA,MAAIC,kBAAkB,GAAGvD,gBAAgB,CAACwD,qBAAjB,CAAuCd,kBAAkB,CAAC7B,YAA1D,EAAwE6B,kBAAkB,CAACnC,UAA3F,EAAuGmC,kBAAkB,CAACrB,aAA1H,CAAzB;AACA,MAAI;AACAoC,IAAAA,cAAc,EAAEC,oBADhB;AAEAC,IAAAA,aAAa,EAAEC;AAFf,MAGA5D,gBAAgB,CAAC0B,cAAjB,EAHJ;AAIA,MAAII,YAAY,GAAGlD,eAAe,CAAC8D,kBAAkB,CAACzD,QAApB,EAA8ByD,kBAAkB,CAAC7B,YAAjD,EAA+D6B,kBAAkB,CAACnC,UAAlF,EAA8FmC,kBAAkB,CAACrB,aAAjH,CAAlC;AACA,MAAIwC,gCAAgC,GAAG7E,mCAAmC,CAAC0D,kBAAkB,CAACzD,QAApB,CAA1E;AACA,SAAOd,QAAQ,CAAC,EAAD,EAAKuE,kBAAL,EAAyB;AACpCmB,IAAAA,gCAAgC,EAAEA,gCADE;AAEpC9D,IAAAA,eAAe,EAAE2C,kBAAkB,CAAC3C,eAFA;AAGpC6C,IAAAA,aAAa,EAAEA,aAHqB;AAIpCD,IAAAA,kBAAkB,EAAEA,kBAJgB;AAKpC3C,IAAAA,gBAAgB,EAAEA,gBALkB;AAMpC+C,IAAAA,cAAc,EAAEA,cANoB;AAOpCE,IAAAA,oBAAoB,EAAEA,oBAPc;AAQpCC,IAAAA,QAAQ,EAAEA,QAR0B;AASpCY,IAAAA,SAAS,EAAE1F,YAAY,CAACyE,aAAD,CATa;AAUpCkB,IAAAA,UAAU,EAAE1F,aAAa,CAACwE,aAAD,CAVW;AAWpCO,IAAAA,YAAY,EAAEA,YAXsB;AAYpCjB,IAAAA,eAAe,EAAEW,aAZmB;AAapCO,IAAAA,WAAW,EAAEA,WAbuB;AAcpCE,IAAAA,kBAAkB,EAAEA,kBAdgB;AAepCS,IAAAA,gBAAgB,EAAElC,YAfkB;AAgBpCmC,IAAAA,sBAAsB,EAAEpF,IAAI,CAAC,KAAD,CAhBQ;AAiBpC6E,IAAAA,oBAAoB,EAAEA,oBAjBc;AAkBpCQ,IAAAA,mBAAmB,EAAEN,kBAlBe;AAmBpC9B,IAAAA,YAAY,EAAEA,YAnBsB;AAoBpCqC,IAAAA,aAAa,EAAEpB,cAAc,CAACqB,gBAAf,EApBqB;AAqBpCC,IAAAA,WAAW,EAAExB;AArBuB,GAAzB,CAAf;AAuBH,CAvDM","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/model/appointments.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getCellWidth,\r\n    getCellHeight,\r\n    getAllDayHeight,\r\n    PositionHelper\r\n} from \"../../../../ui/scheduler/workspaces/helpers/positionHelper\";\r\nimport {\r\n    getGroupCount\r\n} from \"../../../../ui/scheduler/resources/utils\";\r\nimport {\r\n    isGroupingByDate\r\n} from \"../workspaces/utils\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nimport {\r\n    calculateIsGroupedAllDayPanel,\r\n    getCellDuration\r\n} from \"../view_model/to_test/views/utils/base\";\r\nvar toMs = name => dateUtils.dateToMilliseconds(name);\r\nexport var getAppointmentRenderingStrategyName = viewType => {\r\n    var {\r\n        renderingStrategy: renderingStrategy\r\n    } = {\r\n        day: {\r\n            renderingStrategy: \"vertical\"\r\n        },\r\n        week: {\r\n            renderingStrategy: \"week\"\r\n        },\r\n        workWeek: {\r\n            renderingStrategy: \"week\"\r\n        },\r\n        month: {\r\n            renderingStrategy: \"horizontalMonth\"\r\n        },\r\n        timelineDay: {\r\n            renderingStrategy: \"horizontal\"\r\n        },\r\n        timelineWeek: {\r\n            renderingStrategy: \"horizontal\"\r\n        },\r\n        timelineWorkWeek: {\r\n            renderingStrategy: \"horizontal\"\r\n        },\r\n        timelineMonth: {\r\n            renderingStrategy: \"horizontalMonthLine\"\r\n        },\r\n        agenda: {\r\n            renderingStrategy: \"agenda\"\r\n        }\r\n    } [viewType];\r\n    return renderingStrategy\r\n};\r\nexport var getAppointmentsConfig = (schedulerConfig, viewConfig, loadedResources, viewDataProvider, isAllDayPanelSupported) => {\r\n    var groupCount = getGroupCount(loadedResources);\r\n    var startViewDate = viewDataProvider.getStartViewDate();\r\n    var dateRange = [startViewDate, viewDataProvider.getLastViewDateByEndDayHour(viewConfig.endDayHour)];\r\n    return {\r\n        adaptivityEnabled: schedulerConfig.adaptivityEnabled,\r\n        rtlEnabled: schedulerConfig.rtlEnabled,\r\n        resources: schedulerConfig.resources,\r\n        timeZone: schedulerConfig.timeZone,\r\n        groups: schedulerConfig.groups,\r\n        startDayHour: viewConfig.startDayHour,\r\n        viewStartDayHour: viewConfig.startDayHour,\r\n        endDayHour: viewConfig.endDayHour,\r\n        viewEndDayHour: viewConfig.endDayHour,\r\n        currentDate: viewConfig.currentDate,\r\n        isVirtualScrolling: \"virtual\" === viewConfig.scrolling.mode,\r\n        intervalCount: viewConfig.intervalCount,\r\n        hoursInterval: viewConfig.hoursInterval,\r\n        showAllDayPanel: viewConfig.showAllDayPanel,\r\n        allDayPanelMode: viewConfig.allDayPanelMode,\r\n        supportAllDayRow: isAllDayPanelSupported,\r\n        groupOrientation: viewDataProvider.getViewOptions().groupOrientation,\r\n        firstDayOfWeek: viewConfig.firstDayOfWeek,\r\n        viewType: viewConfig.type,\r\n        cellDurationInMinutes: viewConfig.cellDuration,\r\n        maxAppointmentsPerCell: viewConfig.maxAppointmentsPerCell,\r\n        isVerticalGroupOrientation: viewDataProvider.getViewOptions().isVerticalGrouping,\r\n        groupByDate: viewDataProvider.getViewOptions().isGroupedByDate,\r\n        startViewDate: startViewDate,\r\n        loadedResources: loadedResources,\r\n        appointmentCountPerCell: 2,\r\n        appointmentOffset: 26,\r\n        allowResizing: false,\r\n        allowAllDayResizing: false,\r\n        dateTableOffset: 0,\r\n        groupCount: groupCount,\r\n        dateRange: dateRange\r\n    }\r\n};\r\nexport var getAppointmentsModel = (appointmentsConfig, viewDataProvider, timeZoneCalculator, dataAccessors, cellsMetaData) => {\r\n    var groupedByDate = isGroupingByDate(appointmentsConfig.groups, appointmentsConfig.groupOrientation, appointmentsConfig.groupByDate);\r\n    var {\r\n        groupCount: groupCount,\r\n        isVerticalGroupOrientation: isVerticalGroupOrientation\r\n    } = appointmentsConfig;\r\n    var positionHelper = new PositionHelper({\r\n        viewDataProvider: viewDataProvider,\r\n        groupedByDate: groupedByDate,\r\n        rtlEnabled: appointmentsConfig.rtlEnabled,\r\n        groupCount: groupCount,\r\n        isVerticalGrouping: groupCount && isVerticalGroupOrientation,\r\n        getDOMMetaDataCallback: () => cellsMetaData\r\n    });\r\n    var isGroupedAllDayPanel = calculateIsGroupedAllDayPanel(appointmentsConfig.loadedResources, appointmentsConfig.groupOrientation, appointmentsConfig.showAllDayPanel);\r\n    var rowCount = viewDataProvider.getRowCount({\r\n        intervalCount: appointmentsConfig.intervalCount,\r\n        currentDate: appointmentsConfig.currentDate,\r\n        viewType: appointmentsConfig.viewType,\r\n        hoursInterval: appointmentsConfig.hoursInterval,\r\n        startDayHour: appointmentsConfig.startDayHour,\r\n        endDayHour: appointmentsConfig.endDayHour\r\n    });\r\n    var allDayHeight = getAllDayHeight(appointmentsConfig.showAllDayPanel, appointmentsConfig.isVerticalGroupOrientation, cellsMetaData);\r\n    var endViewDate = viewDataProvider.getLastCellEndDate();\r\n    var visibleDayDuration = viewDataProvider.getVisibleDayDuration(appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);\r\n    var {\r\n        startCellIndex: leftVirtualCellCount,\r\n        startRowIndex: topVirtualRowCount\r\n    } = viewDataProvider.getViewOptions();\r\n    var cellDuration = getCellDuration(appointmentsConfig.viewType, appointmentsConfig.startDayHour, appointmentsConfig.endDayHour, appointmentsConfig.hoursInterval);\r\n    var appointmentRenderingStrategyName = getAppointmentRenderingStrategyName(appointmentsConfig.viewType);\r\n    return _extends({}, appointmentsConfig, {\r\n        appointmentRenderingStrategyName: appointmentRenderingStrategyName,\r\n        loadedResources: appointmentsConfig.loadedResources,\r\n        dataAccessors: dataAccessors,\r\n        timeZoneCalculator: timeZoneCalculator,\r\n        viewDataProvider: viewDataProvider,\r\n        positionHelper: positionHelper,\r\n        isGroupedAllDayPanel: isGroupedAllDayPanel,\r\n        rowCount: rowCount,\r\n        cellWidth: getCellWidth(cellsMetaData),\r\n        cellHeight: getCellHeight(cellsMetaData),\r\n        allDayHeight: allDayHeight,\r\n        isGroupedByDate: groupedByDate,\r\n        endViewDate: endViewDate,\r\n        visibleDayDuration: visibleDayDuration,\r\n        intervalDuration: cellDuration,\r\n        allDayIntervalDuration: toMs(\"day\"),\r\n        leftVirtualCellCount: leftVirtualCellCount,\r\n        topVirtualCellCount: topVirtualRowCount,\r\n        cellDuration: cellDuration,\r\n        resizableStep: positionHelper.getResizableStep(),\r\n        DOMMetaData: cellsMetaData\r\n    })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}