{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDate, isDefined } from \"../../core/utils/type\";\nimport { map } from \"../../core/utils/iterator\";\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\n\nvar isDateType = function (dataType) {\n  return \"date\" === dataType || \"datetime\" === dataType;\n};\n\nvar getGroupInterval = function (column) {\n  var index;\n  var result = [];\n  var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\n  var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\n  var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\n\n  if (isDateType(column.dataType) && null !== groupInterval) {\n    result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\n    index = dateIntervals.indexOf(interval);\n\n    if (index >= 0) {\n      result = dateIntervals.slice(0, index);\n      result.push(groupInterval);\n      return result;\n    }\n\n    return result;\n  } else if (isDefined(groupInterval)) {\n    return Array.isArray(groupInterval) ? groupInterval : [groupInterval];\n  }\n};\n\nexport default (function () {\n  var getFilterSelector = function (column, target) {\n    var selector = column.dataField || column.selector;\n\n    if (\"search\" === target) {\n      selector = column.displayField || column.calculateDisplayValue || selector;\n    }\n\n    return selector;\n  };\n\n  var getFilterExpressionByRange = function (filterValue, target) {\n    var endFilterValue;\n    var startFilterExpression;\n    var endFilterExpression;\n    var selector = getFilterSelector(this, target);\n\n    if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\n      startFilterExpression = [selector, \">=\", filterValue[0]];\n      endFilterExpression = [selector, \"<=\", filterValue[1]];\n\n      if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\n        endFilterValue = new Date(filterValue[1].getTime());\n\n        if (\"date\" === this.dataType) {\n          endFilterValue.setDate(filterValue[1].getDate() + 1);\n        }\n\n        endFilterExpression = [selector, \"<\", endFilterValue];\n      }\n\n      return [startFilterExpression, \"and\", endFilterExpression];\n    }\n\n    var date;\n  };\n\n  var getFilterExpressionForDate = function (filterValue, selectedFilterOperation, target) {\n    var dateStart;\n    var dateEnd;\n    var dateInterval;\n\n    var values = function (dateValue) {\n      if (isDate(dateValue)) {\n        return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()];\n      }\n\n      return map((\"\" + dateValue).split(\"/\"), function (value, index) {\n        return 1 === index ? Number(value) - 1 : Number(value);\n      });\n    }(filterValue);\n\n    var selector = getFilterSelector(this, target);\n\n    if (\"headerFilter\" === target) {\n      dateInterval = getGroupInterval(this)[values.length - 1];\n    } else if (\"datetime\" === this.dataType) {\n      dateInterval = \"minute\";\n    }\n\n    switch (dateInterval) {\n      case \"year\":\n        dateStart = new Date(values[0], 0, 1);\n        dateEnd = new Date(values[0] + 1, 0, 1);\n        break;\n\n      case \"month\":\n        dateStart = new Date(values[0], values[1], 1);\n        dateEnd = new Date(values[0], values[1] + 1, 1);\n        break;\n\n      case \"quarter\":\n        dateStart = new Date(values[0], 3 * values[1], 1);\n        dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\n        break;\n\n      case \"hour\":\n        dateStart = new Date(values[0], values[1], values[2], values[3]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\n        break;\n\n      case \"minute\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\n        break;\n\n      case \"second\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\n        break;\n\n      default:\n        dateStart = new Date(values[0], values[1], values[2]);\n        dateEnd = new Date(values[0], values[1], values[2] + 1);\n    }\n\n    switch (selectedFilterOperation) {\n      case \"<\":\n        return [selector, \"<\", dateStart];\n\n      case \"<=\":\n        return [selector, \"<\", dateEnd];\n\n      case \">\":\n        return [selector, \">=\", dateEnd];\n\n      case \">=\":\n        return [selector, \">=\", dateStart];\n\n      case \"<>\":\n        return [[selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]];\n\n      default:\n        return [[selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]];\n    }\n  };\n\n  var getFilterExpressionForNumber = function (filterValue, selectedFilterOperation, target) {\n    var selector = getFilterSelector(this, target);\n    var groupInterval = getGroupInterval(this);\n\n    if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\n      var values = (\"\" + filterValue).split(\"/\");\n      var value = Number(values[values.length - 1]);\n      var interval = groupInterval[values.length - 1];\n      var startFilterValue = [selector, \">=\", value];\n      var endFilterValue = [selector, \"<\", value + interval];\n      var condition = [startFilterValue, \"and\", endFilterValue];\n      return condition;\n    }\n\n    return [selector, selectedFilterOperation || \"=\", filterValue];\n  };\n\n  return {\n    defaultCalculateFilterExpression: function (filterValue, selectedFilterOperation, target) {\n      var column = this;\n      var selector = getFilterSelector(column, target);\n      var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\n      var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\n      var filter = null;\n\n      if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\n        filter = [selector, selectedFilterOperation || \"=\", null];\n\n        if (\"string\" === dataType) {\n          filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]];\n        }\n      } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\n        filter = [selector, selectedFilterOperation || \"contains\", filterValue];\n      } else if (\"between\" === selectedFilterOperation) {\n        return getFilterExpressionByRange.apply(column, [filterValue, target]);\n      } else if (isDateType(dataType) && isDefined(filterValue)) {\n        return getFilterExpressionForDate.apply(column, arguments);\n      } else if (\"number\" === dataType) {\n        return getFilterExpressionForNumber.apply(column, arguments);\n      } else {\n        filter = [selector, selectedFilterOperation || \"=\", filterValue];\n      }\n\n      return filter;\n    },\n    getGroupInterval: getGroupInterval\n  };\n})();","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/shared/filtering.js"],"names":["isDate","isDefined","map","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","dataType","getGroupInterval","column","index","result","dateIntervals","groupInterval","headerFilter","interval","indexOf","slice","push","Array","isArray","getFilterSelector","target","selector","dataField","displayField","calculateDisplayValue","getFilterExpressionByRange","filterValue","endFilterValue","startFilterExpression","endFilterExpression","date","getHours","getMinutes","getSeconds","getMilliseconds","Date","getTime","setDate","getDate","getFilterExpressionForDate","selectedFilterOperation","dateStart","dateEnd","dateInterval","values","dateValue","getFullYear","getMonth","split","value","Number","length","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","lookup","filter","apply","arguments"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = dateIntervals.indexOf(interval);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}