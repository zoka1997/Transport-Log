{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.base.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWindow, hasWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport { isDate as isDateType, isString, isNumeric } from \"../../core/utils/type\";\nimport { createTextElementHiddenCopy } from \"../../core/utils/dom\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { inputType } from \"../../core/utils/support\";\nimport devices from \"../../core/devices\";\nimport config from \"../../core/config\";\nimport dateUtils from \"../../core/utils/date\";\nimport uiDateUtils from \"./ui.date_utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport Calendar from \"./ui.date_box.strategy.calendar\";\nimport DateView from \"./ui.date_box.strategy.date_view\";\nimport Native from \"./ui.date_box.strategy.native\";\nimport CalendarWithTime from \"./ui.date_box.strategy.calendar_with_time\";\nimport List from \"./ui.date_box.strategy.list\";\nvar DATEBOX_CLASS = \"dx-datebox\";\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\nvar DROPDOWNEDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar PICKER_TYPE = {\n  calendar: \"calendar\",\n  rollers: \"rollers\",\n  list: \"list\",\n  native: \"native\"\n};\nvar TYPE = {\n  date: \"date\",\n  datetime: \"datetime\",\n  time: \"time\"\n};\nvar STRATEGY_NAME = {\n  calendar: \"Calendar\",\n  dateView: \"DateView\",\n  native: \"Native\",\n  calendarWithTime: \"CalendarWithTime\",\n  list: \"List\"\n};\nvar STRATEGY_CLASSES = {\n  Calendar: Calendar,\n  DateView: DateView,\n  Native: Native,\n  CalendarWithTime: CalendarWithTime,\n  List: List\n};\nvar DateBox = DropDownEditor.inherit({\n  _supportedKeys: function () {\n    return extend(this.callBase(), this._strategy.supportedKeys());\n  },\n  _renderButtonContainers: function () {\n    this.callBase.apply(this, arguments);\n\n    this._strategy.customizeButtons();\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      type: \"date\",\n      showAnalogClock: true,\n      value: null,\n      dateSerializationFormat: void 0,\n      min: void 0,\n      max: void 0,\n      displayFormat: null,\n      interval: 30,\n      disabledDates: null,\n      pickerType: PICKER_TYPE.calendar,\n      invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\n      dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\n      applyButtonText: messageLocalization.format(\"OK\"),\n      adaptivityEnabled: false,\n      calendarOptions: {},\n      useHiddenSubmitElement: true\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        \"dropDownOptions.showTitle\": true\n      }\n    }, {\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }, {\n      device: function () {\n        var realDevice = devices.real();\n        var platform = realDevice.platform;\n        return \"ios\" === platform || \"android\" === platform;\n      },\n      options: {\n        pickerType: PICKER_TYPE.native\n      }\n    }, {\n      device: {\n        platform: \"generic\",\n        deviceType: \"desktop\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }]);\n  },\n  _initOptions: function (options) {\n    this._userOptions = extend({}, options);\n    this.callBase(options);\n\n    this._updatePickerOptions();\n  },\n  _updatePickerOptions: function () {\n    var pickerType = this.option(\"pickerType\");\n    var type = this.option(\"type\");\n\n    if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\n      pickerType = PICKER_TYPE.calendar;\n    }\n\n    if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\n      pickerType = PICKER_TYPE.list;\n    }\n\n    this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\n    this._pickerType = pickerType;\n  },\n  _init: function () {\n    this._initStrategy();\n\n    this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\n    delete this._userOptions;\n    this.callBase();\n  },\n  _toLowerCaseFirstLetter: function (string) {\n    return string.charAt(0).toLowerCase() + string.substr(1);\n  },\n  _initStrategy: function () {\n    var strategyName = this._getStrategyName(this._getFormatType());\n\n    var strategy = STRATEGY_CLASSES[strategyName];\n\n    if (!(this._strategy && this._strategy.NAME === strategyName)) {\n      this._strategy = new strategy(this);\n    }\n  },\n  _getFormatType: function () {\n    var currentType = this.option(\"type\");\n    var isTime = /h|m|s/g.test(currentType);\n    var isDate = /d|M|Y/g.test(currentType);\n    var type = \"\";\n\n    if (isDate) {\n      type += TYPE.date;\n    }\n\n    if (isTime) {\n      type += TYPE.time;\n    }\n\n    return type;\n  },\n  _getStrategyName: function (type) {\n    var pickerType = this._pickerType;\n\n    if (pickerType === PICKER_TYPE.rollers) {\n      return STRATEGY_NAME.dateView;\n    } else if (pickerType === PICKER_TYPE.native) {\n      return STRATEGY_NAME.native;\n    }\n\n    if (type === TYPE.date) {\n      return STRATEGY_NAME.calendar;\n    }\n\n    if (type === TYPE.datetime) {\n      return STRATEGY_NAME.calendarWithTime;\n    }\n\n    return STRATEGY_NAME.list;\n  },\n  _initMarkup: function () {\n    this.$element().addClass(DATEBOX_CLASS);\n    this.callBase();\n\n    this._refreshFormatClass();\n\n    this._refreshPickerTypeClass();\n\n    this._strategy.renderInputMinMax(this._input());\n  },\n  _render: function () {\n    this.callBase();\n\n    this._formatValidationIcon();\n  },\n  _renderDimensions: function () {\n    this.callBase();\n    this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\n\n    this._dimensionChanged();\n  },\n  _dimensionChanged: function () {\n    this.callBase(arguments);\n\n    if (this._popup) {\n      var _this$_strategy$_upda, _this$_strategy;\n\n      null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy);\n    }\n  },\n  _refreshFormatClass: function () {\n    var $element = this.$element();\n    each(TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"));\n  },\n  _refreshPickerTypeClass: function () {\n    var $element = this.$element();\n    each(PICKER_TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType);\n  },\n  _formatValidationIcon: function () {\n    if (!hasWindow()) {\n      return;\n    }\n\n    var inputElement = this._input().get(0);\n\n    var isRtlEnabled = this.option(\"rtlEnabled\");\n\n    var clearButtonWidth = this._getClearButtonWidth();\n\n    var longestElementDimensions = this._getLongestElementDimensions();\n\n    var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\n    var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\n    var style = inputElement.style;\n    this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\n\n    if (shouldHideValidationIcon) {\n      if (void 0 === this._storedPadding) {\n        this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding;\n      }\n\n      isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0;\n    } else {\n      isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\";\n    }\n  },\n  _getClearButtonWidth: function () {\n    var clearButtonWidth = 0;\n\n    if (this._isClearButtonVisible() && \"\" === this._input().val()) {\n      var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\n      clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width);\n    }\n\n    return clearButtonWidth;\n  },\n  _getLongestElementDimensions: function () {\n    var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\n\n    var $input = this._input();\n\n    var inputElement = $input.get(0);\n    var $longestValueElement = createTextElementHiddenCopy($input, longestValue);\n    var isPaddingStored = void 0 !== this._storedPadding;\n    var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\n    $longestValueElement.appendTo(this.$element());\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\n    var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\n    var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\n    var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\n    $longestValueElement.remove();\n    return {\n      width: necessaryWidth,\n      leftPadding: leftPadding,\n      rightPadding: rightPadding\n    };\n  },\n\n  _getKeyboardListeners() {\n    return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()]);\n  },\n\n  _renderPopup: function () {\n    this.callBase();\n\n    this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS);\n\n    this._renderPopupWrapper();\n  },\n  _popupConfig: function () {\n    var popupConfig = this.callBase();\n    return extend(this._strategy.popupConfig(popupConfig), {\n      title: this._getPopupTitle(),\n      dragEnabled: false\n    });\n  },\n  _renderPopupWrapper: function () {\n    if (!this._popup) {\n      return;\n    }\n\n    var $element = this.$element();\n    var classPostfixes = extend({}, TYPE, PICKER_TYPE);\n    each(classPostfixes, function (_, item) {\n      $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item);\n    }.bind(this));\n\n    this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType).addClass(DROPDOWNEDITOR_OVERLAY_CLASS);\n  },\n  _renderPopupContent: function () {\n    this.callBase();\n\n    this._strategy.renderPopupContent();\n  },\n  _getFirstPopupElement: function () {\n    return this._strategy.getFirstPopupElement() || this.callBase();\n  },\n  _getLastPopupElement: function () {\n    return this._strategy.getLastPopupElement() || this.callBase();\n  },\n  _popupShowingHandler: function () {\n    this.callBase();\n\n    this._strategy.popupShowingHandler();\n  },\n  _popupShownHandler: function () {\n    this.callBase();\n\n    this._strategy.renderOpenedState();\n  },\n  _popupHiddenHandler: function () {\n    this.callBase();\n\n    this._strategy.renderOpenedState();\n\n    this._strategy.popupHiddenHandler();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._formatValidationIcon();\n    }\n  },\n  _clearValueHandler: function (e) {\n    this.option(\"text\", \"\");\n    this.callBase(e);\n  },\n  _readOnlyPropValue: function () {\n    if (this._pickerType === PICKER_TYPE.rollers) {\n      return true;\n    }\n\n    var platform = devices.real().platform;\n    var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\n\n    if (isCustomValueDisabled) {\n      return this.option(\"readOnly\");\n    }\n\n    return this.callBase();\n  },\n  _isClearButtonVisible: function () {\n    return this.callBase() && !this._isNativeType();\n  },\n  _renderValue: function () {\n    var value = this.dateOption(\"value\");\n    this.option(\"text\", this._getDisplayedText(value));\n\n    this._strategy.renderValue();\n\n    return this.callBase();\n  },\n  _setSubmitValue: function () {\n    var value = this.dateOption(\"value\");\n    var dateSerializationFormat = this.option(\"dateSerializationFormat\");\n    var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\n    var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\n\n    this._getSubmitElement().val(submitValue);\n  },\n  _getDisplayedText: function (value) {\n    var mode = this.option(\"mode\");\n    var displayedText;\n\n    if (\"text\" === mode) {\n      var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n      displayedText = dateLocalization.format(value, displayFormat);\n    } else {\n      var format = this._getFormatByMode(mode);\n\n      if (format) {\n        displayedText = dateLocalization.format(value, format);\n      } else {\n        displayedText = uiDateUtils.toStandardDateFormat(value, mode);\n      }\n    }\n\n    return displayedText;\n  },\n  _getFormatByMode: function (mode) {\n    return inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode];\n  },\n  _valueChangeEventHandler: function (e) {\n    var {\n      text: text,\n      type: type,\n      validationError: validationError\n    } = this.option();\n    var currentValue = this.dateOption(\"value\");\n\n    if (text === this._getDisplayedText(currentValue)) {\n      if (!validationError || validationError.editorSpecific) {\n        this._applyInternalValidation(currentValue);\n\n        this._applyCustomValidation(currentValue);\n      }\n\n      return;\n    }\n\n    var parsedDate = this._getParsedDate(text);\n\n    var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\n    var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\n    var date = parsedDate && \"time\" === type ? newValue : parsedDate;\n\n    if (this._applyInternalValidation(date).isValid) {\n      var displayedText = this._getDisplayedText(newValue);\n\n      if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\n        this._renderValue();\n      } else {\n        this.dateValue(newValue, e);\n      }\n    }\n  },\n  _getDateByDefault: function () {\n    return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate();\n  },\n  _getParsedDate: function (text) {\n    var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var parsedText = this._strategy.getParsedText(text, displayFormat);\n\n    return null !== parsedText && void 0 !== parsedText ? parsedText : void 0;\n  },\n\n  _applyInternalValidation(value) {\n    var text = this.option(\"text\");\n    var hasText = !!text && null !== value;\n    var isDate = !!value && isDateType(value) && !isNaN(value.getTime());\n    var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\n    var isValid = !hasText && !value || isDateInRange;\n    var validationMessage = \"\";\n\n    if (!isDate) {\n      validationMessage = this.option(\"invalidDateMessage\");\n    } else if (!isDateInRange) {\n      validationMessage = this.option(\"dateOutOfRangeMessage\");\n    }\n\n    this.option({\n      isValid: isValid,\n      validationError: isValid ? null : {\n        editorSpecific: true,\n        message: validationMessage\n      }\n    });\n    return {\n      isValid: isValid,\n      isDate: isDate\n    };\n  },\n\n  _applyCustomValidation: function (value) {\n    this.validationRequest.fire({\n      editor: this,\n      value: this._serializeDate(value)\n    });\n  },\n  _isValueChanged: function (newValue) {\n    var oldValue = this.dateOption(\"value\");\n    var oldTime = oldValue && oldValue.getTime();\n    var newTime = newValue && newValue.getTime();\n    return oldTime !== newTime;\n  },\n  _isTextChanged: function (newValue) {\n    var oldText = this.option(\"text\");\n    var newText = newValue && this._getDisplayedText(newValue) || \"\";\n    return oldText !== newText;\n  },\n  _renderProps: function () {\n    this.callBase();\n\n    this._input().attr(\"autocomplete\", \"off\");\n  },\n  _renderOpenedState: function () {\n    if (!this._isNativeType()) {\n      this.callBase();\n    }\n\n    if (this._strategy.isAdaptivityChanged()) {\n      this._refreshStrategy();\n    }\n  },\n  _getPopupTitle: function () {\n    var placeholder = this.option(\"placeholder\");\n\n    if (placeholder) {\n      return placeholder;\n    }\n\n    var type = this.option(\"type\");\n\n    if (type === TYPE.time) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\");\n    }\n\n    if (type === TYPE.date || type === TYPE.datetime) {\n      return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\");\n    }\n\n    return \"\";\n  },\n  _refreshStrategy: function () {\n    this._strategy.dispose();\n\n    this._initStrategy();\n\n    this.option(this._strategy.getDefaultOptions());\n\n    this._refresh();\n  },\n  _applyButtonHandler: function (e) {\n    var value = this._strategy.getValue();\n\n    this.dateValue(value, e.event);\n    this.callBase();\n  },\n  _dispose: function () {\n    var _this$_strategy2;\n\n    this.callBase();\n    null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 ? void 0 : _this$_strategy2.dispose();\n  },\n  _isNativeType: function () {\n    return this._pickerType === PICKER_TYPE.native;\n  },\n  _updatePopupTitle: function () {\n    var _this$_popup;\n\n    null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.option(\"title\", this._getPopupTitle());\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"showClearButton\":\n      case \"buttons\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"pickerType\":\n        this._updatePickerOptions({\n          pickerType: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshPickerTypeClass();\n\n        this._invalidate();\n\n        break;\n\n      case \"type\":\n        this._updatePickerOptions({\n          format: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshFormatClass();\n\n        this._renderPopupWrapper();\n\n        this._formatValidationIcon();\n\n        this._updateValue();\n\n        break;\n\n      case \"placeholder\":\n        this.callBase.apply(this, arguments);\n\n        this._updatePopupTitle();\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        var isValid = this.option(\"isValid\");\n\n        this._applyInternalValidation(this.dateOption(\"value\"));\n\n        if (!isValid) {\n          this._applyCustomValidation(this.dateOption(\"value\"));\n        }\n\n        this._invalidate();\n\n        break;\n\n      case \"dateSerializationFormat\":\n      case \"interval\":\n      case \"disabledDates\":\n      case \"calendarOptions\":\n        this._invalidate();\n\n        break;\n\n      case \"displayFormat\":\n        this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\n\n        this._renderInputValue();\n\n        break;\n\n      case \"text\":\n        this._strategy.textChangedHandler(args.value);\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"isValid\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"showDropDownButton\":\n        this._formatValidationIcon();\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"readOnly\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"invalidDateMessage\":\n      case \"dateOutOfRangeMessage\":\n      case \"adaptivityEnabled\":\n      case \"showAnalogClock\":\n        break;\n\n      default:\n        this.callBase.apply(this, arguments);\n    }\n  },\n  _getSerializationFormat: function () {\n    var value = this.option(\"value\");\n\n    if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\n      return this.option(\"dateSerializationFormat\");\n    }\n\n    if (isNumeric(value)) {\n      return \"number\";\n    }\n\n    if (!isString(value)) {\n      return;\n    }\n\n    return dateSerialization.getDateSerializationFormat(value);\n  },\n  _updateValue: function (value) {\n    this.callBase();\n\n    this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"));\n  },\n  dateValue: function (value, dxEvent) {\n    var isValueChanged = this._isValueChanged(value);\n\n    if (isValueChanged && dxEvent) {\n      this._saveValueChangeEvent(dxEvent);\n    }\n\n    if (!isValueChanged) {\n      if (this._isTextChanged(value)) {\n        this._updateValue(value);\n      } else if (\"\" === this.option(\"text\")) {\n        this._applyCustomValidation(value);\n      }\n    }\n\n    return this.dateOption(\"value\", value);\n  },\n  dateOption: function (optionName, value) {\n    if (1 === arguments.length) {\n      return dateSerialization.deserializeDate(this.option(optionName));\n    }\n\n    this.option(optionName, this._serializeDate(value));\n  },\n  _serializeDate: function (date) {\n    var serializationFormat = this._getSerializationFormat();\n\n    return dateSerialization.serializeDate(date, serializationFormat);\n  },\n  _clearValue: function () {\n    var value = this.option(\"value\");\n    this.callBase();\n\n    if (null === value) {\n      this._applyCustomValidation(null);\n    }\n  },\n  reset: function () {\n    var value = this.option(\"value\");\n    this.callBase();\n\n    if (null === value) {\n      this._applyInternalValidation(null);\n    }\n  }\n});\nexport default DateBox;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/date_box/ui.date_box.base.js"],"names":["getWindow","hasWindow","window","isDate","isDateType","isString","isNumeric","createTextElementHiddenCopy","each","extend","inputType","devices","config","dateUtils","uiDateUtils","dateSerialization","DropDownEditor","dateLocalization","messageLocalization","Calendar","DateView","Native","CalendarWithTime","List","DATEBOX_CLASS","DX_AUTO_WIDTH_CLASS","DX_INVALID_BADGE_CLASS","DX_CLEAR_BUTTON_CLASS","DATEBOX_WRAPPER_CLASS","DROPDOWNEDITOR_OVERLAY_CLASS","PICKER_TYPE","calendar","rollers","list","native","TYPE","date","datetime","time","STRATEGY_NAME","dateView","calendarWithTime","STRATEGY_CLASSES","DateBox","inherit","_supportedKeys","callBase","_strategy","supportedKeys","_renderButtonContainers","apply","arguments","customizeButtons","_getDefaultOptions","type","showAnalogClock","value","dateSerializationFormat","min","max","displayFormat","interval","disabledDates","pickerType","invalidDateMessage","format","dateOutOfRangeMessage","applyButtonText","adaptivityEnabled","calendarOptions","useHiddenSubmitElement","_defaultOptionsRules","concat","device","platform","options","buttonsLocation","realDevice","real","deviceType","_initOptions","_userOptions","_updatePickerOptions","option","_pickerType","_init","_initStrategy","getDefaultOptions","_toLowerCaseFirstLetter","string","charAt","toLowerCase","substr","strategyName","_getStrategyName","_getFormatType","strategy","NAME","currentType","isTime","test","_initMarkup","$element","addClass","_refreshFormatClass","_refreshPickerTypeClass","renderInputMinMax","_input","_render","_formatValidationIcon","_renderDimensions","toggleClass","_dimensionChanged","_popup","_this$_strategy$_upda","_this$_strategy","_updatePopupHeight","call","_","item","removeClass","inputElement","get","isRtlEnabled","clearButtonWidth","_getClearButtonWidth","longestElementDimensions","_getLongestElementDimensions","curWidth","parseFloat","getComputedStyle","width","shouldHideValidationIcon","style","_storedPadding","leftPadding","rightPadding","paddingLeft","paddingRight","_isClearButtonVisible","val","clearButtonElement","find","getDisplayFormat","longestValue","getLongestDate","getMonthNames","getDayNames","$input","$longestValueElement","isPaddingStored","storedPadding","appendTo","elementWidth","necessaryWidth","remove","_getKeyboardListeners","getKeyboardListener","_renderPopup","$wrapper","_renderPopupWrapper","_popupConfig","popupConfig","title","_getPopupTitle","dragEnabled","classPostfixes","bind","_renderPopupContent","renderPopupContent","_getFirstPopupElement","getFirstPopupElement","_getLastPopupElement","getLastPopupElement","_popupShowingHandler","popupShowingHandler","_popupShownHandler","renderOpenedState","_popupHiddenHandler","popupHiddenHandler","_visibilityChanged","visible","_clearValueHandler","e","_readOnlyPropValue","isCustomValueDisabled","_isNativeType","_renderValue","dateOption","_getDisplayedText","renderValue","_setSubmitValue","submitFormat","SUBMIT_FORMATS_MAP","submitValue","serializeDate","toStandardDateFormat","_getSubmitElement","mode","displayedText","_getFormatByMode","FORMATS_MAP","_valueChangeEventHandler","text","validationError","currentValue","editorSpecific","_applyInternalValidation","_applyCustomValidation","parsedDate","_getParsedDate","_getDateByDefault","newValue","mergeDates","isValid","getTime","dateValue","useCurrentDateByDefault","getDefaultDate","parsedText","getParsedText","hasText","isNaN","isDateInRange","dateInRange","validationMessage","message","validationRequest","fire","editor","_serializeDate","_isValueChanged","oldValue","oldTime","newTime","_isTextChanged","oldText","newText","_renderProps","attr","_renderOpenedState","isAdaptivityChanged","_refreshStrategy","placeholder","dispose","_refresh","_applyButtonHandler","getValue","event","_dispose","_this$_strategy2","_updatePopupTitle","_this$_popup","_optionChanged","args","name","_invalidate","_updateValue","_renderInputValue","textChangedHandler","_getSerializationFormat","forceIsoDateParsing","getDateSerializationFormat","dxEvent","isValueChanged","_saveValueChangeEvent","optionName","length","deserializeDate","serializationFormat","_clearValue","reset"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.base.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport {\r\n    isDate as isDateType,\r\n    isString,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    createTextElementHiddenCopy\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inputType\r\n} from \"../../core/utils/support\";\r\nimport devices from \"../../core/devices\";\r\nimport config from \"../../core/config\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport uiDateUtils from \"./ui.date_utils\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport DropDownEditor from \"../drop_down_editor/ui.drop_down_editor\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Calendar from \"./ui.date_box.strategy.calendar\";\r\nimport DateView from \"./ui.date_box.strategy.date_view\";\r\nimport Native from \"./ui.date_box.strategy.native\";\r\nimport CalendarWithTime from \"./ui.date_box.strategy.calendar_with_time\";\r\nimport List from \"./ui.date_box.strategy.list\";\r\nvar DATEBOX_CLASS = \"dx-datebox\";\r\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar DROPDOWNEDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    native: \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    native: \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: Calendar,\r\n    DateView: DateView,\r\n    Native: Native,\r\n    CalendarWithTime: CalendarWithTime,\r\n    List: List\r\n};\r\nvar DateBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _renderButtonContainers: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._strategy.customizeButtons()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: messageLocalization.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: messageLocalization.format(\"validation-range\"),\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {},\r\n            useHiddenSubmitElement: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                \"dropDownOptions.showTitle\": true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = devices.real();\r\n                var platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = extend({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== devices.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option(extend({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType());\r\n        var strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType);\r\n        var isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else if (pickerType === PICKER_TYPE.native) {\r\n            return STRATEGY_NAME.native\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._formatValidationIcon()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.callBase(arguments);\r\n        if (this._popup) {\r\n            var _this$_strategy$_upda, _this$_strategy;\r\n            null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy)\r\n        }\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        each(TYPE, (function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        }));\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        each(PICKER_TYPE, (function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        }));\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _formatValidationIcon: function() {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        var inputElement = this._input().get(0);\r\n        var isRtlEnabled = this.option(\"rtlEnabled\");\r\n        var clearButtonWidth = this._getClearButtonWidth();\r\n        var longestElementDimensions = this._getLongestElementDimensions();\r\n        var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\r\n        var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\r\n        var style = inputElement.style;\r\n        this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\r\n        if (shouldHideValidationIcon) {\r\n            if (void 0 === this._storedPadding) {\r\n                this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding\r\n            }\r\n            isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0\r\n        } else {\r\n            isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\"\r\n        }\r\n    },\r\n    _getClearButtonWidth: function() {\r\n        var clearButtonWidth = 0;\r\n        if (this._isClearButtonVisible() && \"\" === this._input().val()) {\r\n            var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\r\n            clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width)\r\n        }\r\n        return clearButtonWidth\r\n    },\r\n    _getLongestElementDimensions: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var longestValue = dateLocalization.format(uiDateUtils.getLongestDate(format, dateLocalization.getMonthNames(), dateLocalization.getDayNames()), format);\r\n        var $input = this._input();\r\n        var inputElement = $input.get(0);\r\n        var $longestValueElement = createTextElementHiddenCopy($input, longestValue);\r\n        var isPaddingStored = void 0 !== this._storedPadding;\r\n        var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\r\n        $longestValueElement.appendTo(this.$element());\r\n        var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\r\n        var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\r\n        var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\r\n        var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\r\n        $longestValueElement.remove();\r\n        return {\r\n            width: necessaryWidth,\r\n            leftPadding: leftPadding,\r\n            rightPadding: rightPadding\r\n        }\r\n    },\r\n    _getKeyboardListeners() {\r\n        return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()])\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return extend(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = extend({}, TYPE, PICKER_TYPE);\r\n        each(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup.$wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType).addClass(DROPDOWNEDITOR_OVERLAY_CLASS)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._formatValidationIcon()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        if (this._pickerType === PICKER_TYPE.rollers) {\r\n            return true\r\n        }\r\n        var platform = devices.real().platform;\r\n        var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\r\n        if (isCustomValueDisabled) {\r\n            return this.option(\"readOnly\")\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        this._strategy.renderValue();\r\n        return this.callBase()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        var dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        var submitFormat = uiDateUtils.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? dateSerialization.serializeDate(value, dateSerializationFormat) : uiDateUtils.toStandardDateFormat(value, submitFormat);\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var mode = this.option(\"mode\");\r\n        var displayedText;\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = dateLocalization.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = dateLocalization.format(value, format)\r\n            } else {\r\n                displayedText = uiDateUtils.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return inputType(mode) ? null : uiDateUtils.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var {\r\n            text: text,\r\n            type: type,\r\n            validationError: validationError\r\n        } = this.option();\r\n        var currentValue = this.dateOption(\"value\");\r\n        if (text === this._getDisplayedText(currentValue)) {\r\n            if (!validationError || validationError.editorSpecific) {\r\n                this._applyInternalValidation(currentValue);\r\n                this._applyCustomValidation(currentValue)\r\n            }\r\n            return\r\n        }\r\n        var parsedDate = this._getParsedDate(text);\r\n        var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\r\n        var newValue = uiDateUtils.mergeDates(value, parsedDate, type);\r\n        var date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._applyInternalValidation(date).isValid) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate()\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return null !== parsedText && void 0 !== parsedText ? parsedText : void 0\r\n    },\r\n    _applyInternalValidation(value) {\r\n        var text = this.option(\"text\");\r\n        var hasText = !!text && null !== value;\r\n        var isDate = !!value && isDateType(value) && !isNaN(value.getTime());\r\n        var isDateInRange = isDate && dateUtils.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\r\n        var isValid = !hasText && !value || isDateInRange;\r\n        var validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else if (!isDateInRange) {\r\n            validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return {\r\n            isValid: isValid,\r\n            isDate: isDate\r\n        }\r\n    },\r\n    _applyCustomValidation: function(value) {\r\n        this.validationRequest.fire({\r\n            editor: this,\r\n            value: this._serializeDate(value)\r\n        })\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\");\r\n        var oldTime = oldValue && oldValue.getTime();\r\n        var newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.option(\"text\");\r\n        var newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return messageLocalization.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        var value = this._strategy.getValue();\r\n        this.dateValue(value, e.event);\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        var _this$_strategy2;\r\n        this.callBase();\r\n        null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 ? void 0 : _this$_strategy2.dispose()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _updatePopupTitle: function() {\r\n        var _this$_popup;\r\n        null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.option(\"title\", this._getPopupTitle())\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n            case \"buttons\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._formatValidationIcon();\r\n                this._updateValue();\r\n                break;\r\n            case \"placeholder\":\r\n                this.callBase.apply(this, arguments);\r\n                this._updatePopupTitle();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                var isValid = this.option(\"isValid\");\r\n                this._applyInternalValidation(this.dateOption(\"value\"));\r\n                if (!isValid) {\r\n                    this._applyCustomValidation(this.dateOption(\"value\"))\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\r\n                this._renderInputValue();\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"showDropDownButton\":\r\n                this._formatValidationIcon();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"readOnly\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && config().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if (isNumeric(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    },\r\n    _updateValue: function(value) {\r\n        this.callBase();\r\n        this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"))\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        var isValueChanged = this._isValueChanged(value);\r\n        if (isValueChanged && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        if (!isValueChanged) {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue(value)\r\n            } else if (\"\" === this.option(\"text\")) {\r\n                this._applyCustomValidation(value)\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return dateSerialization.deserializeDate(this.option(optionName))\r\n        }\r\n        this.option(optionName, this._serializeDate(value))\r\n    },\r\n    _serializeDate: function(date) {\r\n        var serializationFormat = this._getSerializationFormat();\r\n        return dateSerialization.serializeDate(date, serializationFormat)\r\n    },\r\n    _clearValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyCustomValidation(null)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var value = this.option(\"value\");\r\n        this.callBase();\r\n        if (null === value) {\r\n            this._applyInternalValidation(null)\r\n        }\r\n    }\r\n});\r\nexport default DateBox;\r\n"]},"metadata":{},"sourceType":"module"}