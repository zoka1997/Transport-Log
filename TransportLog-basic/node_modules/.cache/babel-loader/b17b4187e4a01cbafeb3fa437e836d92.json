{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { setHeight as _setHeight, getHeight, setWidth, getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { isDefined, isString, isObject } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { addNamespace, eventData as getEventData, isTouchEvent } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { start as dragEventStart, move as dragEventMove, end as dragEventEnd } from \"../../events/drag\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport fx from \"../../animation/fx\";\nimport swatchContainer from \"../widget/swatch_container\";\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\nvar CELL_CONTENT_CLASS = \"text-content\";\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\nvar TRACKER_CLASS = \"tracker\";\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\nvar DRAGGING_DELTA = 5;\nvar COLUMN_OPACITY = .5;\n\nvar allowResizing = function (that) {\n  return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\");\n};\n\nvar allowReordering = function (that) {\n  return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\");\n};\n\nvar TrackerView = modules.View.inherit({\n  _renderCore: function () {\n    this.callBase();\n    this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\n    this.hide();\n  },\n  _unsubscribeFromCallback: function () {\n    if (this._positionChanged) {\n      this._tablePositionController.positionChanged.remove(this._positionChanged);\n    }\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n\n    that._positionChanged = function (position) {\n      var $element = that.element();\n\n      if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\n        $element.css({\n          top: position.top\n        });\n\n        _setHeight($element, position.height);\n      }\n    };\n\n    this._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      this._unsubscribeFromCallback();\n\n      if (args.value) {\n        this._subscribeToCallback();\n\n        this._invalidate();\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._subscribeToCallback();\n  },\n  isVisible: function () {\n    return allowResizing(this);\n  },\n  show: function () {\n    this.element().show();\n  },\n  hide: function () {\n    this.element() && this.element().hide();\n  },\n  setHeight: function (value) {\n    _setHeight(this.element(), value);\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\nvar SeparatorView = modules.View.inherit({\n  _renderSeparator: function () {},\n  _renderCore: function (options) {\n    this.callBase(options);\n    this._isShown = true;\n\n    this._renderSeparator();\n\n    this.hide();\n  },\n  show: function () {\n    this._isShown = true;\n  },\n  hide: function () {\n    this._isShown = false;\n  },\n  height: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (isDefined(value)) {\n        _setHeight($element, value);\n      } else {\n        return getHeight($element);\n      }\n    }\n  },\n  width: function (value) {\n    var $element = this.element();\n\n    if ($element) {\n      if (isDefined(value)) {\n        setWidth($element, value);\n      } else {\n        return getWidth($element);\n      }\n    }\n  }\n});\nvar ColumnsSeparatorView = SeparatorView.inherit({\n  _renderSeparator: function () {\n    this.callBase();\n    var $element = this.element();\n    $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS));\n  },\n  _subscribeToCallback: function () {\n    var that = this;\n    var $element;\n\n    that._positionChanged = function (position) {\n      $element = that.element();\n\n      if ($element) {\n        $element.css({\n          top: position.top\n        });\n\n        _setHeight($element, position.height);\n      }\n    };\n\n    that._tablePositionController.positionChanged.add(that._positionChanged);\n  },\n  _unsubscribeFromCallback: function () {\n    this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged);\n  },\n  _init: function () {\n    this._isTransparent = allowResizing(this);\n\n    if (this.isVisible()) {\n      this._subscribeToCallback();\n    }\n  },\n  isVisible: function () {\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this));\n  },\n  optionChanged: function (args) {\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._invalidate();\n\n        this.hide(true);\n      } else {\n        this._unsubscribeFromCallback();\n\n        this._isTransparent = allowResizing(this);\n        this.hide(true);\n      }\n    }\n\n    this.callBase(args);\n  },\n  init: function () {\n    this.callBase();\n    this._tablePositionController = this.getController(\"tablePosition\");\n\n    this._init();\n  },\n  show: function () {\n    var $element = this.element();\n\n    if ($element && !this._isShown) {\n      if (this._isTransparent) {\n        $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT));\n      } else {\n        $element.show();\n      }\n    }\n\n    this.callBase();\n  },\n  hide: function (force) {\n    var $element = this.element();\n    var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\n\n    if ($element && (this._isShown || force)) {\n      if (this._isTransparent) {\n        $element.addClass(columnsSeparatorTransparent);\n        $element.css(\"left\", \"\");\n        $element.show();\n      } else {\n        if ($element.hasClass(columnsSeparatorTransparent)) {\n          $element.removeClass(columnsSeparatorTransparent);\n        }\n\n        $element.hide();\n      }\n    }\n\n    this.callBase();\n  },\n  moveByX: function (outerX) {\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left);\n    }\n  },\n  changeCursor: function (cursorName) {\n    cursorName = isDefined(cursorName) ? cursorName : \"\";\n    var $element = this.element();\n\n    if ($element) {\n      $element.css(\"cursor\", cursorName);\n    }\n  },\n  dispose: function () {\n    this._unsubscribeFromCallback();\n\n    this.callBase();\n  }\n});\nvar BlockSeparatorView = SeparatorView.inherit({\n  init: function () {\n    var that = this;\n    this.callBase();\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      if (!isLoading) {\n        that.hide();\n      }\n    });\n  },\n  _renderSeparator: function () {\n    this.callBase();\n    this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\");\n  },\n  hide: function () {\n    var $parent = this._parentElement();\n\n    var $element = this.element();\n\n    if ($element && this._isShown) {\n      $element.css(\"display\", \"none\");\n    }\n\n    if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\n      $parent.prepend(this.element());\n    }\n\n    this.callBase();\n  },\n  isVisible: function () {\n    var groupPanelOptions = this.option(\"groupPanel\");\n    var columnChooserOptions = this.option(\"columnChooser\");\n    return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled;\n  },\n  show: function (targetLocation) {\n    var $element = this.element();\n\n    var startAnimate = function (toOptions) {\n      fx.stop($element, true);\n      fx.animate($element, {\n        type: \"slide\",\n        from: {\n          width: 0,\n          display: toOptions.display\n        },\n        to: toOptions,\n        duration: 300,\n        easing: \"swing\"\n      });\n    };\n\n    if ($element && !this._isShown) {\n      switch (targetLocation) {\n        case \"group\":\n          startAnimate({\n            width: \"50px\",\n            display: \"inline-block\"\n          });\n          break;\n\n        case \"columnChooser\":\n          startAnimate({\n            width: \"100%\",\n            display: \"block\"\n          });\n          break;\n\n        default:\n          $element.css(\"display\", \"\");\n      }\n    }\n\n    this.callBase();\n  }\n});\nvar DraggingHeaderView = modules.View.inherit({\n  _isDragging: false,\n  isDragging: function () {\n    return this._isDragging;\n  },\n  _getDraggingPanelByPos: function (pos) {\n    var result;\n    each(this._dragOptions.draggingPanels, function (index, draggingPanel) {\n      if (draggingPanel) {\n        var boundingRect = draggingPanel.getBoundingRect();\n\n        if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\n          result = draggingPanel;\n          return false;\n        }\n      }\n    });\n    return result;\n  },\n  _renderCore: function () {\n    this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide();\n  },\n  _resetTargetColumnOptions: function () {\n    var params = this._dropOptions;\n    params.targetColumnIndex = -1;\n    delete params.targetColumnElement;\n    delete params.isLast;\n    delete params.posX;\n    delete params.posY;\n  },\n  _getVisibleIndexObject: function (rowIndex, visibleIndex) {\n    if (isDefined(rowIndex)) {\n      return {\n        columnIndex: visibleIndex,\n        rowIndex: rowIndex\n      };\n    }\n\n    return visibleIndex;\n  },\n  dispose: function () {\n    var element = this.element();\n    this._dragOptions = null;\n    element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove();\n  },\n  isVisible: function () {\n    var columnsController = this.getController(\"columns\");\n    var commonColumnSettings = columnsController.getCommonSettings();\n    return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding);\n  },\n  init: function () {\n    var that = this;\n    this.callBase();\n    this._controller = this.getController(\"draggingHeader\");\n    this._columnsResizerViewController = this.getController(\"columnsResizer\");\n    this.getController(\"data\").loadingChanged.add(function (isLoading) {\n      var element = that.element();\n\n      if (!isLoading && element) {\n        element.hide();\n      }\n    });\n  },\n  dragHeader: function (options) {\n    var columnElement = options.columnElement;\n    var isCommandColumn = !!options.sourceColumn.type;\n    this._isDragging = true;\n    this._dragOptions = options;\n    this._dropOptions = {\n      sourceIndex: options.index,\n      sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\n      sourceColumnElement: options.columnElement,\n      sourceLocation: options.sourceLocation\n    };\n    var document = domAdapter.getDocument();\n    this._onSelectStart = document.onselectstart;\n\n    document.onselectstart = function () {\n      return false;\n    };\n\n    this._controller.drag(this._dropOptions);\n\n    this.element().css({\n      textAlign: columnElement && columnElement.css(\"textAlign\"),\n      height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\n      width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\n      whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\n    }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\n    this.element().appendTo(swatchContainer.getSwatchContainer(columnElement));\n  },\n  moveHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var eventData = getEventData(e);\n    var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\n    var dragOptions = that._dragOptions;\n\n    if (that._isDragging && !isResizing) {\n      var $element = that.element();\n      var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\n      var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\n\n      if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\n        $element.show();\n        var newLeft = eventData.x - dragOptions.deltaX;\n        var newTop = eventData.y - dragOptions.deltaY;\n        $element.css({\n          left: newLeft,\n          top: newTop\n        });\n        that.dockHeader(eventData);\n      }\n\n      e.preventDefault();\n    }\n  },\n  dockHeader: function (eventData) {\n    var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\n\n    var controller = this._controller;\n    var params = this._dropOptions;\n    var dragOptions = this._dragOptions;\n\n    if (targetDraggingPanel) {\n      var rtlEnabled = this.option(\"rtlEnabled\");\n      var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\n      var axisName = isVerticalOrientation ? \"y\" : \"x\";\n      var targetLocation = targetDraggingPanel.getName();\n      var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\n      var sourceColumn = dragOptions.sourceColumn;\n      var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\n      var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\n      var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\n        targetDraggingPanel: targetDraggingPanel,\n        columns: targetDraggingPanel.getColumns(rowIndex),\n        columnElements: columnElements,\n        isVerticalOrientation: isVerticalOrientation,\n        startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\n      }));\n      pointsByTarget[targetLocation] = pointsByColumns;\n      params.targetLocation = targetLocation;\n\n      if (pointsByColumns.length > 0) {\n        for (var i = 0; i < pointsByColumns.length; i++) {\n          var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\n\n          if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\n            params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\n\n            if (columnElements[i]) {\n              params.targetColumnElement = columnElements.eq(i);\n              params.isLast = false;\n            } else {\n              params.targetColumnElement = columnElements.last();\n              params.isLast = true;\n            }\n\n            params.posX = pointsByColumns[i].x;\n            params.posY = pointsByColumns[i].y;\n            controller.dock(params);\n            break;\n          }\n        }\n      } else {\n        this._resetTargetColumnOptions();\n\n        controller.dock(params);\n      }\n    }\n  },\n  dropHeader: function (args) {\n    var e = args.event;\n    var that = e.data.that;\n    var controller = that._controller;\n    that.element().hide();\n\n    if (controller && that._isDragging) {\n      controller.drop(that._dropOptions);\n    }\n\n    that.element().appendTo(that._parentElement());\n    that._dragOptions = null;\n    that._dropOptions = null;\n    that._isDragging = false;\n    domAdapter.getDocument().onselectstart = that._onSelectStart || null;\n  }\n});\n\nvar isNextColumnResizingMode = function (that) {\n  return \"widget\" !== that.option(\"columnResizingMode\");\n};\n\nvar ColumnsResizerViewController = modules.ViewController.inherit({\n  _isHeadersRowArea: function (posY) {\n    if (this._columnHeadersView) {\n      var element = this._columnHeadersView.element();\n\n      if (element) {\n        var offsetTop = element.offset().top;\n\n        var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\n\n        return posY >= offsetTop && posY <= offsetTop + headersRowHeight;\n      }\n    }\n\n    return false;\n  },\n  _isRtlParentStyle: function () {\n    var _this$_$parentContain;\n\n    return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"));\n  },\n  _pointCreated: function (point, cellsLength, columns) {\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\n\n    if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\n      point.columnIndex -= firstPointColumnIndex;\n      var currentColumn = columns[point.columnIndex] || {};\n      var nextColumn = columns[point.columnIndex + 1] || {};\n      return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing);\n    }\n\n    return true;\n  },\n  _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n    if (pointsByColumns) {\n      for (var i = 0; i < pointsByColumns.length; i++) {\n        if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\n          continue;\n        }\n\n        if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\n          return pointsByColumns[i];\n        }\n      }\n    }\n\n    return null;\n  },\n  _moveSeparator: function (args) {\n    var _that$_draggingHeader;\n\n    var e = args.event;\n    var that = e.data;\n\n    var columnsSeparatorWidth = that._columnsSeparatorView.width();\n\n    var isNextColumnMode = isNextColumnResizingMode(that);\n    var deltaX = columnsSeparatorWidth / 2;\n\n    var parentOffset = that._$parentContainer.offset();\n\n    var parentOffsetLeft = parentOffset.left;\n    var eventData = getEventData(e);\n    var rtlEnabled = that.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\n\n    if (that._isResizing && that._resizingInfo) {\n      if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\n        if (that._updateColumnsWidthIfNeeded(eventData.x)) {\n          var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\n\n          var cell = $cell[0];\n\n          if (cell) {\n            var outerWidth = cell.getBoundingClientRect().width;\n\n            that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\n\n            that._tablePositionController.update(that._targetPoint.y);\n\n            e.preventDefault();\n          }\n        }\n      }\n    } else if (!isDragging) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        if (that._previousParentOffset) {\n          if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\n            that.pointsByColumns(null);\n          }\n        }\n\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\n        that._previousParentOffset = parentOffset;\n        that._isReadyResizing = false;\n\n        if (that._targetPoint) {\n          that._columnsSeparatorView.changeCursor(\"col-resize\");\n\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\n\n          that._tablePositionController.update(that._targetPoint.y);\n\n          that._isReadyResizing = true;\n          e.preventDefault();\n        } else {\n          that._columnsSeparatorView.changeCursor();\n\n          that._columnsSeparatorView.moveByX(null);\n        }\n      } else {\n        that.pointsByColumns(null);\n        that._isReadyResizing = false;\n\n        that._columnsSeparatorView.changeCursor();\n\n        that._columnsSeparatorView.moveByX(null);\n      }\n    }\n  },\n  _endResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n\n    if (that._isResizing) {\n      that.pointsByColumns(null);\n      that._resizingInfo = null;\n\n      that._columnsSeparatorView.hide();\n\n      that._columnsSeparatorView.changeCursor();\n\n      that._trackerView.hide();\n\n      that._isReadyResizing = false;\n      that._isResizing = false;\n    }\n  },\n  _getNextColumnIndex: function (currentColumnIndex) {\n    return currentColumnIndex + 1;\n  },\n  _setupResizingInfo: function (posX) {\n    var currentColumnIndex = this._targetPoint.columnIndex;\n\n    var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\n\n    var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\n\n    var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\n\n    this._resizingInfo = {\n      startPosX: posX,\n      currentColumnIndex: currentColumnIndex,\n      currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\n      nextColumnIndex: nextColumnIndex,\n      nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\n    };\n  },\n  _startResizing: function (args) {\n    var e = args.event;\n    var that = e.data;\n    var eventData = getEventData(e);\n\n    if (isTouchEvent(e)) {\n      if (that._isHeadersRowArea(eventData.y)) {\n        that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\n\n        if (that._targetPoint) {\n          that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\n\n          that._isReadyResizing = true;\n        }\n      } else {\n        that._isReadyResizing = false;\n      }\n    }\n\n    if (that._isReadyResizing) {\n      that._setupResizingInfo(eventData.x);\n\n      that._isResizing = true;\n\n      that._tablePositionController.update(that._targetPoint.y);\n\n      that._columnsSeparatorView.show();\n\n      that._trackerView.show();\n\n      var scrollable = that.component.getScrollable();\n\n      if (scrollable && that._isRtlParentStyle()) {\n        that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft();\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (this.isResizing()) {\n      this.getController(\"editorFactory\").loseFocus();\n    }\n  },\n  _generatePointsByColumns: function () {\n    var that = this;\n    var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\n\n    var cells = that._columnHeadersView.getColumnElements();\n\n    var pointsByColumns = [];\n\n    if (cells && cells.length > 0) {\n      pointsByColumns = gridCoreUtils.getPointsByColumns(cells, function (point) {\n        return that._pointCreated(point, cells.length, columns);\n      });\n    }\n\n    that._pointsByColumns = pointsByColumns;\n  },\n  _unsubscribeFromEvents: function () {\n    this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\n    this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\n\n    if (this._endResizingHandler) {\n      eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n      eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\n    }\n  },\n  _subscribeToEvents: function () {\n    this._moveSeparatorHandler = this.createAction(this._moveSeparator);\n    this._startResizingHandler = this.createAction(this._startResizing);\n    this._endResizingHandler = this.createAction(this._endResizing);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\n    eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\n    eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n    eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\n  },\n  _updateColumnsWidthIfNeeded: function (posX) {\n    var deltaX;\n    var needUpdate;\n\n    var contentWidth = this._rowsView.contentWidth();\n\n    var resizingInfo = this._resizingInfo;\n    var columnsController = this._columnsController;\n    var visibleColumns = columnsController.getVisibleColumns();\n\n    var columnsSeparatorWidth = this._columnsSeparatorView.width();\n\n    var isNextColumnMode = isNextColumnResizingMode(this);\n    var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    var isRtlParentStyle = this._isRtlParentStyle();\n\n    var column = visibleColumns[resizingInfo.currentColumnIndex];\n    var nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\n\n    function isPercentWidth(width) {\n      return isString(width) && \"%\" === width.slice(-1);\n    }\n\n    function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\n      if (column) {\n        var oldColumnWidth = column.width;\n\n        if (oldColumnWidth) {\n          adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth);\n        }\n\n        if (adaptColumnWidthByRatio) {\n          columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\n          columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\");\n        } else {\n          columnsController.columnOption(column.index, \"visibleWidth\", null);\n          columnsController.columnOption(column.index, \"width\", columnWidth);\n        }\n      }\n    }\n\n    deltaX = posX - resizingInfo.startPosX;\n\n    if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\n      deltaX = -deltaX;\n    }\n\n    var {\n      cellWidth: cellWidth,\n      nextCellWidth: nextCellWidth\n    } = function (delta) {\n      var nextMinWidth;\n      var nextCellWidth;\n      var needCorrectionNextCellWidth;\n      var cellWidth = resizingInfo.currentColumnWidth + delta;\n      var minWidth = column && column.minWidth || columnsSeparatorWidth;\n      var result = {};\n\n      if (cellWidth >= minWidth) {\n        result.cellWidth = cellWidth;\n      } else {\n        result.cellWidth = minWidth;\n        needCorrectionNextCellWidth = true;\n      }\n\n      if (isNextColumnMode) {\n        nextCellWidth = resizingInfo.nextColumnWidth - delta;\n        nextMinWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\n\n        if (nextCellWidth >= nextMinWidth) {\n          if (needCorrectionNextCellWidth) {\n            result.nextCellWidth = resizingInfo.nextColumnWidth - (delta + minWidth - cellWidth);\n          } else {\n            result.nextCellWidth = nextCellWidth;\n          }\n        } else {\n          result.nextCellWidth = nextMinWidth;\n          result.cellWidth = resizingInfo.currentColumnWidth + (delta - nextMinWidth + nextCellWidth);\n        }\n      }\n\n      return result;\n    }(deltaX);\n\n    needUpdate = column.width !== cellWidth;\n\n    if (needUpdate) {\n      columnsController.beginUpdate();\n      cellWidth = Math.floor(cellWidth);\n\n      contentWidth = function (contentWidth, visibleColumns) {\n        var allColumnsHaveWidth = visibleColumns.every(column => column.width);\n\n        if (allColumnsHaveWidth) {\n          var totalPercent = visibleColumns.reduce((sum, column) => {\n            if (isPercentWidth(column.width)) {\n              sum += parseFloat(column.width);\n            }\n\n            return sum;\n          }, 0);\n\n          if (totalPercent > 100) {\n            contentWidth = contentWidth / totalPercent * 100;\n          }\n        }\n\n        return contentWidth;\n      }(contentWidth, visibleColumns);\n\n      setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\n\n      if (isNextColumnMode) {\n        nextCellWidth = Math.floor(nextCellWidth);\n        setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio);\n      } else {\n        var columnWidths = this._columnHeadersView.getColumnWidths();\n\n        columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\n\n        var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\n\n        if (!hasScroll) {\n          var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\n\n          if (lastColumnIndex >= 0) {\n            columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\");\n          }\n        }\n\n        for (var i = 0; i < columnWidths.length; i++) {\n          if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\n            columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i]);\n          }\n        }\n      }\n\n      columnsController.endUpdate();\n\n      if (!isNextColumnMode) {\n        this.component.updateDimensions();\n        var scrollable = this.component.getScrollable();\n\n        if (scrollable && isRtlParentStyle) {\n          var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\n\n          scrollable.scrollTo({\n            left: left\n          });\n        }\n      }\n    }\n\n    return needUpdate;\n  },\n  _subscribeToCallback: function (callback, handler) {\n    callback.add(handler);\n\n    this._subscribesToCallbacks.push({\n      callback: callback,\n      handler: handler\n    });\n  },\n  _unsubscribeFromCallbacks: function () {\n    for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\n      var subscribe = this._subscribesToCallbacks[i];\n      subscribe.callback.remove(subscribe.handler);\n    }\n\n    this._subscribesToCallbacks = [];\n  },\n  _unsubscribes: function () {\n    this._unsubscribeFromEvents();\n\n    this._unsubscribeFromCallbacks();\n  },\n  _init: function () {\n    var that = this;\n\n    var generatePointsByColumnsHandler = function () {\n      if (!that._isResizing) {\n        that.pointsByColumns(null);\n      }\n    };\n\n    var generatePointsByColumnsScrollHandler = function (offset) {\n      if (that._scrollLeft !== offset.left) {\n        that._scrollLeft = offset.left;\n        that.pointsByColumns(null);\n      }\n    };\n\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._trackerView = that.getView(\"trackerView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._columnsController = that.getController(\"columns\");\n    that._tablePositionController = that.getController(\"tablePosition\");\n    that._$parentContainer = that.component.$element();\n    that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\n\n    that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\n\n    that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, function () {\n      that._unsubscribeFromEvents();\n\n      that._subscribeToEvents();\n    });\n\n    that._subscribeToCallback(that._rowsView.renderCompleted, function () {\n      that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\n\n      that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler);\n    });\n\n    var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n    var previousTableHeight = 0;\n\n    that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, function (e) {\n      if (that._isResizing && !that._rowsView.isResizing) {\n        var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\n\n        if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\n          previousScrollbarVisibility = scrollbarVisibility;\n          previousTableHeight = e.height;\n          that.component.updateDimensions();\n        } else {\n          that._rowsView.updateFreeSpaceRowHeight();\n        }\n      }\n\n      previousTableHeight = e.height;\n    });\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    if (\"allowColumnResizing\" === args.name) {\n      if (args.value) {\n        this._init();\n\n        this._subscribeToEvents();\n      } else {\n        this._unsubscribes();\n      }\n    }\n  },\n  isResizing: function () {\n    return this._isResizing;\n  },\n  init: function () {\n    this._subscribesToCallbacks = [];\n\n    if (allowResizing(this)) {\n      this._init();\n    }\n  },\n  pointsByColumns: function (value) {\n    if (void 0 !== value) {\n      this._pointsByColumns = value;\n    } else {\n      if (!this._pointsByColumns) {\n        this._generatePointsByColumns();\n      }\n\n      return this._pointsByColumns;\n    }\n  },\n  dispose: function () {\n    this._unsubscribes();\n\n    this.callBase();\n  }\n});\nvar TablePositionViewController = modules.ViewController.inherit({\n  update: function (top) {\n    var params = {};\n\n    var $element = this._columnHeadersView.element();\n\n    var offset = $element && $element.offset();\n    var offsetTop = offset && offset.top || 0;\n    var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\n    var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\n\n    var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\n\n    var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\n    var columnsResizerController = this.component.getController(\"columnsResizer\");\n    var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\n    params.height = columnsHeadersHeight;\n    var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\n\n    if (isDraggingOrResizing) {\n      params.height += rowsHeight - diffOffsetTop;\n    }\n\n    if (null !== top && $element && $element.length) {\n      params.top = $element[0].offsetTop + diffOffsetTop;\n    }\n\n    this.positionChanged.fire(params);\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnHeadersView = this.getView(\"columnHeadersView\");\n    that._rowsView = this.getView(\"rowsView\");\n    that._pagerView = this.getView(\"pagerView\");\n\n    that._rowsView.resizeCompleted.add(function () {\n      if (that.option(\"allowColumnResizing\")) {\n        var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\n\n        that.update(targetPoint ? targetPoint.y : null);\n      }\n    });\n  },\n  ctor: function (component) {\n    this.callBase(component);\n    this.positionChanged = Callbacks();\n  }\n});\nvar DraggingHeaderViewController = modules.ViewController.inherit({\n  _generatePointsByColumns: function (options) {\n    var that = this;\n    return gridCoreUtils.getPointsByColumns(options.columnElements, function (point) {\n      return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn);\n    }, options.isVerticalOrientation, options.startColumnIndex);\n  },\n  _pointCreated: function (point, columns, location, sourceColumn) {\n    var targetColumn = columns[point.columnIndex];\n    var prevColumn = columns[point.columnIndex - 1];\n\n    switch (location) {\n      case \"columnChooser\":\n        return true;\n\n      case \"headers\":\n        return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\n\n      default:\n        return 0 === columns.length;\n    }\n  },\n  _subscribeToEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columns;\n        var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\n        var nameDraggingPanel = draggingPanel.getName();\n\n        var subscribeToEvents = function (index, columnElement) {\n          if (!columnElement) {\n            return;\n          }\n\n          var $columnElement = $(columnElement);\n          var column = columns[index];\n\n          if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\n            $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n            eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction(function (args) {\n              var e = args.event;\n              var eventData = getEventData(e);\n              draggingHeader.dragHeader({\n                deltaX: eventData.x - $(e.currentTarget).offset().left,\n                deltaY: eventData.y - $(e.currentTarget).offset().top,\n                sourceColumn: column,\n                index: column.index,\n                columnIndex: index,\n                columnElement: $columnElement,\n                sourceLocation: nameDraggingPanel,\n                draggingPanels: draggingPanels,\n                rowIndex: that._columnsController.getRowIndex(column.index, true)\n              });\n            }));\n            eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.moveHeader));\n            eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\n              that: draggingHeader\n            }, that.createAction(draggingHeader.dropHeader));\n          }\n        };\n\n        for (var i = 0; i < rowCount; i++) {\n          var columnElements = draggingPanel.getColumnElements(i) || [];\n\n          if (columnElements.length) {\n            columns = draggingPanel.getColumns(i) || [];\n            each(columnElements, subscribeToEvents);\n          }\n        }\n      }\n    });\n  },\n  _unsubscribeFromEvents: function (draggingHeader, draggingPanels) {\n    var that = this;\n    each(draggingPanels, function (_, draggingPanel) {\n      if (draggingPanel) {\n        var columnElements = draggingPanel.getColumnElements() || [];\n        each(columnElements, function (index, columnElement) {\n          var $columnElement = $(columnElement);\n          eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\n          eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\n          $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\n        });\n      }\n    });\n  },\n  _getSeparator: function (targetLocation) {\n    return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView;\n  },\n  hideSeparators: function (type) {\n    var blockSeparator = this._blockSeparatorView;\n    var columnsSeparator = this._columnsSeparatorView;\n    this._animationColumnIndex = null;\n    blockSeparator && blockSeparator.hide();\n    \"block\" !== type && columnsSeparator && columnsSeparator.hide();\n  },\n  init: function () {\n    var that = this;\n    that.callBase();\n    that._columnsController = that.getController(\"columns\");\n    that._columnHeadersView = that.getView(\"columnHeadersView\");\n    that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\n    that._draggingHeaderView = that.getView(\"draggingHeaderView\");\n    that._rowsView = that.getView(\"rowsView\");\n    that._blockSeparatorView = that.getView(\"blockSeparatorView\");\n    that._headerPanelView = that.getView(\"headerPanel\");\n    that._columnChooserView = that.getView(\"columnChooserView\");\n\n    var subscribeToEvents = function () {\n      if (that._draggingHeaderView) {\n        var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\n\n        that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\n\n        that._subscribeToEvents(that._draggingHeaderView, draggingPanels);\n      }\n    };\n\n    that._columnHeadersView.renderCompleted.add(subscribeToEvents);\n\n    that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\n    that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents);\n  },\n  allowDrop: function (parameters) {\n    return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n  },\n  drag: function (parameters) {\n    var sourceIndex = parameters.sourceIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var sourceColumnElement = parameters.sourceColumnElement;\n    var headersView = this._columnHeadersView;\n    var rowsView = this._rowsView;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: COLUMN_OPACITY\n      });\n\n      if (\"headers\" === sourceLocation) {\n        headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n        rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\n      }\n    }\n  },\n  dock: function (parameters) {\n    var that = this;\n    var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\n    var sourceLocation = parameters.sourceLocation;\n    var targetLocation = parameters.targetLocation;\n\n    var separator = that._getSeparator(targetLocation);\n\n    var hasTargetVisibleIndex = targetColumnIndex >= 0;\n\n    that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\n\n    if (separator) {\n      if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\n        if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\n          !function () {\n            if (that._animationColumnIndex !== targetColumnIndex) {\n              that.hideSeparators();\n              separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\n              that._animationColumnIndex = targetColumnIndex;\n              separator.show(targetLocation);\n            }\n          }();\n        } else {\n          that.hideSeparators(\"block\");\n          that.getController(\"tablePosition\").update(parameters.posY);\n          separator.moveByX(parameters.posX - separator.width());\n          separator.show();\n        }\n      } else {\n        that.hideSeparators();\n      }\n    }\n  },\n  drop: function (parameters) {\n    var sourceColumnElement = parameters.sourceColumnElement;\n\n    if (sourceColumnElement) {\n      sourceColumnElement.css({\n        opacity: \"\"\n      });\n\n      this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\n\n      this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS));\n    }\n\n    if (this.allowDrop(parameters)) {\n      var separator = this._getSeparator(parameters.targetLocation);\n\n      if (separator) {\n        separator.hide();\n      }\n\n      this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation);\n    }\n  },\n  dispose: function () {\n    if (this._draggingHeaderView) {\n      this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView]);\n    }\n  }\n});\nexport var columnsResizingReorderingModule = {\n  views: {\n    columnsSeparatorView: ColumnsSeparatorView,\n    blockSeparatorView: BlockSeparatorView,\n    draggingHeaderView: DraggingHeaderView,\n    trackerView: TrackerView\n  },\n  controllers: {\n    draggingHeader: DraggingHeaderViewController,\n    tablePosition: TablePositionViewController,\n    columnsResizer: ColumnsResizerViewController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _needUpdateRowHeight: function (itemCount) {\n          var wordWrapEnabled = this.option(\"wordWrapEnabled\");\n          var columnsResizerController = this.getController(\"columnsResizer\");\n          var isResizing = columnsResizerController.isResizing();\n          return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing;\n        }\n      }\n    },\n    controllers: {\n      editorFactory: {\n        renderFocusOverlay: function () {\n          if (this.getController(\"columnsResizer\").isResizing()) {\n            return;\n          }\n\n          return this.callBase.apply(this, arguments);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js"],"names":["setHeight","_setHeight","getHeight","setWidth","getWidth","$","domAdapter","eventsEngine","Callbacks","isDefined","isString","isObject","each","extend","getBoundingRect","addNamespace","eventData","getEventData","isTouchEvent","pointerEvents","start","dragEventStart","move","dragEventMove","end","dragEventEnd","modules","gridCoreUtils","fx","swatchContainer","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","CELL_CONTENT_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","HEADER_ROW_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","MODULE_NAMESPACE","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","allowResizing","that","option","getController","isColumnOptionUsed","allowReordering","TrackerView","View","inherit","_renderCore","callBase","element","addClass","addWidgetPrefix","hide","_unsubscribeFromCallback","_positionChanged","_tablePositionController","positionChanged","remove","_subscribeToCallback","position","$element","hasClass","css","top","height","add","optionChanged","args","name","value","_invalidate","init","isVisible","show","dispose","SeparatorView","_renderSeparator","options","_isShown","width","ColumnsSeparatorView","_init","_isTransparent","removeClass","force","columnsSeparatorTransparent","moveByX","outerX","_parentElement","offset","left","changeCursor","cursorName","BlockSeparatorView","loadingChanged","isLoading","html","$parent","children","length","prepend","groupPanelOptions","columnChooserOptions","visible","enabled","targetLocation","startAnimate","toOptions","stop","animate","type","from","display","to","duration","easing","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","pos","result","_dragOptions","draggingPanels","index","draggingPanel","boundingRect","bottom","y","x","right","_resetTargetColumnOptions","params","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","rowIndex","visibleIndex","columnIndex","parent","find","columnsController","commonColumnSettings","getCommonSettings","allowGrouping","allowHiding","_controller","_columnsResizerViewController","dragHeader","columnElement","isCommandColumn","sourceColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","sourceLocation","document","getDocument","_onSelectStart","onselectstart","drag","textAlign","get","clientHeight","clientWidth","whiteSpace","toggleClass","text","caption","appendTo","getSwatchContainer","moveHeader","e","event","data","isResizing","dragOptions","moveDeltaX","Math","abs","deltaX","moveDeltaY","deltaY","is","newLeft","newTop","dockHeader","preventDefault","targetDraggingPanel","controller","rtlEnabled","isVerticalOrientation","getName","axisName","columnElements","getColumnElements","ownerBand","pointsByTarget","pointsByColumns","_generatePointsByColumns","columns","getColumns","startColumnIndex","i","centerPosition","eq","last","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","ViewController","_isHeadersRowArea","_columnHeadersView","offsetTop","headersRowHeight","getHeadersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","point","cellsLength","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","currentColumn","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","$cell","currentColumnIndex","cell","outerWidth","getBoundingClientRect","update","_targetPoint","_previousParentOffset","_isReadyResizing","_endResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","getHeaderElement","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","_startResizing","scrollable","component","getScrollable","_scrollRight","$content","container","scrollLeft","stopPropagation","loseFocus","_columnsController","getVisibleColumns","cells","getPointsByColumns","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","off","_startResizingHandler","down","_endResizingHandler","up","_subscribeToEvents","createAction","on","needUpdate","contentWidth","_rowsView","resizingInfo","visibleColumns","adaptColumnWidthByRatio","column","isPercentWidth","slice","setColumnWidth","columnWidth","oldColumnWidth","columnOption","toFixed","cellWidth","nextCellWidth","delta","nextMinWidth","needCorrectionNextCellWidth","minWidth","beginUpdate","floor","allColumnsHaveWidth","every","totalPercent","reduce","sum","parseFloat","columnWidths","getColumnWidths","hasScroll","totalWidth","lastColumnIndex","getLastResizableColumnIndex","endUpdate","updateDimensions","scrollTo","callback","handler","_subscribesToCallbacks","push","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","_scrollLeft","getView","renderCompleted","resizeCompleted","scrollChanged","previousScrollbarVisibility","getScrollbarWidth","previousTableHeight","scrollbarVisibility","updateFreeSpaceRowHeight","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","rowsHeight","columnsResizerController","draggingHeaderView","isDraggingOrResizing","fire","_pagerView","targetPoint","ctor","DraggingHeaderViewController","location","targetColumn","prevColumn","draggingHeader","_","rowCount","getRowCount","nameDraggingPanel","subscribeToEvents","$columnElement","allowDragging","currentTarget","getRowIndex","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","parameters","allowMoveColumn","headersView","rowsView","opacity","setRowsOpacity","separator","hasTargetVisibleIndex","moveColumn","columnsResizingReorderingModule","views","columnsSeparatorView","blockSeparatorView","trackerView","controllers","tablePosition","columnsResizer","extenders","_needUpdateRowHeight","itemCount","wordWrapEnabled","apply","arguments","editorFactory","renderFocusOverlay"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate;\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        var nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        var {\r\n            cellWidth: cellWidth,\r\n            nextCellWidth: nextCellWidth\r\n        } = function(delta) {\r\n            var nextMinWidth;\r\n            var nextCellWidth;\r\n            var needCorrectionNextCellWidth;\r\n            var cellWidth = resizingInfo.currentColumnWidth + delta;\r\n            var minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n            var result = {};\r\n            if (cellWidth >= minWidth) {\r\n                result.cellWidth = cellWidth\r\n            } else {\r\n                result.cellWidth = minWidth;\r\n                needCorrectionNextCellWidth = true\r\n            }\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = resizingInfo.nextColumnWidth - delta;\r\n                nextMinWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n                if (nextCellWidth >= nextMinWidth) {\r\n                    if (needCorrectionNextCellWidth) {\r\n                        result.nextCellWidth = resizingInfo.nextColumnWidth - (delta + minWidth - cellWidth)\r\n                    } else {\r\n                        result.nextCellWidth = nextCellWidth\r\n                    }\r\n                } else {\r\n                    result.nextCellWidth = nextMinWidth;\r\n                    result.cellWidth = resizingInfo.currentColumnWidth + (delta - nextMinWidth + nextCellWidth)\r\n                }\r\n            }\r\n            return result\r\n        }(deltaX);\r\n        needUpdate = column.width !== cellWidth;\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}