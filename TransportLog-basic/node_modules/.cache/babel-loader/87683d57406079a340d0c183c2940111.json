{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { isFunction } from \"../../core/utils/type\";\nimport { errors } from \"../../data/errors\";\nimport { aggregators } from \"../../data/utils\";\n\nfunction depthFirstSearch(i, depth, root, callback) {\n  var j = 0;\n\n  if (i < depth) {\n    for (; j < root.items.length; j++) {\n      depthFirstSearch(i + 1, depth, root.items[j], callback);\n    }\n  }\n\n  if (i === depth) {\n    callback(root);\n  }\n}\n\nfunction map(array, callback) {\n  var i;\n\n  if (\"map\" in array) {\n    return array.map(callback);\n  }\n\n  var result = new Array(array.length);\n\n  for (i in array) {\n    result[i] = callback(array[i], i);\n  }\n\n  return result;\n}\n\nfunction isEmpty(x) {\n  return x !== x || \"\" === x || null === x || void 0 === x;\n}\n\nfunction isCount(aggregator) {\n  return aggregator === aggregators.count;\n}\n\nfunction normalizeAggregate(aggregate) {\n  var selector = compileGetter(aggregate.selector);\n  var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\n  var aggregator = aggregate.aggregator;\n\n  if (\"string\" === typeof aggregator) {\n    aggregator = aggregators[aggregator];\n\n    if (!aggregator) {\n      throw errors.Error(\"E4001\", aggregate.aggregator);\n    }\n  }\n\n  return {\n    selector: selector,\n    aggregator: aggregator,\n    skipEmptyValues: skipEmptyValues\n  };\n}\n\nexport default Class.inherit({\n  ctor: function (options) {\n    this._data = options.data;\n    this._groupLevel = options.groupLevel || 0;\n    this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\n    this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\n    this._totals = [];\n  },\n  calculate: function () {\n    if (this._totalAggregates.length) {\n      this._calculateTotals(0, {\n        items: this._data\n      });\n    }\n\n    if (this._groupAggregates.length && this._groupLevel > 0) {\n      this._calculateGroups({\n        items: this._data\n      });\n    }\n  },\n  totalAggregates: function () {\n    return this._totals;\n  },\n  _aggregate: function (aggregates, data, container) {\n    var length = data.items ? data.items.length : 0;\n\n    for (var i = 0; i < aggregates.length; i++) {\n      if (isCount(aggregates[i].aggregator)) {\n        container[i] = (container[i] || 0) + length;\n        continue;\n      }\n\n      for (var j = 0; j < length; j++) {\n        this._accumulate(i, aggregates[i], container, data.items[j]);\n      }\n    }\n  },\n  _calculateTotals: function (level, data) {\n    if (0 === level) {\n      this._totals = this._seed(this._totalAggregates);\n    }\n\n    if (level === this._groupLevel) {\n      this._aggregate(this._totalAggregates, data, this._totals);\n    } else {\n      for (var i = 0; i < data.items.length; i++) {\n        this._calculateTotals(level + 1, data.items[i]);\n      }\n    }\n\n    if (0 === level) {\n      this._totals = this._finalize(this._totalAggregates, this._totals);\n    }\n  },\n  _calculateGroups: function (root) {\n    var maxLevel = this._groupLevel;\n    var currentLevel = maxLevel + 1;\n\n    var seedFn = this._seed.bind(this, this._groupAggregates);\n\n    var stepFn = this._aggregate.bind(this, this._groupAggregates);\n\n    var finalizeFn = this._finalize.bind(this, this._groupAggregates);\n\n    function aggregator(node) {\n      node.aggregates = seedFn(currentLevel - 1);\n\n      if (currentLevel === maxLevel) {\n        stepFn(node, node.aggregates);\n      } else {\n        depthFirstSearch(currentLevel, maxLevel, node, function (innerNode) {\n          stepFn(innerNode, node.aggregates);\n        });\n      }\n\n      node.aggregates = finalizeFn(node.aggregates);\n    }\n\n    while (--currentLevel > 0) {\n      depthFirstSearch(0, currentLevel, root, aggregator);\n    }\n  },\n  _seed: function (aggregates, groupIndex) {\n    return map(aggregates, function (aggregate) {\n      var aggregator = aggregate.aggregator;\n      var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\n      return seed;\n    });\n  },\n  _accumulate: function (aggregateIndex, aggregate, results, item) {\n    var value = aggregate.selector(item);\n    var aggregator = aggregate.aggregator;\n    var skipEmptyValues = aggregate.skipEmptyValues;\n\n    if (skipEmptyValues && isEmpty(value)) {\n      return;\n    }\n\n    if (results[aggregateIndex] !== results[aggregateIndex]) {\n      results[aggregateIndex] = value;\n    } else {\n      results[aggregateIndex] = aggregator.step(results[aggregateIndex], value);\n    }\n  },\n  _finalize: function (aggregates, results) {\n    return map(aggregates, function (aggregate, index) {\n      var fin = aggregate.aggregator.finalize;\n      return fin ? fin(results[index]) : results[index];\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js"],"names":["Class","compileGetter","isFunction","errors","aggregators","depthFirstSearch","i","depth","root","callback","j","items","length","map","array","result","Array","isEmpty","x","isCount","aggregator","count","normalizeAggregate","aggregate","selector","skipEmptyValues","Error","inherit","ctor","options","_data","data","_groupLevel","groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","container","_accumulate","level","_seed","_finalize","maxLevel","currentLevel","seedFn","bind","stepFn","finalizeFn","node","innerNode","groupIndex","seed","NaN","aggregateIndex","results","item","value","step","index","fin","finalize"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SACIC,aADJ,QAEO,uBAFP;AAGA,SACIC,UADJ,QAEO,uBAFP;AAGA,SACIC,MADJ,QAEO,mBAFP;AAGA,SACIC,WADJ,QAEO,kBAFP;;AAIA,SAASC,gBAAT,CAA0BC,CAA1B,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0CC,QAA1C,EAAoD;AAChD,MAAIC,CAAC,GAAG,CAAR;;AACA,MAAIJ,CAAC,GAAGC,KAAR,EAAe;AACX,WAAOG,CAAC,GAAGF,IAAI,CAACG,KAAL,CAAWC,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AAC/BL,MAAAA,gBAAgB,CAACC,CAAC,GAAG,CAAL,EAAQC,KAAR,EAAeC,IAAI,CAACG,KAAL,CAAWD,CAAX,CAAf,EAA8BD,QAA9B,CAAhB;AACH;AACJ;;AACD,MAAIH,CAAC,KAAKC,KAAV,EAAiB;AACbE,IAAAA,QAAQ,CAACD,IAAD,CAAR;AACH;AACJ;;AAED,SAASK,GAAT,CAAaC,KAAb,EAAoBL,QAApB,EAA8B;AAC1B,MAAIH,CAAJ;;AACA,MAAI,SAASQ,KAAb,EAAoB;AAChB,WAAOA,KAAK,CAACD,GAAN,CAAUJ,QAAV,CAAP;AACH;;AACD,MAAIM,MAAM,GAAG,IAAIC,KAAJ,CAAUF,KAAK,CAACF,MAAhB,CAAb;;AACA,OAAKN,CAAL,IAAUQ,KAAV,EAAiB;AACbC,IAAAA,MAAM,CAACT,CAAD,CAAN,GAAYG,QAAQ,CAACK,KAAK,CAACR,CAAD,CAAN,EAAWA,CAAX,CAApB;AACH;;AACD,SAAOS,MAAP;AACH;;AAED,SAASE,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,SAAOA,CAAC,KAAKA,CAAN,IAAW,OAAOA,CAAlB,IAAuB,SAASA,CAAhC,IAAqC,KAAK,CAAL,KAAWA,CAAvD;AACH;;AAED,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AACzB,SAAOA,UAAU,KAAKhB,WAAW,CAACiB,KAAlC;AACH;;AAED,SAASC,kBAAT,CAA4BC,SAA5B,EAAuC;AACnC,MAAIC,QAAQ,GAAGvB,aAAa,CAACsB,SAAS,CAACC,QAAX,CAA5B;AACA,MAAIC,eAAe,GAAG,qBAAqBF,SAArB,GAAiCA,SAAS,CAACE,eAA3C,GAA6D,IAAnF;AACA,MAAIL,UAAU,GAAGG,SAAS,CAACH,UAA3B;;AACA,MAAI,aAAa,OAAOA,UAAxB,EAAoC;AAChCA,IAAAA,UAAU,GAAGhB,WAAW,CAACgB,UAAD,CAAxB;;AACA,QAAI,CAACA,UAAL,EAAiB;AACb,YAAMjB,MAAM,CAACuB,KAAP,CAAa,OAAb,EAAsBH,SAAS,CAACH,UAAhC,CAAN;AACH;AACJ;;AACD,SAAO;AACHI,IAAAA,QAAQ,EAAEA,QADP;AAEHJ,IAAAA,UAAU,EAAEA,UAFT;AAGHK,IAAAA,eAAe,EAAEA;AAHd,GAAP;AAKH;;AACD,eAAezB,KAAK,CAAC2B,OAAN,CAAc;AACzBC,EAAAA,IAAI,EAAE,UAASC,OAAT,EAAkB;AACpB,SAAKC,KAAL,GAAaD,OAAO,CAACE,IAArB;AACA,SAAKC,WAAL,GAAmBH,OAAO,CAACI,UAAR,IAAsB,CAAzC;AACA,SAAKC,gBAAL,GAAwBrB,GAAG,CAACgB,OAAO,CAACM,eAAR,IAA2B,EAA5B,EAAgCb,kBAAhC,CAA3B;AACA,SAAKc,gBAAL,GAAwBvB,GAAG,CAACgB,OAAO,CAACQ,eAAR,IAA2B,EAA5B,EAAgCf,kBAAhC,CAA3B;AACA,SAAKgB,OAAL,GAAe,EAAf;AACH,GAPwB;AAQzBC,EAAAA,SAAS,EAAE,YAAW;AAClB,QAAI,KAAKL,gBAAL,CAAsBtB,MAA1B,EAAkC;AAC9B,WAAK4B,gBAAL,CAAsB,CAAtB,EAAyB;AACrB7B,QAAAA,KAAK,EAAE,KAAKmB;AADS,OAAzB;AAGH;;AACD,QAAI,KAAKM,gBAAL,CAAsBxB,MAAtB,IAAgC,KAAKoB,WAAL,GAAmB,CAAvD,EAA0D;AACtD,WAAKS,gBAAL,CAAsB;AAClB9B,QAAAA,KAAK,EAAE,KAAKmB;AADM,OAAtB;AAGH;AACJ,GAnBwB;AAoBzBK,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAO,KAAKG,OAAZ;AACH,GAtBwB;AAuBzBI,EAAAA,UAAU,EAAE,UAASC,UAAT,EAAqBZ,IAArB,EAA2Ba,SAA3B,EAAsC;AAC9C,QAAIhC,MAAM,GAAGmB,IAAI,CAACpB,KAAL,GAAaoB,IAAI,CAACpB,KAAL,CAAWC,MAAxB,GAAiC,CAA9C;;AACA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqC,UAAU,CAAC/B,MAA/B,EAAuCN,CAAC,EAAxC,EAA4C;AACxC,UAAIa,OAAO,CAACwB,UAAU,CAACrC,CAAD,CAAV,CAAcc,UAAf,CAAX,EAAuC;AACnCwB,QAAAA,SAAS,CAACtC,CAAD,CAAT,GAAe,CAACsC,SAAS,CAACtC,CAAD,CAAT,IAAgB,CAAjB,IAAsBM,MAArC;AACA;AACH;;AACD,WAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,MAApB,EAA4BF,CAAC,EAA7B,EAAiC;AAC7B,aAAKmC,WAAL,CAAiBvC,CAAjB,EAAoBqC,UAAU,CAACrC,CAAD,CAA9B,EAAmCsC,SAAnC,EAA8Cb,IAAI,CAACpB,KAAL,CAAWD,CAAX,CAA9C;AACH;AACJ;AACJ,GAlCwB;AAmCzB8B,EAAAA,gBAAgB,EAAE,UAASM,KAAT,EAAgBf,IAAhB,EAAsB;AACpC,QAAI,MAAMe,KAAV,EAAiB;AACb,WAAKR,OAAL,GAAe,KAAKS,KAAL,CAAW,KAAKb,gBAAhB,CAAf;AACH;;AACD,QAAIY,KAAK,KAAK,KAAKd,WAAnB,EAAgC;AAC5B,WAAKU,UAAL,CAAgB,KAAKR,gBAArB,EAAuCH,IAAvC,EAA6C,KAAKO,OAAlD;AACH,KAFD,MAEO;AACH,WAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,IAAI,CAACpB,KAAL,CAAWC,MAA/B,EAAuCN,CAAC,EAAxC,EAA4C;AACxC,aAAKkC,gBAAL,CAAsBM,KAAK,GAAG,CAA9B,EAAiCf,IAAI,CAACpB,KAAL,CAAWL,CAAX,CAAjC;AACH;AACJ;;AACD,QAAI,MAAMwC,KAAV,EAAiB;AACb,WAAKR,OAAL,GAAe,KAAKU,SAAL,CAAe,KAAKd,gBAApB,EAAsC,KAAKI,OAA3C,CAAf;AACH;AACJ,GAjDwB;AAkDzBG,EAAAA,gBAAgB,EAAE,UAASjC,IAAT,EAAe;AAC7B,QAAIyC,QAAQ,GAAG,KAAKjB,WAApB;AACA,QAAIkB,YAAY,GAAGD,QAAQ,GAAG,CAA9B;;AACA,QAAIE,MAAM,GAAG,KAAKJ,KAAL,CAAWK,IAAX,CAAgB,IAAhB,EAAsB,KAAKhB,gBAA3B,CAAb;;AACA,QAAIiB,MAAM,GAAG,KAAKX,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,EAA2B,KAAKhB,gBAAhC,CAAb;;AACA,QAAIkB,UAAU,GAAG,KAAKN,SAAL,CAAeI,IAAf,CAAoB,IAApB,EAA0B,KAAKhB,gBAA/B,CAAjB;;AAEA,aAAShB,UAAT,CAAoBmC,IAApB,EAA0B;AACtBA,MAAAA,IAAI,CAACZ,UAAL,GAAkBQ,MAAM,CAACD,YAAY,GAAG,CAAhB,CAAxB;;AACA,UAAIA,YAAY,KAAKD,QAArB,EAA+B;AAC3BI,QAAAA,MAAM,CAACE,IAAD,EAAOA,IAAI,CAACZ,UAAZ,CAAN;AACH,OAFD,MAEO;AACHtC,QAAAA,gBAAgB,CAAC6C,YAAD,EAAeD,QAAf,EAAyBM,IAAzB,EAAgC,UAASC,SAAT,EAAoB;AAChEH,UAAAA,MAAM,CAACG,SAAD,EAAYD,IAAI,CAACZ,UAAjB,CAAN;AACH,SAFe,CAAhB;AAGH;;AACDY,MAAAA,IAAI,CAACZ,UAAL,GAAkBW,UAAU,CAACC,IAAI,CAACZ,UAAN,CAA5B;AACH;;AACD,WAAO,EAAEO,YAAF,GAAiB,CAAxB,EAA2B;AACvB7C,MAAAA,gBAAgB,CAAC,CAAD,EAAI6C,YAAJ,EAAkB1C,IAAlB,EAAwBY,UAAxB,CAAhB;AACH;AACJ,GAvEwB;AAwEzB2B,EAAAA,KAAK,EAAE,UAASJ,UAAT,EAAqBc,UAArB,EAAiC;AACpC,WAAO5C,GAAG,CAAC8B,UAAD,EAAc,UAASpB,SAAT,EAAoB;AACxC,UAAIH,UAAU,GAAGG,SAAS,CAACH,UAA3B;AACA,UAAIsC,IAAI,GAAG,UAAUtC,UAAV,GAAuBlB,UAAU,CAACkB,UAAU,CAACsC,IAAZ,CAAV,GAA8BtC,UAAU,CAACsC,IAAX,CAAgBD,UAAhB,CAA9B,GAA4DrC,UAAU,CAACsC,IAA9F,GAAqGC,GAAhH;AACA,aAAOD,IAAP;AACH,KAJS,CAAV;AAKH,GA9EwB;AA+EzBb,EAAAA,WAAW,EAAE,UAASe,cAAT,EAAyBrC,SAAzB,EAAoCsC,OAApC,EAA6CC,IAA7C,EAAmD;AAC5D,QAAIC,KAAK,GAAGxC,SAAS,CAACC,QAAV,CAAmBsC,IAAnB,CAAZ;AACA,QAAI1C,UAAU,GAAGG,SAAS,CAACH,UAA3B;AACA,QAAIK,eAAe,GAAGF,SAAS,CAACE,eAAhC;;AACA,QAAIA,eAAe,IAAIR,OAAO,CAAC8C,KAAD,CAA9B,EAAuC;AACnC;AACH;;AACD,QAAIF,OAAO,CAACD,cAAD,CAAP,KAA4BC,OAAO,CAACD,cAAD,CAAvC,EAAyD;AACrDC,MAAAA,OAAO,CAACD,cAAD,CAAP,GAA0BG,KAA1B;AACH,KAFD,MAEO;AACHF,MAAAA,OAAO,CAACD,cAAD,CAAP,GAA0BxC,UAAU,CAAC4C,IAAX,CAAgBH,OAAO,CAACD,cAAD,CAAvB,EAAyCG,KAAzC,CAA1B;AACH;AACJ,GA3FwB;AA4FzBf,EAAAA,SAAS,EAAE,UAASL,UAAT,EAAqBkB,OAArB,EAA8B;AACrC,WAAOhD,GAAG,CAAC8B,UAAD,EAAc,UAASpB,SAAT,EAAoB0C,KAApB,EAA2B;AAC/C,UAAIC,GAAG,GAAG3C,SAAS,CAACH,UAAV,CAAqB+C,QAA/B;AACA,aAAOD,GAAG,GAAGA,GAAG,CAACL,OAAO,CAACI,KAAD,CAAR,CAAN,GAAyBJ,OAAO,CAACI,KAAD,CAA1C;AACH,KAHS,CAAV;AAIH;AAjGwB,CAAd,CAAf","sourcesContent":["/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}