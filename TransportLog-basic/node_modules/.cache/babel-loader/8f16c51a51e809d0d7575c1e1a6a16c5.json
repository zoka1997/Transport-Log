{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/resizing/core.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { normalizeStartDate, normalizeEndDate } from \"./utils\";\n\nvar getAppointmentLeftCell = options => {\n  var {\n    cellHeight: cellHeight,\n    cellWidth: cellWidth,\n    viewDataProvider: viewDataProvider,\n    relativeAppointmentRect: relativeAppointmentRect,\n    appointmentSettings: appointmentSettings,\n    rtlEnabled: rtlEnabled\n  } = options;\n  var cellRowIndex = Math.floor(relativeAppointmentRect.top / cellHeight);\n  var cellColumnIndex = Math.round(relativeAppointmentRect.left / cellWidth);\n  var leftCell = viewDataProvider.getCellData(cellRowIndex, cellColumnIndex, appointmentSettings.allDay, rtlEnabled);\n  return leftCell;\n};\n\nvar getDateRangeHorizontal = options => {\n  var {\n    cellWidth: cellWidth,\n    cellCountInRow: cellCountInRow,\n    relativeAppointmentRect: relativeAppointmentRect,\n    viewDataProvider: viewDataProvider,\n    appointmentSettings: appointmentSettings,\n    handles: handles\n  } = options;\n  var appointmentFirstCell = getAppointmentLeftCell(options);\n  var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);\n  var appointmentLastCellIndex = appointmentFirstCell.index + (appointmentCellsAmount - 1);\n  var {\n    allDay: allDay,\n    sourceAppointment: sourceAppointment\n  } = appointmentSettings.info;\n\n  if (handles.left) {\n    var startDate = normalizeStartDate(options, appointmentFirstCell.startDate, sourceAppointment.startDate);\n    return {\n      startDate: startDate,\n      endDate: sourceAppointment.endDate\n    };\n  }\n\n  var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);\n  var appointmentColumnIndex = appointmentLastCellIndex % cellCountInRow;\n  var appointmentLastCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentColumnIndex, allDay);\n  var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;\n  endDate = normalizeEndDate(options, endDate, sourceAppointment.endDate);\n  return {\n    startDate: sourceAppointment.startDate,\n    endDate: endDate\n  };\n};\n\nvar getDateRangeHorizontalRTL = options => {\n  var {\n    viewDataProvider: viewDataProvider,\n    cellCountInRow: cellCountInRow,\n    appointmentSettings: appointmentSettings,\n    handles: handles,\n    cellWidth: cellWidth,\n    relativeAppointmentRect: relativeAppointmentRect\n  } = options;\n  var appointmentLastCell = getAppointmentLeftCell(options);\n  var {\n    allDay: allDay,\n    sourceAppointment: sourceAppointment\n  } = appointmentSettings.info;\n\n  if (handles.right) {\n    var appointmentLastCellIndex = appointmentLastCell.index;\n    var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);\n    var appointmentFirstCellIndex = appointmentLastCellIndex - appointmentCellsAmount + 1;\n    var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);\n    var appointmentFirstCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentFirstCellIndex, allDay, true);\n    var startDate = normalizeStartDate(options, appointmentFirstCell.startDate, sourceAppointment.endDate);\n    return {\n      startDate: startDate,\n      endDate: sourceAppointment.endDate\n    };\n  }\n\n  var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;\n  endDate = normalizeEndDate(options, endDate, sourceAppointment.endDate);\n  return {\n    startDate: sourceAppointment.startDate,\n    endDate: endDate\n  };\n};\n\nvar getRelativeAppointmentRect = (appointmentRect, parentAppointmentRect) => {\n  var left = appointmentRect.left - parentAppointmentRect.left;\n  var top = appointmentRect.top - parentAppointmentRect.top;\n  var width = left < 0 ? appointmentRect.width + left : appointmentRect.width;\n  var height = top < 0 ? appointmentRect.height + top : appointmentRect.height;\n  return {\n    left: Math.max(0, left),\n    top: Math.max(0, top),\n    width: width,\n    height: height\n  };\n};\n\nvar getAppointmentCellsInfo = options => {\n  var {\n    appointmentSettings: appointmentSettings,\n    isVerticalGroupedWorkSpace: isVerticalGroupedWorkSpace,\n    DOMMetaData: DOMMetaData\n  } = options;\n  var DOMMetaTable = appointmentSettings.allDay && !isVerticalGroupedWorkSpace ? [DOMMetaData.allDayPanelCellsMeta] : DOMMetaData.dateTableCellsMeta;\n  var {\n    positionByMap: positionByMap\n  } = appointmentSettings;\n  var {\n    height: cellHeight,\n    width: cellWidth\n  } = DOMMetaTable[positionByMap.rowIndex][positionByMap.columnIndex];\n  var cellCountInRow = DOMMetaTable[positionByMap.rowIndex].length;\n  return {\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellCountInRow: cellCountInRow\n  };\n};\n\nexport var getAppointmentDateRange = options => {\n  var {\n    appointmentSettings: appointmentSettings\n  } = options;\n  var relativeAppointmentRect = getRelativeAppointmentRect(options.appointmentRect, options.parentAppointmentRect);\n  var cellInfo = getAppointmentCellsInfo(options);\n  var considerTime = !options.isDateAndTimeView || appointmentSettings.allDay;\n\n  var extendedOptions = _extends({}, options, cellInfo, {\n    considerTime: considerTime,\n    relativeAppointmentRect: relativeAppointmentRect\n  });\n\n  return !options.rtlEnabled ? getDateRangeHorizontal(extendedOptions) : getDateRangeHorizontalRTL(extendedOptions);\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/appointments/resizing/core.js"],"names":["_extends","normalizeStartDate","normalizeEndDate","getAppointmentLeftCell","options","cellHeight","cellWidth","viewDataProvider","relativeAppointmentRect","appointmentSettings","rtlEnabled","cellRowIndex","Math","floor","top","cellColumnIndex","round","left","leftCell","getCellData","allDay","getDateRangeHorizontal","cellCountInRow","handles","appointmentFirstCell","appointmentCellsAmount","width","appointmentLastCellIndex","index","sourceAppointment","info","startDate","endDate","appointmentRowIndex","appointmentColumnIndex","appointmentLastCell","considerTime","getDateRangeHorizontalRTL","right","appointmentFirstCellIndex","getRelativeAppointmentRect","appointmentRect","parentAppointmentRect","height","max","getAppointmentCellsInfo","isVerticalGroupedWorkSpace","DOMMetaData","DOMMetaTable","allDayPanelCellsMeta","dateTableCellsMeta","positionByMap","rowIndex","columnIndex","length","getAppointmentDateRange","cellInfo","isDateAndTimeView","extendedOptions"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/resizing/core.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    normalizeStartDate,\r\n    normalizeEndDate\r\n} from \"./utils\";\r\nvar getAppointmentLeftCell = options => {\r\n    var {\r\n        cellHeight: cellHeight,\r\n        cellWidth: cellWidth,\r\n        viewDataProvider: viewDataProvider,\r\n        relativeAppointmentRect: relativeAppointmentRect,\r\n        appointmentSettings: appointmentSettings,\r\n        rtlEnabled: rtlEnabled\r\n    } = options;\r\n    var cellRowIndex = Math.floor(relativeAppointmentRect.top / cellHeight);\r\n    var cellColumnIndex = Math.round(relativeAppointmentRect.left / cellWidth);\r\n    var leftCell = viewDataProvider.getCellData(cellRowIndex, cellColumnIndex, appointmentSettings.allDay, rtlEnabled);\r\n    return leftCell\r\n};\r\nvar getDateRangeHorizontal = options => {\r\n    var {\r\n        cellWidth: cellWidth,\r\n        cellCountInRow: cellCountInRow,\r\n        relativeAppointmentRect: relativeAppointmentRect,\r\n        viewDataProvider: viewDataProvider,\r\n        appointmentSettings: appointmentSettings,\r\n        handles: handles\r\n    } = options;\r\n    var appointmentFirstCell = getAppointmentLeftCell(options);\r\n    var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);\r\n    var appointmentLastCellIndex = appointmentFirstCell.index + (appointmentCellsAmount - 1);\r\n    var {\r\n        allDay: allDay,\r\n        sourceAppointment: sourceAppointment\r\n    } = appointmentSettings.info;\r\n    if (handles.left) {\r\n        var startDate = normalizeStartDate(options, appointmentFirstCell.startDate, sourceAppointment.startDate);\r\n        return {\r\n            startDate: startDate,\r\n            endDate: sourceAppointment.endDate\r\n        }\r\n    }\r\n    var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);\r\n    var appointmentColumnIndex = appointmentLastCellIndex % cellCountInRow;\r\n    var appointmentLastCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentColumnIndex, allDay);\r\n    var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;\r\n    endDate = normalizeEndDate(options, endDate, sourceAppointment.endDate);\r\n    return {\r\n        startDate: sourceAppointment.startDate,\r\n        endDate: endDate\r\n    }\r\n};\r\nvar getDateRangeHorizontalRTL = options => {\r\n    var {\r\n        viewDataProvider: viewDataProvider,\r\n        cellCountInRow: cellCountInRow,\r\n        appointmentSettings: appointmentSettings,\r\n        handles: handles,\r\n        cellWidth: cellWidth,\r\n        relativeAppointmentRect: relativeAppointmentRect\r\n    } = options;\r\n    var appointmentLastCell = getAppointmentLeftCell(options);\r\n    var {\r\n        allDay: allDay,\r\n        sourceAppointment: sourceAppointment\r\n    } = appointmentSettings.info;\r\n    if (handles.right) {\r\n        var appointmentLastCellIndex = appointmentLastCell.index;\r\n        var appointmentCellsAmount = Math.round(relativeAppointmentRect.width / cellWidth);\r\n        var appointmentFirstCellIndex = appointmentLastCellIndex - appointmentCellsAmount + 1;\r\n        var appointmentRowIndex = Math.floor(appointmentLastCellIndex / cellCountInRow);\r\n        var appointmentFirstCell = viewDataProvider.getCellData(appointmentRowIndex, appointmentFirstCellIndex, allDay, true);\r\n        var startDate = normalizeStartDate(options, appointmentFirstCell.startDate, sourceAppointment.endDate);\r\n        return {\r\n            startDate: startDate,\r\n            endDate: sourceAppointment.endDate\r\n        }\r\n    }\r\n    var endDate = !options.considerTime ? appointmentLastCell.endDate : appointmentLastCell.startDate;\r\n    endDate = normalizeEndDate(options, endDate, sourceAppointment.endDate);\r\n    return {\r\n        startDate: sourceAppointment.startDate,\r\n        endDate: endDate\r\n    }\r\n};\r\nvar getRelativeAppointmentRect = (appointmentRect, parentAppointmentRect) => {\r\n    var left = appointmentRect.left - parentAppointmentRect.left;\r\n    var top = appointmentRect.top - parentAppointmentRect.top;\r\n    var width = left < 0 ? appointmentRect.width + left : appointmentRect.width;\r\n    var height = top < 0 ? appointmentRect.height + top : appointmentRect.height;\r\n    return {\r\n        left: Math.max(0, left),\r\n        top: Math.max(0, top),\r\n        width: width,\r\n        height: height\r\n    }\r\n};\r\nvar getAppointmentCellsInfo = options => {\r\n    var {\r\n        appointmentSettings: appointmentSettings,\r\n        isVerticalGroupedWorkSpace: isVerticalGroupedWorkSpace,\r\n        DOMMetaData: DOMMetaData\r\n    } = options;\r\n    var DOMMetaTable = appointmentSettings.allDay && !isVerticalGroupedWorkSpace ? [DOMMetaData.allDayPanelCellsMeta] : DOMMetaData.dateTableCellsMeta;\r\n    var {\r\n        positionByMap: positionByMap\r\n    } = appointmentSettings;\r\n    var {\r\n        height: cellHeight,\r\n        width: cellWidth\r\n    } = DOMMetaTable[positionByMap.rowIndex][positionByMap.columnIndex];\r\n    var cellCountInRow = DOMMetaTable[positionByMap.rowIndex].length;\r\n    return {\r\n        cellWidth: cellWidth,\r\n        cellHeight: cellHeight,\r\n        cellCountInRow: cellCountInRow\r\n    }\r\n};\r\nexport var getAppointmentDateRange = options => {\r\n    var {\r\n        appointmentSettings: appointmentSettings\r\n    } = options;\r\n    var relativeAppointmentRect = getRelativeAppointmentRect(options.appointmentRect, options.parentAppointmentRect);\r\n    var cellInfo = getAppointmentCellsInfo(options);\r\n    var considerTime = !options.isDateAndTimeView || appointmentSettings.allDay;\r\n    var extendedOptions = _extends({}, options, cellInfo, {\r\n        considerTime: considerTime,\r\n        relativeAppointmentRect: relativeAppointmentRect\r\n    });\r\n    return !options.rtlEnabled ? getDateRangeHorizontal(extendedOptions) : getDateRangeHorizontalRTL(extendedOptions)\r\n};\r\n"]},"metadata":{},"sourceType":"module"}