{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nimport { addClass, Browser, EventHandler, remove, closest, extend, formatUnit, setStyleAttribute, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ActionBase } from '../actions/action-base';\nimport { MonthEvent } from '../event-renderer/month';\nimport * as util from '../base/util';\nimport * as event from '../base/constant';\nimport * as cls from '../base/css-constant';\n/**\n * Schedule events resize actions\n */\n\nvar Resize =\n/** @class */\nfunction (_super) {\n  __extends(Resize, _super);\n\n  function Resize() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Resize.prototype.wireResizeEvent = function (element) {\n    var resizeElement = [].slice.call(element.querySelectorAll('.' + cls.EVENT_RESIZE_CLASS));\n\n    for (var _i = 0, resizeElement_1 = resizeElement; _i < resizeElement_1.length; _i++) {\n      var element_1 = resizeElement_1[_i];\n      EventHandler.add(element_1, Browser.touchStartEvent, this.resizeStart, this);\n    }\n  };\n\n  Resize.prototype.resizeHelper = function () {\n    if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.activeViewOptions.group.allowGroupEdit) {\n      for (var i = 0, len = this.actionObj.originalElement.length; i < len; i++) {\n        var cloneElement = this.createCloneElement(this.actionObj.originalElement[i]);\n        this.actionObj.cloneElement[i] = cloneElement;\n\n        if (this.actionObj.element === this.actionObj.originalElement[i]) {\n          this.actionObj.clone = cloneElement;\n        }\n      }\n    } else {\n      if (this.actionObj.element) {\n        this.actionObj.clone = this.createCloneElement(this.actionObj.element);\n      }\n\n      this.actionObj.cloneElement = [this.actionObj.clone];\n      this.actionObj.originalElement = [this.actionObj.element];\n    }\n  };\n\n  Resize.prototype.resizeStart = function (e) {\n    var _this = this;\n\n    this.actionObj.action = 'resize';\n    this.actionObj.slotInterval = this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount;\n    this.actionObj.interval = this.actionObj.slotInterval;\n    var resizeTarget = closest(e.target, '.' + cls.EVENT_RESIZE_CLASS);\n    this.actionObj.element = closest(resizeTarget, '.' + cls.APPOINTMENT_CLASS);\n    this.actionObj.event = this.parent.eventBase.getEventByGuid(this.actionObj.element.getAttribute('data-guid'));\n    var eventObj = extend({}, this.actionObj.event, null, true);\n    var resizeArgs = {\n      cancel: false,\n      data: eventObj,\n      element: this.actionObj.element,\n      event: e,\n      interval: this.actionObj.interval,\n      scroll: {\n        enable: true,\n        scrollBy: 30,\n        timeDelay: 100\n      }\n    };\n    this.parent.trigger(event.resizeStart, resizeArgs, function (resizeEventArgs) {\n      if (resizeEventArgs.cancel) {\n        return;\n      }\n\n      _this.actionClass('addClass');\n\n      _this.parent.uiStateValues.action = true;\n      _this.resizeEdges = {\n        left: resizeTarget.classList.contains(cls.LEFT_RESIZE_HANDLER),\n        right: resizeTarget.classList.contains(cls.RIGHT_RESIZE_HANDLER),\n        top: resizeTarget.classList.contains(cls.TOP_RESIZE_HANDLER),\n        bottom: resizeTarget.classList.contains(cls.BOTTOM_RESIZE_HANDLER)\n      };\n      _this.actionObj.groupIndex = _this.parent.uiStateValues.isGroupAdaptive ? _this.parent.uiStateValues.groupIndex : 0;\n\n      var workCell = _this.parent.element.querySelector('.' + cls.WORK_CELLS_CLASS).getBoundingClientRect();\n\n      _this.actionObj.cellWidth = workCell.width;\n      _this.actionObj.cellHeight = workCell.height;\n\n      var hRows = _this.parent.activeViewOptions.headerRows.map(function (row) {\n        return row.option;\n      });\n\n      if (_this.parent.activeView.isTimelineView() && hRows.length > 0 && ['Date', 'Hour'].indexOf(hRows.slice(-1)[0]) < 0) {\n        var tr = _this.parent.getContentTable().querySelector('tr');\n\n        var noOfDays = 0;\n        var tdCollections = [].slice.call(tr.children);\n\n        for (var _i = 0, tdCollections_1 = tdCollections; _i < tdCollections_1.length; _i++) {\n          var td = tdCollections_1[_i];\n          noOfDays += parseInt(td.getAttribute('colspan'), 10);\n        }\n\n        var trRect = tr.getBoundingClientRect();\n        _this.actionObj.cellWidth = trRect.width / noOfDays;\n        _this.actionObj.cellHeight = trRect.height;\n      }\n\n      var pages = _this.getPageCoordinates(e);\n\n      _this.actionObj.X = pages.pageX;\n      _this.actionObj.Y = pages.pageY;\n      _this.actionObj.groupIndex = parseInt(_this.actionObj.element.getAttribute('data-group-index') || '0', 10);\n      _this.actionObj.interval = resizeEventArgs.interval;\n      _this.actionObj.scroll = resizeEventArgs.scroll;\n      _this.actionObj.start = new Date(eventObj[_this.parent.eventFields.startTime].getTime());\n      _this.actionObj.end = new Date(eventObj[_this.parent.eventFields.endTime].getTime());\n      _this.actionObj.originalElement = _this.getOriginalElement(_this.actionObj.element);\n\n      if (_this.parent.currentView === 'Month') {\n        _this.daysVariation = -1;\n        _this.monthEvent = new MonthEvent(_this.parent);\n      }\n\n      var viewElement = _this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n\n      _this.scrollArgs = {\n        element: viewElement,\n        width: viewElement.scrollWidth,\n        height: viewElement.scrollHeight\n      };\n      EventHandler.add(document, Browser.touchMoveEvent, _this.resizing, _this);\n      EventHandler.add(document, Browser.touchEndEvent, _this.resizeStop, _this);\n    });\n  };\n\n  Resize.prototype.resizing = function (e) {\n    if (this.parent.quickPopup) {\n      this.parent.quickPopup.quickPopupHide();\n    }\n\n    if (this.parent.element.querySelectorAll('.' + cls.RESIZE_CLONE_CLASS).length === 0) {\n      this.resizeHelper();\n    }\n\n    if (!isNullOrUndefined(e.target) && e.target.classList.contains(cls.DISABLE_DATES)) {\n      return;\n    }\n\n    var pages = this.getPageCoordinates(e);\n    this.actionObj.pageX = pages.pageX;\n    this.actionObj.pageY = pages.pageY;\n    this.updateScrollPosition(e);\n    this.updateResizingDirection(e);\n    var eventObj = extend({}, this.actionObj.event, null, true);\n    var resizeArgs = {\n      cancel: false,\n      data: eventObj,\n      element: this.actionObj.element,\n      event: e,\n      startTime: this.actionObj.start,\n      endTime: this.actionObj.end\n    };\n\n    if (this.parent.group.resources.length > 0) {\n      resizeArgs.groupIndex = this.actionObj.groupIndex;\n    }\n\n    this.parent.trigger(event.resizing, resizeArgs);\n  };\n\n  Resize.prototype.updateResizingDirection = function (e) {\n    if (this.parent.currentView === 'Month' || this.parent.currentView === 'TimelineYear') {\n      this.monthResizing();\n      return;\n    }\n\n    var resizeValidation = this.resizeValidation(e);\n\n    if (this.resizeEdges.left) {\n      if (resizeValidation) {\n        var leftStyles = this.getLeftRightStyles(e, true);\n\n        if (parseInt(leftStyles.width, 10) < 1) {\n          return;\n        }\n\n        for (var _i = 0, _a = this.actionObj.cloneElement; _i < _a.length; _i++) {\n          var cloneElement = _a[_i];\n          setStyleAttribute(cloneElement, leftStyles);\n          addClass([cloneElement], cls.LEFT_RESIZE_HANDLER);\n        }\n      }\n\n      this.horizontalResizing(!this.parent.enableRtl);\n    }\n\n    if (this.resizeEdges.right) {\n      if (resizeValidation) {\n        var rightStyles = this.getLeftRightStyles(e, false);\n\n        if (parseInt(rightStyles.width, 10) < 1) {\n          return;\n        }\n\n        for (var _b = 0, _c = this.actionObj.cloneElement; _b < _c.length; _b++) {\n          var cloneElement = _c[_b];\n          setStyleAttribute(cloneElement, rightStyles);\n          addClass([cloneElement], cls.RIGHT_RESIZE_HANDLER);\n        }\n      }\n\n      this.horizontalResizing(this.parent.enableRtl);\n    }\n\n    if (this.resizeEdges.top) {\n      if (resizeValidation) {\n        var topStyles = this.getTopBottomStyles(e, true);\n\n        if (parseInt(topStyles.height, 10) < 1) {\n          return;\n        }\n\n        for (var _d = 0, _e = this.actionObj.cloneElement; _d < _e.length; _d++) {\n          var cloneElement = _e[_d];\n          setStyleAttribute(cloneElement, topStyles);\n          addClass([cloneElement], cls.TOP_RESIZE_HANDLER);\n        }\n      }\n\n      this.verticalResizing(true);\n    }\n\n    if (this.resizeEdges.bottom) {\n      if (resizeValidation) {\n        var bottomStyles = this.getTopBottomStyles(e, false);\n\n        if (parseInt(bottomStyles.height, 10) < 1) {\n          return;\n        }\n\n        for (var _f = 0, _g = this.actionObj.cloneElement; _f < _g.length; _f++) {\n          var cloneElement = _g[_f];\n          setStyleAttribute(cloneElement, bottomStyles);\n          addClass([cloneElement], cls.BOTTOM_RESIZE_HANDLER);\n        }\n      }\n\n      this.verticalResizing(false);\n    }\n  };\n\n  Resize.prototype.monthResizing = function () {\n    this.removeCloneElement();\n\n    if (isNullOrUndefined(this.actionObj.pageX) || isNullOrUndefined(this.actionObj.pageY)) {\n      return;\n    }\n\n    var td = document.elementFromPoint(this.actionObj.pageX, this.actionObj.pageY);\n\n    if (isNullOrUndefined(td)) {\n      return;\n    }\n\n    var resizeTime = this.parent.getDateFromElement(td);\n    var isSameCell = this.parent.activeViewOptions.group.resources.length > 0 ? parseInt(td.getAttribute('data-group-index'), 10) === this.actionObj.groupIndex : true;\n    var startTime = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n    var endTime = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n\n    if (!this.parent.enableRtl && this.resizeEdges.left || this.parent.enableRtl && this.resizeEdges.right || this.resizeEdges.top) {\n      startTime = resizeTime;\n    } else if (!this.parent.enableRtl && this.resizeEdges.right || this.parent.enableRtl && this.resizeEdges.left || this.resizeEdges.bottom) {\n      endTime = util.addDays(resizeTime, 1);\n    }\n\n    if (isSameCell && startTime < endTime) {\n      this.actionObj.start = startTime;\n      this.actionObj.end = endTime;\n      var event_1 = this.getUpdatedEvent(this.actionObj.start, this.actionObj.end, this.actionObj.event);\n\n      if (this.parent.currentView === 'TimelineYear') {\n        this.yearEventsRendering(event_1);\n      } else {\n        this.dynamicEventsRendering(event_1);\n      }\n\n      this.updateOriginalElement(this.actionObj.clone);\n    }\n  };\n\n  Resize.prototype.yearEventsRendering = function (event) {\n    var eventWrappers = [].slice.call(this.parent.element.querySelectorAll('.' + cls.CLONE_ELEMENT_CLASS));\n\n    for (var _i = 0, eventWrappers_1 = eventWrappers; _i < eventWrappers_1.length; _i++) {\n      var wrapper = eventWrappers_1[_i];\n      remove(wrapper);\n    }\n\n    var endDate = new Date(event[this.parent.eventFields.endTime]);\n    var monthDiff = 0;\n\n    if (this.parent.activeViewOptions.group.resources.length === 0) {\n      monthDiff = this.getMonthDiff(event[this.parent.eventFields.startTime], util.addDays(endDate, -1));\n    }\n\n    for (var i = 0; i <= monthDiff; i++) {\n      var eventObj = void 0;\n\n      if (this.parent.activeViewOptions.group.resources.length === 0) {\n        eventObj = this.getEventCount(event, this.actionObj.start.getMonth() + i);\n      } else {\n        eventObj = extend({}, event, null, true);\n        endDate = this.resizeEdges.left || this.resizeEdges.right ? util.addDays(endDate, -1) : endDate;\n        eventObj.count = this.getMonthDiff(event[this.parent.eventFields.startTime], endDate) + 1;\n      }\n\n      this.dynamicYearlyEventsRendering(eventObj, true);\n    }\n  };\n\n  Resize.prototype.getMonthDiff = function (startDate, endDate) {\n    var months;\n    months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n    months -= startDate.getMonth();\n    months += endDate.getMonth();\n    return months <= 0 ? 0 : months;\n  };\n\n  Resize.prototype.getEventCount = function (eventObj, month) {\n    var eventData = extend({}, eventObj, null, true);\n    var eventStart = eventData[this.parent.eventFields.startTime];\n    var eventEnd = eventData[this.parent.eventFields.endTime];\n    var monthStart = new Date(this.parent.selectedDate.getFullYear(), month, 1);\n    var monthEnd = util.addDays(new Date(this.parent.selectedDate.getFullYear(), month + 1, 0), 1);\n    var count = 1;\n\n    if (eventStart.getTime() < monthStart.getTime()) {\n      eventData[this.parent.eventFields.startTime] = monthStart;\n    }\n\n    if (eventEnd.getTime() > monthEnd.getTime()) {\n      eventData[this.parent.eventFields.endTime] = monthEnd;\n    }\n\n    if (this.parent.activeViewOptions.group.resources.length === 0) {\n      count = Math.ceil((eventData[this.parent.eventFields.endTime].getTime() - eventData[this.parent.eventFields.startTime].getTime()) / util.MS_PER_DAY);\n    }\n\n    eventData.count = count;\n    return eventData;\n  };\n\n  Resize.prototype.resizeStop = function (e) {\n    var _this = this;\n\n    EventHandler.remove(document, Browser.touchMoveEvent, this.resizing);\n    EventHandler.remove(document, Browser.touchEndEvent, this.resizeStop);\n    clearInterval(this.actionObj.scrollInterval);\n    this.actionObj.scrollInterval = null;\n    this.removeCloneElementClasses();\n    this.removeCloneElement();\n    this.actionClass('removeClass');\n    this.parent.uiStateValues.action = false;\n    var resizeArgs = {\n      cancel: false,\n      data: this.getChangedData(),\n      element: this.actionObj.element,\n      event: e\n    };\n    this.parent.trigger(event.resizeStop, resizeArgs, function (resizeEventArgs) {\n      if (resizeEventArgs.cancel) {\n        return;\n      }\n\n      if (_this.parent.isSpecificResourceEvents()) {\n        _this.parent.crudModule.crudObj.sourceEvent = [_this.parent.resourceBase.lastResourceLevel[parseInt(resizeEventArgs.element.getAttribute('data-group-index'), 10)]];\n        _this.parent.crudModule.crudObj.targetEvent = _this.parent.crudModule.crudObj.sourceEvent;\n        _this.parent.crudModule.crudObj.isCrudAction = true;\n      }\n\n      _this.saveChangedData(resizeEventArgs);\n    });\n  };\n\n  Resize.prototype.verticalResizing = function (isTop) {\n    var offsetValue = this.actionObj.clone.offsetTop;\n\n    if (!isTop) {\n      offsetValue += this.actionObj.clone.offsetHeight;\n    }\n\n    var minutes = offsetValue / this.actionObj.cellHeight * this.actionObj.slotInterval;\n    var element = this.actionObj.clone.offsetParent;\n\n    if (isNullOrUndefined(element)) {\n      return;\n    }\n\n    var resizeTime = util.resetTime(this.parent.getDateFromElement(element));\n    resizeTime.setHours(this.parent.activeView.getStartHour().getHours());\n    resizeTime.setMinutes(minutes + this.parent.activeView.getStartHour().getMinutes());\n\n    if (isTop) {\n      this.actionObj.start = this.calculateIntervalTime(resizeTime);\n    } else {\n      this.actionObj.end = this.calculateIntervalTime(resizeTime);\n    }\n\n    this.updateTimePosition(resizeTime);\n  };\n\n  Resize.prototype.horizontalResizing = function (isLeft) {\n    var eventStart = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n    var eventEnd = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n    var resizeTime;\n    var isDateHeader = false;\n    var headerName = this.parent.currentView;\n    var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1;\n    var isTimelineMonth = this.parent.currentView === 'TimelineMonth';\n    var isWithoutScale = isTimelineMonth || isTimeViews && !this.parent.activeViewOptions.timeScale.enable;\n\n    if (this.parent.activeView.isTimelineView()) {\n      var tr = this.parent.getContentTable().querySelector('tr');\n\n      if (this.parent.activeViewOptions.headerRows.length > 0) {\n        var rows = this.parent.activeViewOptions.headerRows.map(function (row) {\n          return row.option;\n        });\n        headerName = rows.slice(-1)[0];\n\n        if (isTimelineMonth && headerName === 'Hour') {\n          headerName = rows.slice(-2)[0] || 'Month';\n        }\n      }\n\n      resizeTime = isLeft ? eventStart : eventEnd;\n      var cellIndex = 0;\n      var tdCollections = [].slice.call(tr.children);\n      var isLastCell = false;\n      var pixelsPerMinute = this.actionObj.cellWidth / (this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount);\n      var offset = parseFloat(this.parent.enableRtl ? this.actionObj.clone.style.right : this.actionObj.clone.style.left);\n      offset = Math.round(offset / pixelsPerMinute) * pixelsPerMinute;\n\n      if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n        var noOfDays = 0;\n\n        for (var _i = 0, tdCollections_2 = tdCollections; _i < tdCollections_2.length; _i++) {\n          var td = tdCollections_2[_i];\n          noOfDays += parseInt(td.getAttribute('colspan'), 10);\n        }\n\n        var offsetValue = this.parent.enableRtl ? parseInt(this.actionObj.clone.style.right, 10) : parseInt(this.actionObj.clone.style.left, 10);\n        offsetValue = Math.round(offsetValue / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n\n        if (!isLeft) {\n          offsetValue += this.actionObj.clone.getBoundingClientRect().width - this.actionObj.cellWidth;\n        }\n\n        cellIndex = Math.floor(offsetValue / Math.floor(tr.getBoundingClientRect().width / noOfDays));\n        isDateHeader = isTimeViews && headerName === 'Date';\n        cellIndex = isLeft ? cellIndex : isTimelineMonth ? cellIndex + 1 : cellIndex;\n        isLastCell = cellIndex === tdCollections.length;\n        cellIndex = cellIndex < 0 ? 0 : cellIndex >= noOfDays ? noOfDays - 1 : cellIndex;\n      } else {\n        var cellWidth = this.actionObj.cellWidth;\n        cellIndex = isLeft ? Math.floor(offset / this.actionObj.cellWidth) : Math.ceil((offset + (this.actionObj.clone.getBoundingClientRect().width - cellWidth)) / this.actionObj.cellWidth);\n\n        if (this.parent.enableRtl) {\n          var cellOffsetWidth = 0;\n\n          if (headerName === 'TimelineMonth' || !this.parent.activeViewOptions.timeScale.enable && !isTimelineMonth) {\n            cellOffsetWidth = this.actionObj.cellWidth;\n          }\n\n          var offsetWidth = Math.floor(offset / this.actionObj.cellWidth) * this.actionObj.cellWidth + (isLeft ? 0 : this.actionObj.clone.getBoundingClientRect().width - cellOffsetWidth);\n          cellIndex = Math.floor(offsetWidth / this.actionObj.cellWidth);\n        }\n\n        isLastCell = cellIndex === tdCollections.length;\n        cellIndex = this.getIndex(cellIndex);\n      }\n\n      var resizeDate = void 0;\n\n      if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n        resizeDate = new Date(this.parent.activeView.renderDates[cellIndex].getTime());\n      } else {\n        resizeDate = this.parent.getDateFromElement(tr.children[cellIndex]);\n      }\n\n      if (['TimelineMonth', 'Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1 || !this.parent.activeViewOptions.timeScale.enable) {\n        resizeTime = new Date(resizeDate.setHours(resizeTime.getHours(), resizeTime.getMinutes(), resizeTime.getSeconds()));\n      } else {\n        if (!isLeft) {\n          offset += this.actionObj.clone.getBoundingClientRect().width;\n        }\n\n        var spanMinutes = Math.ceil(this.actionObj.slotInterval / this.actionObj.cellWidth * (offset - Math.floor(offset / this.actionObj.cellWidth) * this.actionObj.cellWidth));\n        spanMinutes = isLastCell || !isLeft && spanMinutes === 0 ? this.actionObj.slotInterval : spanMinutes;\n        resizeTime = new Date(resizeDate.getTime());\n        resizeTime.setMinutes(resizeTime.getMinutes() + spanMinutes);\n        this.updateTimePosition(resizeTime);\n      }\n    } else {\n      var cloneIndex = closest(this.actionObj.clone, 'td').cellIndex;\n      var originalWidth = Math.ceil((isLeft ? this.actionObj.element.getBoundingClientRect().width : 0) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n      var noOfDays = Math.ceil((this.actionObj.clone.getBoundingClientRect().width - originalWidth) / this.actionObj.cellWidth);\n      var tr = closest(this.actionObj.clone, 'tr');\n      var dayIndex = isLeft ? cloneIndex - noOfDays : cloneIndex + noOfDays - 1;\n      dayIndex = this.getIndex(dayIndex);\n      resizeTime = this.parent.getDateFromElement(tr.children[dayIndex]);\n\n      if (isLeft) {\n        resizeTime.setHours(eventStart.getHours(), eventStart.getMinutes(), eventStart.getSeconds());\n      } else {\n        resizeTime.setHours(eventEnd.getHours(), eventEnd.getMinutes(), eventEnd.getSeconds());\n      }\n    }\n\n    if (isLeft) {\n      if (eventEnd.getTime() - resizeTime.getTime() <= 0) {\n        resizeTime = isWithoutScale ? util.resetTime(eventEnd) : eventStart;\n      }\n\n      this.actionObj.start = this.parent.activeViewOptions.timeScale.enable ? this.calculateIntervalTime(resizeTime) : resizeTime;\n    } else {\n      var isTimeScaleViews = isTimeViews && this.parent.activeViewOptions.timeScale.enable;\n      var resizeEnd = (!isTimeScaleViews || isDateHeader || isTimeViews && ['Week', 'Month', 'Year'].indexOf(headerName) > -1) && resizeTime.getHours() === 0 && resizeTime.getMinutes() === 0 ? util.addDays(resizeTime, 1) : resizeTime;\n\n      if (isWithoutScale && resizeEnd.getTime() - eventStart.getTime() <= 0) {\n        resizeEnd = util.addDays(util.resetTime(eventStart), 1);\n      }\n\n      this.actionObj.end = this.parent.activeViewOptions.timeScale.enable && this.parent.currentView !== 'Month' ? this.calculateIntervalTime(resizeEnd) : resizeEnd;\n    }\n  };\n\n  Resize.prototype.getTopBottomStyles = function (e, isTop) {\n    var viewElement = this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n    var slotInterval = this.actionObj.cellHeight / this.actionObj.slotInterval * this.actionObj.interval;\n    var clnHeight = isTop ? this.actionObj.element.offsetHeight + (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.element.offsetHeight + (this.actionObj.pageY - this.actionObj.Y);\n    var clnTop = isTop ? this.actionObj.element.offsetTop - (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.clone.offsetTop;\n    clnHeight = clnTop < 0 ? this.actionObj.clone.offsetHeight : this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight > this.scrollArgs.height ? this.actionObj.clone.offsetHeight : clnHeight;\n    clnTop = clnTop < 0 ? 0 : clnTop;\n    clnTop = isTop ? Math.floor(clnTop / slotInterval) * slotInterval : clnTop;\n    clnHeight = clnTop + clnHeight >= viewElement.scrollHeight ? viewElement.scrollHeight - clnTop : Math.ceil(clnHeight / slotInterval) * slotInterval;\n    var styles = {\n      height: formatUnit(clnHeight < this.actionObj.cellHeight ? Math.floor(clnHeight / slotInterval) * slotInterval : clnHeight),\n      top: formatUnit(clnHeight < this.actionObj.cellHeight && isTop ? Math.ceil(clnTop / slotInterval) * slotInterval : clnTop),\n      left: '0px',\n      right: '0px',\n      width: '100%'\n    };\n    return styles;\n  };\n\n  Resize.prototype.getLeftRightStyles = function (e, isLeft) {\n    var styles = {};\n    var isTimelineView = this.parent.activeView.isTimelineView();\n    var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 && this.parent.activeViewOptions.timeScale.enable;\n    var slotInterval = this.actionObj.cellWidth / this.actionObj.slotInterval * this.actionObj.interval;\n    var pageWidth = isLeft ? this.actionObj.X - this.actionObj.pageX : this.actionObj.pageX - this.actionObj.X;\n    var targetWidth = isTimelineView ? this.actionObj.element.getBoundingClientRect().width / this.actionObj.cellWidth * this.actionObj.cellWidth : this.parent.currentView === 'Month' ? this.actionObj.element.getBoundingClientRect().width : Math.ceil(this.actionObj.element.getBoundingClientRect().width / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n    var offsetWidth = targetWidth + Math.ceil(pageWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n    var left = this.parent.enableRtl ? parseInt(this.actionObj.element.style.right, 10) : this.actionObj.clone.offsetLeft;\n\n    if (isTimeViews) {\n      offsetWidth = targetWidth + Math.ceil(pageWidth / slotInterval) * slotInterval;\n      offsetWidth = Math.round((left + offsetWidth) / slotInterval) * slotInterval - left;\n      this.actionObj.event[this.parent.eventFields.isAllDay] = false;\n    }\n\n    var width = !isLeft && offsetWidth + this.actionObj.clone.offsetLeft > this.scrollArgs.width ? this.actionObj.clone.getBoundingClientRect().width : offsetWidth < this.actionObj.cellWidth ? offsetWidth : offsetWidth;\n\n    if (this.parent.enableRtl) {\n      var rightValue = isTimelineView ? parseInt(this.actionObj.element.style.right, 10) : -(offsetWidth - this.actionObj.cellWidth);\n      rightValue = isTimelineView ? rightValue : isLeft ? 0 : rightValue > 0 ? 0 : rightValue;\n\n      if (isTimelineView && !isLeft) {\n        rightValue = Math.ceil((this.actionObj.element.offsetLeft + (this.actionObj.element.getBoundingClientRect().width + (this.actionObj.pageX - this.actionObj.X))) / slotInterval) * slotInterval;\n        rightValue = rightValue < 0 ? Math.abs(rightValue) : -rightValue;\n      }\n\n      rightValue = rightValue >= this.scrollArgs.width ? this.scrollArgs.width - this.actionObj.cellWidth : rightValue;\n      styles.right = formatUnit(rightValue);\n      width = width + rightValue > this.scrollArgs.width ? this.actionObj.clone.getBoundingClientRect().width : width;\n    } else {\n      var offsetLeft = isLeft ? this.actionObj.element.offsetLeft - (this.actionObj.X - this.actionObj.pageX) : this.parent.enableRtl ? this.actionObj.element.offsetLeft : 0;\n\n      if (isTimelineView) {\n        offsetLeft = isLeft ? offsetLeft : parseInt(this.actionObj.clone.style.left, 10);\n\n        if (this.parent.enableRtl) {\n          offsetLeft = !isLeft ? this.actionObj.pageX < this.actionObj.X - this.actionObj.clone.getBoundingClientRect().width ? parseInt(this.actionObj.clone.style.right, 10) : offsetLeft : offsetLeft;\n        } else {\n          offsetLeft = isLeft ? this.actionObj.pageX > this.actionObj.X + this.actionObj.clone.getBoundingClientRect().width && this.actionObj.clone.getBoundingClientRect().width === this.actionObj.cellWidth ? parseInt(this.actionObj.clone.style.left, 10) : offsetLeft : offsetLeft;\n        }\n      }\n\n      var leftValue = offsetLeft;\n      offsetLeft = isTimelineView ? isTimeViews ? isLeft ? Math.floor(offsetLeft / slotInterval) * slotInterval : offsetLeft : Math.floor(offsetLeft / this.actionObj.cellWidth) * this.actionObj.cellWidth : Math.ceil(Math.abs(offsetLeft) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n\n      if (offsetLeft < 0) {\n        offsetLeft = 0;\n        width = this.actionObj.clone.getBoundingClientRect().width;\n      }\n\n      var cloneWidth = Math.ceil(this.actionObj.clone.getBoundingClientRect().width / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n\n      if (isLeft) {\n        styles.left = formatUnit(isTimelineView ? offsetLeft : isLeft ? leftValue < 0 ? -offsetLeft : Math.ceil((targetWidth - cloneWidth) / this.actionObj.cellWidth) * this.actionObj.cellWidth : offsetLeft);\n      }\n    }\n\n    styles.width = formatUnit(width);\n    return styles;\n  };\n\n  Resize.prototype.resizeValidation = function (e) {\n    var pages = this.getPageCoordinates(e);\n    var viewDimension = this.getContentAreaDimension();\n    var isTimeScale = this.parent.activeView.isTimelineView() && this.parent.activeViewOptions.timeScale.enable;\n    var cellWidth = this.actionObj.cellWidth;\n    var resizeValidation = false;\n\n    if (this.resizeEdges.left) {\n      if (pages.pageX < viewDimension.leftOffset && pages.pageX >= viewDimension.left && isTimeScale) {\n        cellWidth = 0;\n      }\n\n      resizeValidation = pages.pageX - cellWidth >= viewDimension.left;\n    }\n\n    if (this.resizeEdges.right) {\n      if (pages.pageX > viewDimension.rightOffset && pages.pageX <= viewDimension.right && isTimeScale) {\n        cellWidth = 0;\n      }\n\n      resizeValidation = pages.pageX + cellWidth <= viewDimension.right;\n    }\n\n    if (this.resizeEdges.top) {\n      resizeValidation = this.actionObj.clone.offsetTop >= viewDimension.top;\n    }\n\n    if (this.resizeEdges.bottom) {\n      resizeValidation = this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight <= this.scrollArgs.height;\n    }\n\n    return resizeValidation;\n  };\n  /**\n   * Get module name\n   *\n   * @returns {string} Returns the module name..\n   */\n\n\n  Resize.prototype.getModuleName = function () {\n    return 'resize';\n  };\n\n  return Resize;\n}(ActionBase);\n\nexport { Resize };","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/resize.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","addClass","Browser","EventHandler","remove","closest","extend","formatUnit","setStyleAttribute","isNullOrUndefined","ActionBase","MonthEvent","util","event","cls","Resize","_super","apply","arguments","wireResizeEvent","element","resizeElement","slice","call","querySelectorAll","EVENT_RESIZE_CLASS","_i","resizeElement_1","length","element_1","add","touchStartEvent","resizeStart","resizeHelper","parent","activeViewOptions","group","resources","allowGroupEdit","i","len","actionObj","originalElement","cloneElement","createCloneElement","clone","e","_this","action","slotInterval","timeScale","interval","slotCount","resizeTarget","target","APPOINTMENT_CLASS","eventBase","getEventByGuid","getAttribute","eventObj","resizeArgs","cancel","data","scroll","enable","scrollBy","timeDelay","trigger","resizeEventArgs","actionClass","uiStateValues","resizeEdges","left","classList","contains","LEFT_RESIZE_HANDLER","right","RIGHT_RESIZE_HANDLER","top","TOP_RESIZE_HANDLER","bottom","BOTTOM_RESIZE_HANDLER","groupIndex","isGroupAdaptive","workCell","querySelector","WORK_CELLS_CLASS","getBoundingClientRect","cellWidth","width","cellHeight","height","hRows","headerRows","map","row","option","activeView","isTimelineView","indexOf","tr","getContentTable","noOfDays","tdCollections","children","tdCollections_1","td","parseInt","trRect","pages","getPageCoordinates","X","pageX","Y","pageY","start","Date","eventFields","startTime","getTime","end","endTime","getOriginalElement","currentView","daysVariation","monthEvent","viewElement","CONTENT_WRAP_CLASS","scrollArgs","scrollWidth","scrollHeight","document","touchMoveEvent","resizing","touchEndEvent","resizeStop","quickPopup","quickPopupHide","RESIZE_CLONE_CLASS","DISABLE_DATES","updateScrollPosition","updateResizingDirection","monthResizing","resizeValidation","leftStyles","getLeftRightStyles","_a","horizontalResizing","enableRtl","rightStyles","_b","_c","topStyles","getTopBottomStyles","_d","_e","verticalResizing","bottomStyles","_f","_g","removeCloneElement","elementFromPoint","resizeTime","getDateFromElement","isSameCell","addDays","event_1","getUpdatedEvent","yearEventsRendering","dynamicEventsRendering","updateOriginalElement","eventWrappers","CLONE_ELEMENT_CLASS","eventWrappers_1","wrapper","endDate","monthDiff","getMonthDiff","getEventCount","getMonth","count","dynamicYearlyEventsRendering","startDate","months","getFullYear","month","eventData","eventStart","eventEnd","monthStart","selectedDate","monthEnd","Math","ceil","MS_PER_DAY","clearInterval","scrollInterval","removeCloneElementClasses","getChangedData","isSpecificResourceEvents","crudModule","crudObj","sourceEvent","resourceBase","lastResourceLevel","targetEvent","isCrudAction","saveChangedData","isTop","offsetValue","offsetTop","offsetHeight","minutes","offsetParent","resetTime","setHours","getStartHour","getHours","setMinutes","getMinutes","calculateIntervalTime","updateTimePosition","isLeft","isDateHeader","headerName","isTimeViews","isTimelineMonth","isWithoutScale","rows","cellIndex","isLastCell","pixelsPerMinute","offset","parseFloat","style","round","tdCollections_2","floor","cellOffsetWidth","offsetWidth","getIndex","resizeDate","renderDates","getSeconds","spanMinutes","cloneIndex","originalWidth","dayIndex","isTimeScaleViews","resizeEnd","clnHeight","clnTop","styles","pageWidth","targetWidth","offsetLeft","isAllDay","rightValue","abs","leftValue","cloneWidth","viewDimension","getContentAreaDimension","isTimeScale","leftOffset","rightOffset","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { addClass, Browser, EventHandler, remove, closest, extend, formatUnit, setStyleAttribute, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ActionBase } from '../actions/action-base';\nimport { MonthEvent } from '../event-renderer/month';\nimport * as util from '../base/util';\nimport * as event from '../base/constant';\nimport * as cls from '../base/css-constant';\n/**\n * Schedule events resize actions\n */\nvar Resize = /** @class */ (function (_super) {\n    __extends(Resize, _super);\n    function Resize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Resize.prototype.wireResizeEvent = function (element) {\n        var resizeElement = [].slice.call(element.querySelectorAll('.' + cls.EVENT_RESIZE_CLASS));\n        for (var _i = 0, resizeElement_1 = resizeElement; _i < resizeElement_1.length; _i++) {\n            var element_1 = resizeElement_1[_i];\n            EventHandler.add(element_1, Browser.touchStartEvent, this.resizeStart, this);\n        }\n    };\n    Resize.prototype.resizeHelper = function () {\n        if (this.parent.activeViewOptions.group.resources.length > 0 && this.parent.activeViewOptions.group.allowGroupEdit) {\n            for (var i = 0, len = this.actionObj.originalElement.length; i < len; i++) {\n                var cloneElement = this.createCloneElement(this.actionObj.originalElement[i]);\n                this.actionObj.cloneElement[i] = cloneElement;\n                if (this.actionObj.element === this.actionObj.originalElement[i]) {\n                    this.actionObj.clone = cloneElement;\n                }\n            }\n        }\n        else {\n            if (this.actionObj.element) {\n                this.actionObj.clone = this.createCloneElement(this.actionObj.element);\n            }\n            this.actionObj.cloneElement = [this.actionObj.clone];\n            this.actionObj.originalElement = [this.actionObj.element];\n        }\n    };\n    Resize.prototype.resizeStart = function (e) {\n        var _this = this;\n        this.actionObj.action = 'resize';\n        this.actionObj.slotInterval = this.parent.activeViewOptions.timeScale.interval / this.parent.activeViewOptions.timeScale.slotCount;\n        this.actionObj.interval = this.actionObj.slotInterval;\n        var resizeTarget = closest(e.target, '.' + cls.EVENT_RESIZE_CLASS);\n        this.actionObj.element = closest(resizeTarget, '.' + cls.APPOINTMENT_CLASS);\n        this.actionObj.event = this.parent.eventBase.getEventByGuid(this.actionObj.element.getAttribute('data-guid'));\n        var eventObj = extend({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            interval: this.actionObj.interval,\n            scroll: { enable: true, scrollBy: 30, timeDelay: 100 }\n        };\n        this.parent.trigger(event.resizeStart, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            _this.actionClass('addClass');\n            _this.parent.uiStateValues.action = true;\n            _this.resizeEdges = {\n                left: resizeTarget.classList.contains(cls.LEFT_RESIZE_HANDLER),\n                right: resizeTarget.classList.contains(cls.RIGHT_RESIZE_HANDLER),\n                top: resizeTarget.classList.contains(cls.TOP_RESIZE_HANDLER),\n                bottom: resizeTarget.classList.contains(cls.BOTTOM_RESIZE_HANDLER)\n            };\n            _this.actionObj.groupIndex = _this.parent.uiStateValues.isGroupAdaptive ? _this.parent.uiStateValues.groupIndex : 0;\n            var workCell = _this.parent.element.querySelector('.' + cls.WORK_CELLS_CLASS).getBoundingClientRect();\n            _this.actionObj.cellWidth = workCell.width;\n            _this.actionObj.cellHeight = workCell.height;\n            var hRows = _this.parent.activeViewOptions.headerRows.map(function (row) { return row.option; });\n            if (_this.parent.activeView.isTimelineView() && hRows.length > 0 && ['Date', 'Hour'].indexOf(hRows.slice(-1)[0]) < 0) {\n                var tr = _this.parent.getContentTable().querySelector('tr');\n                var noOfDays = 0;\n                var tdCollections = [].slice.call(tr.children);\n                for (var _i = 0, tdCollections_1 = tdCollections; _i < tdCollections_1.length; _i++) {\n                    var td = tdCollections_1[_i];\n                    noOfDays += parseInt(td.getAttribute('colspan'), 10);\n                }\n                var trRect = tr.getBoundingClientRect();\n                _this.actionObj.cellWidth = trRect.width / noOfDays;\n                _this.actionObj.cellHeight = trRect.height;\n            }\n            var pages = _this.getPageCoordinates(e);\n            _this.actionObj.X = pages.pageX;\n            _this.actionObj.Y = pages.pageY;\n            _this.actionObj.groupIndex = parseInt(_this.actionObj.element.getAttribute('data-group-index') || '0', 10);\n            _this.actionObj.interval = resizeEventArgs.interval;\n            _this.actionObj.scroll = resizeEventArgs.scroll;\n            _this.actionObj.start = new Date(eventObj[_this.parent.eventFields.startTime].getTime());\n            _this.actionObj.end = new Date(eventObj[_this.parent.eventFields.endTime].getTime());\n            _this.actionObj.originalElement = _this.getOriginalElement(_this.actionObj.element);\n            if (_this.parent.currentView === 'Month') {\n                _this.daysVariation = -1;\n                _this.monthEvent = new MonthEvent(_this.parent);\n            }\n            var viewElement = _this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n            _this.scrollArgs = { element: viewElement, width: viewElement.scrollWidth, height: viewElement.scrollHeight };\n            EventHandler.add(document, Browser.touchMoveEvent, _this.resizing, _this);\n            EventHandler.add(document, Browser.touchEndEvent, _this.resizeStop, _this);\n        });\n    };\n    Resize.prototype.resizing = function (e) {\n        if (this.parent.quickPopup) {\n            this.parent.quickPopup.quickPopupHide();\n        }\n        if (this.parent.element.querySelectorAll('.' + cls.RESIZE_CLONE_CLASS).length === 0) {\n            this.resizeHelper();\n        }\n        if ((!isNullOrUndefined(e.target)) && e.target.classList.contains(cls.DISABLE_DATES)) {\n            return;\n        }\n        var pages = this.getPageCoordinates(e);\n        this.actionObj.pageX = pages.pageX;\n        this.actionObj.pageY = pages.pageY;\n        this.updateScrollPosition(e);\n        this.updateResizingDirection(e);\n        var eventObj = extend({}, this.actionObj.event, null, true);\n        var resizeArgs = {\n            cancel: false,\n            data: eventObj,\n            element: this.actionObj.element,\n            event: e,\n            startTime: this.actionObj.start,\n            endTime: this.actionObj.end\n        };\n        if (this.parent.group.resources.length > 0) {\n            resizeArgs.groupIndex = this.actionObj.groupIndex;\n        }\n        this.parent.trigger(event.resizing, resizeArgs);\n    };\n    Resize.prototype.updateResizingDirection = function (e) {\n        if (this.parent.currentView === 'Month' || this.parent.currentView === 'TimelineYear') {\n            this.monthResizing();\n            return;\n        }\n        var resizeValidation = this.resizeValidation(e);\n        if (this.resizeEdges.left) {\n            if (resizeValidation) {\n                var leftStyles = this.getLeftRightStyles(e, true);\n                if (parseInt(leftStyles.width, 10) < 1) {\n                    return;\n                }\n                for (var _i = 0, _a = this.actionObj.cloneElement; _i < _a.length; _i++) {\n                    var cloneElement = _a[_i];\n                    setStyleAttribute(cloneElement, leftStyles);\n                    addClass([cloneElement], cls.LEFT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(!this.parent.enableRtl);\n        }\n        if (this.resizeEdges.right) {\n            if (resizeValidation) {\n                var rightStyles = this.getLeftRightStyles(e, false);\n                if (parseInt(rightStyles.width, 10) < 1) {\n                    return;\n                }\n                for (var _b = 0, _c = this.actionObj.cloneElement; _b < _c.length; _b++) {\n                    var cloneElement = _c[_b];\n                    setStyleAttribute(cloneElement, rightStyles);\n                    addClass([cloneElement], cls.RIGHT_RESIZE_HANDLER);\n                }\n            }\n            this.horizontalResizing(this.parent.enableRtl);\n        }\n        if (this.resizeEdges.top) {\n            if (resizeValidation) {\n                var topStyles = this.getTopBottomStyles(e, true);\n                if (parseInt(topStyles.height, 10) < 1) {\n                    return;\n                }\n                for (var _d = 0, _e = this.actionObj.cloneElement; _d < _e.length; _d++) {\n                    var cloneElement = _e[_d];\n                    setStyleAttribute(cloneElement, topStyles);\n                    addClass([cloneElement], cls.TOP_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(true);\n        }\n        if (this.resizeEdges.bottom) {\n            if (resizeValidation) {\n                var bottomStyles = this.getTopBottomStyles(e, false);\n                if (parseInt(bottomStyles.height, 10) < 1) {\n                    return;\n                }\n                for (var _f = 0, _g = this.actionObj.cloneElement; _f < _g.length; _f++) {\n                    var cloneElement = _g[_f];\n                    setStyleAttribute(cloneElement, bottomStyles);\n                    addClass([cloneElement], cls.BOTTOM_RESIZE_HANDLER);\n                }\n            }\n            this.verticalResizing(false);\n        }\n    };\n    Resize.prototype.monthResizing = function () {\n        this.removeCloneElement();\n        if (isNullOrUndefined(this.actionObj.pageX) || isNullOrUndefined(this.actionObj.pageY)) {\n            return;\n        }\n        var td = document.elementFromPoint(this.actionObj.pageX, this.actionObj.pageY);\n        if (isNullOrUndefined(td)) {\n            return;\n        }\n        var resizeTime = this.parent.getDateFromElement(td);\n        var isSameCell = this.parent.activeViewOptions.group.resources.length > 0 ?\n            parseInt(td.getAttribute('data-group-index'), 10) === this.actionObj.groupIndex : true;\n        var startTime = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var endTime = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        if ((!this.parent.enableRtl && this.resizeEdges.left) || (this.parent.enableRtl && this.resizeEdges.right)\n            || this.resizeEdges.top) {\n            startTime = resizeTime;\n        }\n        else if ((!this.parent.enableRtl && this.resizeEdges.right) || (this.parent.enableRtl && this.resizeEdges.left)\n            || this.resizeEdges.bottom) {\n            endTime = util.addDays(resizeTime, 1);\n        }\n        if (isSameCell && startTime < endTime) {\n            this.actionObj.start = startTime;\n            this.actionObj.end = endTime;\n            var event_1 = this.getUpdatedEvent(this.actionObj.start, this.actionObj.end, this.actionObj.event);\n            if (this.parent.currentView === 'TimelineYear') {\n                this.yearEventsRendering(event_1);\n            }\n            else {\n                this.dynamicEventsRendering(event_1);\n            }\n            this.updateOriginalElement(this.actionObj.clone);\n        }\n    };\n    Resize.prototype.yearEventsRendering = function (event) {\n        var eventWrappers = [].slice.call(this.parent.element.querySelectorAll('.' + cls.CLONE_ELEMENT_CLASS));\n        for (var _i = 0, eventWrappers_1 = eventWrappers; _i < eventWrappers_1.length; _i++) {\n            var wrapper = eventWrappers_1[_i];\n            remove(wrapper);\n        }\n        var endDate = new Date(event[this.parent.eventFields.endTime]);\n        var monthDiff = 0;\n        if (this.parent.activeViewOptions.group.resources.length === 0) {\n            monthDiff = this.getMonthDiff(event[this.parent.eventFields.startTime], util.addDays(endDate, -1));\n        }\n        for (var i = 0; i <= monthDiff; i++) {\n            var eventObj = void 0;\n            if (this.parent.activeViewOptions.group.resources.length === 0) {\n                eventObj = this.getEventCount(event, this.actionObj.start.getMonth() + i);\n            }\n            else {\n                eventObj = extend({}, event, null, true);\n                endDate = this.resizeEdges.left || this.resizeEdges.right ? util.addDays(endDate, -1) : endDate;\n                eventObj.count = this.getMonthDiff(event[this.parent.eventFields.startTime], endDate) + 1;\n            }\n            this.dynamicYearlyEventsRendering(eventObj, true);\n        }\n    };\n    Resize.prototype.getMonthDiff = function (startDate, endDate) {\n        var months;\n        months = (endDate.getFullYear() - startDate.getFullYear()) * 12;\n        months -= startDate.getMonth();\n        months += endDate.getMonth();\n        return months <= 0 ? 0 : months;\n    };\n    Resize.prototype.getEventCount = function (eventObj, month) {\n        var eventData = extend({}, eventObj, null, true);\n        var eventStart = eventData[this.parent.eventFields.startTime];\n        var eventEnd = eventData[this.parent.eventFields.endTime];\n        var monthStart = new Date(this.parent.selectedDate.getFullYear(), month, 1);\n        var monthEnd = util.addDays(new Date(this.parent.selectedDate.getFullYear(), month + 1, 0), 1);\n        var count = 1;\n        if (eventStart.getTime() < monthStart.getTime()) {\n            eventData[this.parent.eventFields.startTime] = monthStart;\n        }\n        if (eventEnd.getTime() > monthEnd.getTime()) {\n            eventData[this.parent.eventFields.endTime] = monthEnd;\n        }\n        if (this.parent.activeViewOptions.group.resources.length === 0) {\n            count = Math.ceil((eventData[this.parent.eventFields.endTime].getTime() -\n                eventData[this.parent.eventFields.startTime].getTime()) / util.MS_PER_DAY);\n        }\n        eventData.count = count;\n        return eventData;\n    };\n    Resize.prototype.resizeStop = function (e) {\n        var _this = this;\n        EventHandler.remove(document, Browser.touchMoveEvent, this.resizing);\n        EventHandler.remove(document, Browser.touchEndEvent, this.resizeStop);\n        clearInterval(this.actionObj.scrollInterval);\n        this.actionObj.scrollInterval = null;\n        this.removeCloneElementClasses();\n        this.removeCloneElement();\n        this.actionClass('removeClass');\n        this.parent.uiStateValues.action = false;\n        var resizeArgs = { cancel: false, data: this.getChangedData(), element: this.actionObj.element, event: e };\n        this.parent.trigger(event.resizeStop, resizeArgs, function (resizeEventArgs) {\n            if (resizeEventArgs.cancel) {\n                return;\n            }\n            if (_this.parent.isSpecificResourceEvents()) {\n                _this.parent.crudModule.crudObj.sourceEvent =\n                    [_this.parent.resourceBase.lastResourceLevel[parseInt(resizeEventArgs.element.getAttribute('data-group-index'), 10)]];\n                _this.parent.crudModule.crudObj.targetEvent = _this.parent.crudModule.crudObj.sourceEvent;\n                _this.parent.crudModule.crudObj.isCrudAction = true;\n            }\n            _this.saveChangedData(resizeEventArgs);\n        });\n    };\n    Resize.prototype.verticalResizing = function (isTop) {\n        var offsetValue = this.actionObj.clone.offsetTop;\n        if (!isTop) {\n            offsetValue += this.actionObj.clone.offsetHeight;\n        }\n        var minutes = (offsetValue / this.actionObj.cellHeight) * this.actionObj.slotInterval;\n        var element = this.actionObj.clone.offsetParent;\n        if (isNullOrUndefined(element)) {\n            return;\n        }\n        var resizeTime = util.resetTime(this.parent.getDateFromElement(element));\n        resizeTime.setHours(this.parent.activeView.getStartHour().getHours());\n        resizeTime.setMinutes(minutes + this.parent.activeView.getStartHour().getMinutes());\n        if (isTop) {\n            this.actionObj.start = this.calculateIntervalTime(resizeTime);\n        }\n        else {\n            this.actionObj.end = this.calculateIntervalTime(resizeTime);\n        }\n        this.updateTimePosition(resizeTime);\n    };\n    Resize.prototype.horizontalResizing = function (isLeft) {\n        var eventStart = new Date(this.actionObj.event[this.parent.eventFields.startTime].getTime());\n        var eventEnd = new Date(this.actionObj.event[this.parent.eventFields.endTime].getTime());\n        var resizeTime;\n        var isDateHeader = false;\n        var headerName = this.parent.currentView;\n        var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1;\n        var isTimelineMonth = this.parent.currentView === 'TimelineMonth';\n        var isWithoutScale = isTimelineMonth || isTimeViews && !this.parent.activeViewOptions.timeScale.enable;\n        if (this.parent.activeView.isTimelineView()) {\n            var tr = this.parent.getContentTable().querySelector('tr');\n            if (this.parent.activeViewOptions.headerRows.length > 0) {\n                var rows = this.parent.activeViewOptions.headerRows.map(function (row) { return row.option; });\n                headerName = rows.slice(-1)[0];\n                if (isTimelineMonth && headerName === 'Hour') {\n                    headerName = rows.slice(-2)[0] || 'Month';\n                }\n            }\n            resizeTime = isLeft ? eventStart : eventEnd;\n            var cellIndex = 0;\n            var tdCollections = [].slice.call(tr.children);\n            var isLastCell = false;\n            var pixelsPerMinute = this.actionObj.cellWidth / (this.parent.activeViewOptions.timeScale.interval /\n                this.parent.activeViewOptions.timeScale.slotCount);\n            var offset = parseFloat(this.parent.enableRtl ? this.actionObj.clone.style.right :\n                this.actionObj.clone.style.left);\n            offset = Math.round(offset / pixelsPerMinute) * pixelsPerMinute;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                var noOfDays = 0;\n                for (var _i = 0, tdCollections_2 = tdCollections; _i < tdCollections_2.length; _i++) {\n                    var td = tdCollections_2[_i];\n                    noOfDays += parseInt(td.getAttribute('colspan'), 10);\n                }\n                var offsetValue = this.parent.enableRtl ? parseInt(this.actionObj.clone.style.right, 10) :\n                    parseInt(this.actionObj.clone.style.left, 10);\n                offsetValue = Math.round(offsetValue / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n                if (!isLeft) {\n                    offsetValue += (this.actionObj.clone.getBoundingClientRect().width - this.actionObj.cellWidth);\n                }\n                cellIndex = Math.floor(offsetValue / Math.floor(tr.getBoundingClientRect().width / noOfDays));\n                isDateHeader = isTimeViews && headerName === 'Date';\n                cellIndex = isLeft ? cellIndex : isTimelineMonth ? cellIndex + 1 : cellIndex;\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = (cellIndex < 0) ? 0 : (cellIndex >= noOfDays) ? noOfDays - 1 : cellIndex;\n            }\n            else {\n                var cellWidth = this.actionObj.cellWidth;\n                cellIndex = isLeft ? Math.floor(offset / this.actionObj.cellWidth) :\n                    Math.ceil((offset + (this.actionObj.clone.getBoundingClientRect().width - cellWidth)) / this.actionObj.cellWidth);\n                if (this.parent.enableRtl) {\n                    var cellOffsetWidth = 0;\n                    if (headerName === 'TimelineMonth' || (!this.parent.activeViewOptions.timeScale.enable &&\n                        !isTimelineMonth)) {\n                        cellOffsetWidth = this.actionObj.cellWidth;\n                    }\n                    var offsetWidth = (Math.floor(offset / this.actionObj.cellWidth) *\n                        this.actionObj.cellWidth) + (isLeft ? 0 : this.actionObj.clone.getBoundingClientRect().width - cellOffsetWidth);\n                    cellIndex = Math.floor(offsetWidth / this.actionObj.cellWidth);\n                }\n                isLastCell = cellIndex === tdCollections.length;\n                cellIndex = this.getIndex(cellIndex);\n            }\n            var resizeDate = void 0;\n            if (['Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1) {\n                resizeDate = new Date(this.parent.activeView.renderDates[cellIndex].getTime());\n            }\n            else {\n                resizeDate = this.parent.getDateFromElement(tr.children[cellIndex]);\n            }\n            if (['TimelineMonth', 'Year', 'Month', 'Week', 'Date'].indexOf(headerName) !== -1 ||\n                !this.parent.activeViewOptions.timeScale.enable) {\n                resizeTime = new Date(resizeDate.setHours(resizeTime.getHours(), resizeTime.getMinutes(), resizeTime.getSeconds()));\n            }\n            else {\n                if (!isLeft) {\n                    offset += this.actionObj.clone.getBoundingClientRect().width;\n                }\n                var spanMinutes = Math.ceil((this.actionObj.slotInterval / this.actionObj.cellWidth) *\n                    (offset - Math.floor(offset / this.actionObj.cellWidth) * this.actionObj.cellWidth));\n                spanMinutes = (isLastCell || (!isLeft && spanMinutes === 0)) ? this.actionObj.slotInterval : spanMinutes;\n                resizeTime = new Date(resizeDate.getTime());\n                resizeTime.setMinutes(resizeTime.getMinutes() + spanMinutes);\n                this.updateTimePosition(resizeTime);\n            }\n        }\n        else {\n            var cloneIndex = closest(this.actionObj.clone, 'td').cellIndex;\n            var originalWidth = Math.ceil((isLeft ? this.actionObj.element.getBoundingClientRect().width : 0) /\n                this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            var noOfDays = Math.ceil((this.actionObj.clone.getBoundingClientRect().width - originalWidth) /\n                this.actionObj.cellWidth);\n            var tr = closest(this.actionObj.clone, 'tr');\n            var dayIndex = isLeft ? cloneIndex - noOfDays : cloneIndex + noOfDays - 1;\n            dayIndex = this.getIndex(dayIndex);\n            resizeTime = this.parent.getDateFromElement(tr.children[dayIndex]);\n            if (isLeft) {\n                resizeTime.setHours(eventStart.getHours(), eventStart.getMinutes(), eventStart.getSeconds());\n            }\n            else {\n                resizeTime.setHours(eventEnd.getHours(), eventEnd.getMinutes(), eventEnd.getSeconds());\n            }\n        }\n        if (isLeft) {\n            if ((eventEnd.getTime() - resizeTime.getTime()) <= 0) {\n                resizeTime = isWithoutScale ? util.resetTime(eventEnd) : eventStart;\n            }\n            this.actionObj.start = this.parent.activeViewOptions.timeScale.enable ? this.calculateIntervalTime(resizeTime) : resizeTime;\n        }\n        else {\n            var isTimeScaleViews = isTimeViews && this.parent.activeViewOptions.timeScale.enable;\n            var resizeEnd = ((!isTimeScaleViews || isDateHeader || isTimeViews && ['Week', 'Month', 'Year'].indexOf(headerName) > -1)\n                && resizeTime.getHours() === 0 && resizeTime.getMinutes() === 0) ? util.addDays(resizeTime, 1) : resizeTime;\n            if (isWithoutScale && (resizeEnd.getTime() - eventStart.getTime()) <= 0) {\n                resizeEnd = util.addDays(util.resetTime(eventStart), 1);\n            }\n            this.actionObj.end = this.parent.activeViewOptions.timeScale.enable && this.parent.currentView !== 'Month' ?\n                this.calculateIntervalTime(resizeEnd) : resizeEnd;\n        }\n    };\n    Resize.prototype.getTopBottomStyles = function (e, isTop) {\n        var viewElement = this.parent.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n        var slotInterval = (this.actionObj.cellHeight / this.actionObj.slotInterval) * this.actionObj.interval;\n        var clnHeight = isTop ? this.actionObj.element.offsetHeight + (this.actionObj.Y - this.actionObj.pageY) :\n            this.actionObj.element.offsetHeight + (this.actionObj.pageY - this.actionObj.Y);\n        var clnTop = isTop ? this.actionObj.element.offsetTop -\n            (this.actionObj.Y - this.actionObj.pageY) : this.actionObj.clone.offsetTop;\n        clnHeight = (clnTop < 0) ? this.actionObj.clone.offsetHeight :\n            (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) > this.scrollArgs.height ?\n                this.actionObj.clone.offsetHeight : clnHeight;\n        clnTop = (clnTop < 0) ? 0 : clnTop;\n        clnTop = isTop ? Math.floor(clnTop / slotInterval) * slotInterval : clnTop;\n        clnHeight = clnTop + clnHeight >= viewElement.scrollHeight ? viewElement.scrollHeight - clnTop :\n            Math.ceil(clnHeight / slotInterval) * slotInterval;\n        var styles = {\n            height: formatUnit(clnHeight < this.actionObj.cellHeight ? Math.floor(clnHeight / slotInterval) * slotInterval : clnHeight),\n            top: formatUnit((clnHeight < this.actionObj.cellHeight && isTop) ? Math.ceil(clnTop / slotInterval) * slotInterval : clnTop),\n            left: '0px', right: '0px', width: '100%'\n        };\n        return styles;\n    };\n    Resize.prototype.getLeftRightStyles = function (e, isLeft) {\n        var styles = {};\n        var isTimelineView = this.parent.activeView.isTimelineView();\n        var isTimeViews = ['TimelineDay', 'TimelineWeek', 'TimelineWorkWeek'].indexOf(this.parent.currentView) > -1 &&\n            this.parent.activeViewOptions.timeScale.enable;\n        var slotInterval = (this.actionObj.cellWidth / this.actionObj.slotInterval) * this.actionObj.interval;\n        var pageWidth = isLeft ? (this.actionObj.X - this.actionObj.pageX) : (this.actionObj.pageX - this.actionObj.X);\n        var targetWidth = isTimelineView ?\n            (this.actionObj.element.getBoundingClientRect().width / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n            this.parent.currentView === 'Month' ? this.actionObj.element.getBoundingClientRect().width :\n                Math.ceil(this.actionObj.element.getBoundingClientRect().width / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n        var offsetWidth = targetWidth + (Math.ceil(pageWidth / this.actionObj.cellWidth) * this.actionObj.cellWidth);\n        var left = (this.parent.enableRtl) ? parseInt(this.actionObj.element.style.right, 10) : this.actionObj.clone.offsetLeft;\n        if (isTimeViews) {\n            offsetWidth = targetWidth + (Math.ceil(pageWidth / slotInterval) * slotInterval);\n            offsetWidth = (Math.round((left + offsetWidth) / slotInterval) * slotInterval) - left;\n            this.actionObj.event[this.parent.eventFields.isAllDay] = false;\n        }\n        var width = !isLeft && ((offsetWidth + this.actionObj.clone.offsetLeft > this.scrollArgs.width)) ?\n            this.actionObj.clone.getBoundingClientRect().width : (offsetWidth < this.actionObj.cellWidth) ? offsetWidth : offsetWidth;\n        if (this.parent.enableRtl) {\n            var rightValue = isTimelineView ? parseInt(this.actionObj.element.style.right, 10) :\n                -(offsetWidth - this.actionObj.cellWidth);\n            rightValue = isTimelineView ? rightValue : isLeft ? 0 : rightValue > 0 ? 0 : rightValue;\n            if (isTimelineView && !isLeft) {\n                rightValue = Math.ceil((this.actionObj.element.offsetLeft + (this.actionObj.element.getBoundingClientRect().width +\n                    (this.actionObj.pageX - this.actionObj.X))) / slotInterval) * slotInterval;\n                rightValue = rightValue < 0 ? Math.abs(rightValue) : -rightValue;\n            }\n            rightValue = rightValue >= this.scrollArgs.width ? this.scrollArgs.width - this.actionObj.cellWidth : rightValue;\n            styles.right = formatUnit(rightValue);\n            width = width + rightValue > this.scrollArgs.width ? this.actionObj.clone.getBoundingClientRect().width : width;\n        }\n        else {\n            var offsetLeft = isLeft ? this.actionObj.element.offsetLeft - (this.actionObj.X - this.actionObj.pageX) :\n                this.parent.enableRtl ? this.actionObj.element.offsetLeft : 0;\n            if (isTimelineView) {\n                offsetLeft = isLeft ? offsetLeft : parseInt(this.actionObj.clone.style.left, 10);\n                if (this.parent.enableRtl) {\n                    offsetLeft = !isLeft ? (this.actionObj.pageX < this.actionObj.X - this.actionObj.clone.getBoundingClientRect().width)\n                        ? parseInt(this.actionObj.clone.style.right, 10) : offsetLeft : offsetLeft;\n                }\n                else {\n                    offsetLeft = isLeft ? (this.actionObj.pageX > this.actionObj.X + this.actionObj.clone.getBoundingClientRect().width &&\n                        this.actionObj.clone.getBoundingClientRect().width === this.actionObj.cellWidth) ?\n                        parseInt(this.actionObj.clone.style.left, 10) : offsetLeft : offsetLeft;\n                }\n            }\n            var leftValue = offsetLeft;\n            offsetLeft = isTimelineView ? isTimeViews ? isLeft ? Math.floor(offsetLeft / slotInterval) * slotInterval : offsetLeft :\n                Math.floor(offsetLeft / this.actionObj.cellWidth) * this.actionObj.cellWidth :\n                Math.ceil(Math.abs(offsetLeft) / this.actionObj.cellWidth) * this.actionObj.cellWidth;\n            if (offsetLeft < 0) {\n                offsetLeft = 0;\n                width = this.actionObj.clone.getBoundingClientRect().width;\n            }\n            var cloneWidth = Math.ceil(this.actionObj.clone.getBoundingClientRect().width / this.actionObj.cellWidth) *\n                this.actionObj.cellWidth;\n            if (isLeft) {\n                styles.left = formatUnit(isTimelineView ? offsetLeft : isLeft ? leftValue < 0 ? -offsetLeft :\n                    (Math.ceil((targetWidth - cloneWidth) / this.actionObj.cellWidth) * this.actionObj.cellWidth) : offsetLeft);\n            }\n        }\n        styles.width = formatUnit(width);\n        return styles;\n    };\n    Resize.prototype.resizeValidation = function (e) {\n        var pages = this.getPageCoordinates(e);\n        var viewDimension = this.getContentAreaDimension();\n        var isTimeScale = this.parent.activeView.isTimelineView() && this.parent.activeViewOptions.timeScale.enable;\n        var cellWidth = this.actionObj.cellWidth;\n        var resizeValidation = false;\n        if (this.resizeEdges.left) {\n            if (pages.pageX < viewDimension.leftOffset && pages.pageX >= viewDimension.left && isTimeScale) {\n                cellWidth = 0;\n            }\n            resizeValidation = (pages.pageX - cellWidth) >= viewDimension.left;\n        }\n        if (this.resizeEdges.right) {\n            if (pages.pageX > viewDimension.rightOffset && pages.pageX <= viewDimension.right && isTimeScale) {\n                cellWidth = 0;\n            }\n            resizeValidation = (pages.pageX + cellWidth) <= viewDimension.right;\n        }\n        if (this.resizeEdges.top) {\n            resizeValidation = this.actionObj.clone.offsetTop >= viewDimension.top;\n        }\n        if (this.resizeEdges.bottom) {\n            resizeValidation = (this.actionObj.clone.offsetTop + this.actionObj.clone.offsetHeight) <= this.scrollArgs.height;\n        }\n        return resizeValidation;\n    };\n    /**\n     * Get module name\n     *\n     * @returns {string} Returns the module name..\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    return Resize;\n}(ActionBase));\nexport { Resize };\n"]},"metadata":{},"sourceType":"module"}