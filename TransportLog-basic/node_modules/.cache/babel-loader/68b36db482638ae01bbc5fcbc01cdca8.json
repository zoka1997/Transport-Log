{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Excel Export Module\n */\n\nvar ExcelExport =\n/** @class */\nfunction () {\n  function ExcelExport(parent) {\n    this.parent = parent;\n  }\n\n  ExcelExport.prototype.initializeExcelExport = function (excelExportOptions) {\n    if (excelExportOptions === void 0) {\n      excelExportOptions = {};\n    }\n\n    var exportColumns = this.getExportColumns(excelExportOptions);\n    var exportName = excelExportOptions.fileName || 'Schedule';\n    var exportType = excelExportOptions.exportType || 'xlsx';\n    var isIncludeOccurrences = excelExportOptions.includeOccurrences || false;\n    var separator;\n\n    if (!isNullOrUndefined(excelExportOptions.separator) && excelExportOptions.separator !== ',') {\n      separator = excelExportOptions.separator;\n    }\n\n    var eventCollection;\n\n    if (excelExportOptions.customData) {\n      eventCollection = !isIncludeOccurrences ? excelExportOptions.customData : this.parent.eventBase.getProcessedEvents(excelExportOptions.customData);\n    } else {\n      eventCollection = !isIncludeOccurrences ? this.parent.eventsData : this.parent.eventsProcessed;\n    }\n\n    this.processWorkbook(exportColumns, exportName, exportType, eventCollection, separator);\n  };\n\n  ExcelExport.prototype.processWorkbook = function (fields, name, type, eventCollection, separator) {\n    var _this = this;\n\n    var columns = [];\n    var rows = [];\n    var columnHeader = [];\n    fields.forEach(function (field, i) {\n      columns.push({\n        index: i + 1,\n        width: field.name === 'Id' ? 50 : 150\n      });\n    });\n    var style = {\n      fontSize: 12,\n      borders: {\n        color: '#E0E0E0'\n      },\n      bold: true\n    };\n    fields.forEach(function (field, i) {\n      columnHeader.push({\n        index: i + 1,\n        value: field.text,\n        style: style\n      });\n    });\n    rows.push({\n      index: 1,\n      cells: columnHeader\n    });\n    eventCollection.forEach(function (event, i) {\n      var columnData = [];\n      fields.forEach(function (field, n) {\n        var columnRule = {\n          index: n + 1,\n          value: event[field.name] || ''\n        };\n\n        if (field.name === _this.parent.eventFields.startTime || field.name === _this.parent.eventFields.endTime) {\n          var styleRule = {\n            fontSize: 12,\n            numberFormat: 'm/d/yyyy h:mm AM/PM'\n          };\n          columnRule = extend({}, columnRule, {\n            style: styleRule\n          }, true);\n        }\n\n        columnData.push(columnRule);\n      });\n      rows.push({\n        index: i + 2,\n        cells: columnData\n      });\n    });\n    var workSheet = [{\n      columns: columns,\n      rows: rows\n    }];\n    var book = new Workbook({\n      worksheets: workSheet\n    }, type, this.parent.locale, undefined, separator);\n    book.save(name + '.' + type);\n  };\n\n  ExcelExport.prototype.getExportColumns = function (exportOptions) {\n    var _this = this;\n\n    var exportColumns = exportOptions.fieldsInfo || [];\n\n    if (exportColumns.length === 0) {\n      var fields = exportOptions.fields || Object.keys(this.parent.eventFields).map(function (field) {\n        return _this.parent.eventFields[field];\n      });\n      fields.forEach(function (field) {\n        exportColumns.push({\n          name: field,\n          text: field\n        });\n      });\n    }\n\n    return exportColumns;\n  };\n\n  ExcelExport.prototype.getModuleName = function () {\n    return 'excelExport';\n  };\n\n  ExcelExport.prototype.destroy = function () {\n    this.parent = null;\n  };\n\n  return ExcelExport;\n}();\n\nexport { ExcelExport };","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/@syncfusion/ej2-schedule/src/schedule/exports/excel-export.js"],"names":["Workbook","extend","isNullOrUndefined","ExcelExport","parent","prototype","initializeExcelExport","excelExportOptions","exportColumns","getExportColumns","exportName","fileName","exportType","isIncludeOccurrences","includeOccurrences","separator","eventCollection","customData","eventBase","getProcessedEvents","eventsData","eventsProcessed","processWorkbook","fields","name","type","_this","columns","rows","columnHeader","forEach","field","i","push","index","width","style","fontSize","borders","color","bold","value","text","cells","event","columnData","n","columnRule","eventFields","startTime","endTime","styleRule","numberFormat","workSheet","book","worksheets","locale","undefined","save","exportOptions","fieldsInfo","length","Object","keys","map","getModuleName","destroy"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,8BAAzB;AACA,SAASC,MAAT,EAAiBC,iBAAjB,QAA0C,sBAA1C;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,CAAqBC,MAArB,EAA6B;AACzB,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACDD,EAAAA,WAAW,CAACE,SAAZ,CAAsBC,qBAAtB,GAA8C,UAAUC,kBAAV,EAA8B;AACxE,QAAIA,kBAAkB,KAAK,KAAK,CAAhC,EAAmC;AAAEA,MAAAA,kBAAkB,GAAG,EAArB;AAA0B;;AAC/D,QAAIC,aAAa,GAAG,KAAKC,gBAAL,CAAsBF,kBAAtB,CAApB;AACA,QAAIG,UAAU,GAAGH,kBAAkB,CAACI,QAAnB,IAA+B,UAAhD;AACA,QAAIC,UAAU,GAAGL,kBAAkB,CAACK,UAAnB,IAAiC,MAAlD;AACA,QAAIC,oBAAoB,GAAGN,kBAAkB,CAACO,kBAAnB,IAAyC,KAApE;AACA,QAAIC,SAAJ;;AACA,QAAI,CAACb,iBAAiB,CAACK,kBAAkB,CAACQ,SAApB,CAAlB,IAAoDR,kBAAkB,CAACQ,SAAnB,KAAiC,GAAzF,EAA8F;AAC1FA,MAAAA,SAAS,GAAGR,kBAAkB,CAACQ,SAA/B;AACH;;AACD,QAAIC,eAAJ;;AACA,QAAIT,kBAAkB,CAACU,UAAvB,EAAmC;AAC/BD,MAAAA,eAAe,GAAG,CAACH,oBAAD,GAAwBN,kBAAkB,CAACU,UAA3C,GACd,KAAKb,MAAL,CAAYc,SAAZ,CAAsBC,kBAAtB,CAAyCZ,kBAAkB,CAACU,UAA5D,CADJ;AAEH,KAHD,MAIK;AACDD,MAAAA,eAAe,GAAG,CAACH,oBAAD,GAAwB,KAAKT,MAAL,CAAYgB,UAApC,GAAiD,KAAKhB,MAAL,CAAYiB,eAA/E;AACH;;AACD,SAAKC,eAAL,CAAqBd,aAArB,EAAoCE,UAApC,EAAgDE,UAAhD,EAA4DI,eAA5D,EAA6ED,SAA7E;AACH,GAnBD;;AAoBAZ,EAAAA,WAAW,CAACE,SAAZ,CAAsBiB,eAAtB,GAAwC,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BT,eAA9B,EAA+CD,SAA/C,EAA0D;AAC9F,QAAIW,KAAK,GAAG,IAAZ;;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,YAAY,GAAG,EAAnB;AACAN,IAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AAAEL,MAAAA,OAAO,CAACM,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAEF,CAAC,GAAG,CAAb;AAAgBG,QAAAA,KAAK,EAAGJ,KAAK,CAACP,IAAN,KAAe,IAAf,GAAsB,EAAtB,GAA2B;AAAnD,OAAb;AAA0E,KAA/G;AACA,QAAIY,KAAK,GAAG;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAzB;AAA+CC,MAAAA,IAAI,EAAE;AAArD,KAAZ;AACAjB,IAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;AAAEH,MAAAA,YAAY,CAACI,IAAb,CAAkB;AAAEC,QAAAA,KAAK,EAAEF,CAAC,GAAG,CAAb;AAAgBS,QAAAA,KAAK,EAAEV,KAAK,CAACW,IAA7B;AAAmCN,QAAAA,KAAK,EAAEA;AAA1C,OAAlB;AAAuE,KAA5G;AACAR,IAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYS,MAAAA,KAAK,EAAEd;AAAnB,KAAV;AACAb,IAAAA,eAAe,CAACc,OAAhB,CAAwB,UAAUc,KAAV,EAAiBZ,CAAjB,EAAoB;AACxC,UAAIa,UAAU,GAAG,EAAjB;AACAtB,MAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,KAAV,EAAiBe,CAAjB,EAAoB;AAC/B,YAAIC,UAAU,GAAG;AAAEb,UAAAA,KAAK,EAAEY,CAAC,GAAG,CAAb;AAAgBL,UAAAA,KAAK,EAAEG,KAAK,CAACb,KAAK,CAACP,IAAP,CAAL,IAAqB;AAA5C,SAAjB;;AACA,YAAIO,KAAK,CAACP,IAAN,KAAeE,KAAK,CAACtB,MAAN,CAAa4C,WAAb,CAAyBC,SAAxC,IAAqDlB,KAAK,CAACP,IAAN,KAAeE,KAAK,CAACtB,MAAN,CAAa4C,WAAb,CAAyBE,OAAjG,EAA0G;AACtG,cAAIC,SAAS,GAAG;AAAEd,YAAAA,QAAQ,EAAE,EAAZ;AAAgBe,YAAAA,YAAY,EAAE;AAA9B,WAAhB;AACAL,UAAAA,UAAU,GAAG9C,MAAM,CAAC,EAAD,EAAK8C,UAAL,EAAiB;AAAEX,YAAAA,KAAK,EAAEe;AAAT,WAAjB,EAAuC,IAAvC,CAAnB;AACH;;AACDN,QAAAA,UAAU,CAACZ,IAAX,CAAgBc,UAAhB;AACH,OAPD;AAQAnB,MAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,QAAAA,KAAK,EAAEF,CAAC,GAAG,CAAb;AAAgBW,QAAAA,KAAK,EAAEE;AAAvB,OAAV;AACH,KAXD;AAYA,QAAIQ,SAAS,GAAG,CAAC;AAAE1B,MAAAA,OAAO,EAAEA,OAAX;AAAoBC,MAAAA,IAAI,EAAEA;AAA1B,KAAD,CAAhB;AACA,QAAI0B,IAAI,GAAG,IAAItD,QAAJ,CAAa;AAAEuD,MAAAA,UAAU,EAAEF;AAAd,KAAb,EAAwC5B,IAAxC,EAA8C,KAAKrB,MAAL,CAAYoD,MAA1D,EAAkEC,SAAlE,EAA6E1C,SAA7E,CAAX;AACAuC,IAAAA,IAAI,CAACI,IAAL,CAAUlC,IAAI,GAAG,GAAP,GAAaC,IAAvB;AACH,GAxBD;;AAyBAtB,EAAAA,WAAW,CAACE,SAAZ,CAAsBI,gBAAtB,GAAyC,UAAUkD,aAAV,EAAyB;AAC9D,QAAIjC,KAAK,GAAG,IAAZ;;AACA,QAAIlB,aAAa,GAAGmD,aAAa,CAACC,UAAd,IAA4B,EAAhD;;AACA,QAAIpD,aAAa,CAACqD,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,UAAItC,MAAM,GAAGoC,aAAa,CAACpC,MAAd,IAAwBuC,MAAM,CAACC,IAAP,CAAY,KAAK3D,MAAL,CAAY4C,WAAxB,EAAqCgB,GAArC,CAAyC,UAAUjC,KAAV,EAAiB;AAC3F,eAAOL,KAAK,CAACtB,MAAN,CAAa4C,WAAb,CAAyBjB,KAAzB,CAAP;AACH,OAFoC,CAArC;AAGAR,MAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAAEvB,QAAAA,aAAa,CAACyB,IAAd,CAAmB;AAAET,UAAAA,IAAI,EAAEO,KAAR;AAAeW,UAAAA,IAAI,EAAEX;AAArB,SAAnB;AAAmD,OAArF;AACH;;AACD,WAAOvB,aAAP;AACH,GAVD;;AAWAL,EAAAA,WAAW,CAACE,SAAZ,CAAsB4D,aAAtB,GAAsC,YAAY;AAC9C,WAAO,aAAP;AACH,GAFD;;AAGA9D,EAAAA,WAAW,CAACE,SAAZ,CAAsB6D,OAAtB,GAAgC,YAAY;AACxC,SAAK9D,MAAL,GAAc,IAAd;AACH,GAFD;;AAGA,SAAOD,WAAP;AACH,CAnEgC,EAAjC;;AAoEA,SAASA,WAAT","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Excel Export Module\n */\nvar ExcelExport = /** @class */ (function () {\n    function ExcelExport(parent) {\n        this.parent = parent;\n    }\n    ExcelExport.prototype.initializeExcelExport = function (excelExportOptions) {\n        if (excelExportOptions === void 0) { excelExportOptions = {}; }\n        var exportColumns = this.getExportColumns(excelExportOptions);\n        var exportName = excelExportOptions.fileName || 'Schedule';\n        var exportType = excelExportOptions.exportType || 'xlsx';\n        var isIncludeOccurrences = excelExportOptions.includeOccurrences || false;\n        var separator;\n        if (!isNullOrUndefined(excelExportOptions.separator) && excelExportOptions.separator !== ',') {\n            separator = excelExportOptions.separator;\n        }\n        var eventCollection;\n        if (excelExportOptions.customData) {\n            eventCollection = !isIncludeOccurrences ? excelExportOptions.customData :\n                this.parent.eventBase.getProcessedEvents(excelExportOptions.customData);\n        }\n        else {\n            eventCollection = !isIncludeOccurrences ? this.parent.eventsData : this.parent.eventsProcessed;\n        }\n        this.processWorkbook(exportColumns, exportName, exportType, eventCollection, separator);\n    };\n    ExcelExport.prototype.processWorkbook = function (fields, name, type, eventCollection, separator) {\n        var _this = this;\n        var columns = [];\n        var rows = [];\n        var columnHeader = [];\n        fields.forEach(function (field, i) { columns.push({ index: i + 1, width: (field.name === 'Id' ? 50 : 150) }); });\n        var style = { fontSize: 12, borders: { color: '#E0E0E0' }, bold: true };\n        fields.forEach(function (field, i) { columnHeader.push({ index: i + 1, value: field.text, style: style }); });\n        rows.push({ index: 1, cells: columnHeader });\n        eventCollection.forEach(function (event, i) {\n            var columnData = [];\n            fields.forEach(function (field, n) {\n                var columnRule = { index: n + 1, value: event[field.name] || '' };\n                if (field.name === _this.parent.eventFields.startTime || field.name === _this.parent.eventFields.endTime) {\n                    var styleRule = { fontSize: 12, numberFormat: 'm/d/yyyy h:mm AM/PM' };\n                    columnRule = extend({}, columnRule, { style: styleRule }, true);\n                }\n                columnData.push(columnRule);\n            });\n            rows.push({ index: i + 2, cells: columnData });\n        });\n        var workSheet = [{ columns: columns, rows: rows }];\n        var book = new Workbook({ worksheets: workSheet }, type, this.parent.locale, undefined, separator);\n        book.save(name + '.' + type);\n    };\n    ExcelExport.prototype.getExportColumns = function (exportOptions) {\n        var _this = this;\n        var exportColumns = exportOptions.fieldsInfo || [];\n        if (exportColumns.length === 0) {\n            var fields = exportOptions.fields || Object.keys(this.parent.eventFields).map(function (field) {\n                return _this.parent.eventFields[field];\n            });\n            fields.forEach(function (field) { exportColumns.push({ name: field, text: field }); });\n        }\n        return exportColumns;\n    };\n    ExcelExport.prototype.getModuleName = function () {\n        return 'excelExport';\n    };\n    ExcelExport.prototype.destroy = function () {\n        this.parent = null;\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n"]},"metadata":{},"sourceType":"module"}