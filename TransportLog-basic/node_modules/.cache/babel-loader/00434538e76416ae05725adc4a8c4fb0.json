{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Page } from \"./page\";\nimport { PAGER_INFO_CLASS } from \"../info\";\nimport { NumberBox } from \"../../editors/number_box\";\nimport messageLocalization from \"../../../../localization/message\";\nimport { calculateValuesFittedWidth } from \"../utils/calculate_values_fitted_width\";\nimport { getElementMinWidth } from \"../utils/get_element_width\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\nexport var viewFunction = _ref => {\n  var {\n    pageIndexRef: pageIndexRef,\n    pagesCountText: pagesCountText,\n    props: {\n      pageCount: pageCount\n    },\n    selectLastPageIndex: selectLastPageIndex,\n    value: value,\n    valueChange: valueChange,\n    width: width\n  } = _ref;\n  return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\n    className: PAGER_PAGE_INDEX_CLASS,\n    min: 1,\n    max: pageCount,\n    width: width,\n    value: value,\n    valueChange: valueChange\n  }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\n    className: PAGER_PAGES_COUNT_CLASS,\n    selected: false,\n    index: pageCount - 1,\n    onClick: selectLastPageIndex\n  })], 4, null, null, pageIndexRef);\n};\nvar PagerSmallProps = {\n  get pageIndex() {\n    return InternalPagerProps.pageIndex;\n  },\n\n  get pageCount() {\n    return InternalPagerProps.pageCount;\n  }\n\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class PagesSmall extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.pageIndexRef = infernoCreateRef();\n    this.state = {\n      minWidth: 10\n    };\n    this.updateWidth = this.updateWidth.bind(this);\n    this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\n    this.valueChange = this.valueChange.bind(this);\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.updateWidth, [this.state.minWidth])];\n  }\n\n  updateEffects() {\n    var _this$_effects$;\n\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth]);\n  }\n\n  updateWidth() {\n    var _this$pageIndexRef$cu;\n\n    var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\n    this.setState(__state_argument => ({\n      minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\n    }));\n  }\n\n  get value() {\n    return this.props.pageIndex + 1;\n  }\n\n  get width() {\n    var {\n      pageCount: pageCount\n    } = this.props;\n    return calculateValuesFittedWidth(this.state.minWidth, [pageCount]);\n  }\n\n  get pagesCountText() {\n    var _this$props$pagesCoun;\n\n    return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")();\n  }\n\n  selectLastPageIndex() {\n    this.props.pageIndexChange(this.props.pageCount - 1);\n  }\n\n  valueChange(value) {\n    this.props.pageIndexChange(value - 1);\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      pageIndexRef: this.pageIndexRef,\n      value: this.value,\n      width: this.width,\n      pagesCountText: this.pagesCountText,\n      selectLastPageIndex: this.selectLastPageIndex,\n      valueChange: this.valueChange,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nPagesSmall.defaultProps = PagerSmallProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/pager/pages/small.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","createComponentVNode","InfernoEffect","InfernoComponent","Page","PAGER_INFO_CLASS","NumberBox","messageLocalization","calculateValuesFittedWidth","getElementMinWidth","InternalPagerProps","PAGER_INFO_TEXT_CLASS","concat","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","viewFunction","_ref","pageIndexRef","pagesCountText","props","pageCount","selectLastPageIndex","value","valueChange","width","className","min","max","selected","index","onClick","PagerSmallProps","pageIndex","createRef","infernoCreateRef","PagesSmall","constructor","state","minWidth","updateWidth","bind","createEffects","updateEffects","_this$_effects$","_effects","update","_this$pageIndexRef$cu","el","current","querySelector","setState","__state_argument","_this$props$pagesCoun","getFormatter","pageIndexChange","restAttributes","_this$props","restProps","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n"]},"metadata":{},"sourceType":"module"}