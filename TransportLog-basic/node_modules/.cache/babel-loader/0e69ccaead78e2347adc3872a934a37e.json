{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"isChecked\", \"size\"];\nimport { createVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\nimport { hasWindow } from \"../../../../core/utils/window\";\nimport { normalizeStyleProp } from \"../../../../core/utils/style\";\nimport { isNumeric as isNumber } from \"../../../../core/utils/type\";\nimport { getFontSizeByIconSize } from \"./utils\";\nexport var viewFunction = viewModel => {\n  var {\n    cssStyles: cssStyles,\n    elementRef: elementRef\n  } = viewModel;\n  return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\n    style: normalizeStyles(cssStyles)\n  }, null, elementRef);\n};\nexport var CheckBoxIconProps = {\n  isChecked: false\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport class CheckBoxIcon extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.elementRef = infernoCreateRef();\n    this.__getterCache = {};\n    this.updateFontSize = this.updateFontSize.bind(this);\n    this.setIconFontSize = this.setIconFontSize.bind(this);\n    this.getIconSize = this.getIconSize.bind(this);\n    this.getComputedIconSize = this.getComputedIconSize.bind(this);\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])];\n  }\n\n  updateEffects() {\n    var _this$_effects$;\n\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size]);\n  }\n\n  updateFontSize() {\n    var {\n      isChecked: isChecked,\n      size: size\n    } = this.props;\n\n    if (hasWindow() && size) {\n      var newIconSize = this.getIconSize(size);\n      var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\n      this.setIconFontSize(newFontSize);\n    }\n  }\n\n  setIconFontSize(fontSize) {\n    var element = this.elementRef.current;\n    element.style.fontSize = \"\".concat(fontSize, \"px\");\n  }\n\n  getIconSize(size) {\n    if (isNumber(size)) {\n      return size;\n    }\n\n    if (size.endsWith(\"px\")) {\n      return parseInt(size, 10);\n    }\n\n    return this.getComputedIconSize();\n  }\n\n  getComputedIconSize() {\n    var element = this.elementRef.current;\n    var iconComputedStyle = getElementComputedStyle(element);\n    var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\n    return computedIconSize;\n  }\n\n  get cssStyles() {\n    if (void 0 !== this.__getterCache.cssStyles) {\n      return this.__getterCache.cssStyles;\n    }\n\n    return this.__getterCache.cssStyles = (() => {\n      var {\n        size: size\n      } = this.props;\n      var width = normalizeStyleProp(\"width\", size);\n      var height = normalizeStyleProp(\"height\", size);\n      return {\n        height: height,\n        width: width\n      };\n    })();\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  componentWillUpdate(nextProps, nextState, context) {\n    super.componentWillUpdate();\n\n    if (this.props.size !== nextProps.size) {\n      this.__getterCache.cssStyles = void 0;\n    }\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      elementRef: this.elementRef,\n      setIconFontSize: this.setIconFontSize,\n      getIconSize: this.getIconSize,\n      getComputedIconSize: this.getComputedIconSize,\n      cssStyles: this.cssStyles,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nCheckBoxIcon.defaultProps = CheckBoxIconProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/editors/check_box/check_box_icon.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","InfernoEffect","InfernoComponent","normalizeStyles","getElementComputedStyle","hasWindow","normalizeStyleProp","isNumeric","isNumber","getFontSizeByIconSize","viewFunction","viewModel","cssStyles","elementRef","style","CheckBoxIconProps","isChecked","createRef","infernoCreateRef","CheckBoxIcon","constructor","props","state","__getterCache","updateFontSize","bind","setIconFontSize","getIconSize","getComputedIconSize","createEffects","size","updateEffects","_this$_effects$","_effects","update","newIconSize","newFontSize","fontSize","element","current","concat","endsWith","parseInt","iconComputedStyle","computedIconSize","width","height","restAttributes","_this$props","restProps","componentWillUpdate","nextProps","nextState","context","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isChecked\", \"size\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../../core/utils/window\";\r\nimport {\r\n    normalizeStyleProp\r\n} from \"../../../../core/utils/style\";\r\nimport {\r\n    isNumeric as isNumber\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    getFontSizeByIconSize\r\n} from \"./utils\";\r\nexport var viewFunction = viewModel => {\r\n    var {\r\n        cssStyles: cssStyles,\r\n        elementRef: elementRef\r\n    } = viewModel;\r\n    return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\r\n        style: normalizeStyles(cssStyles)\r\n    }, null, elementRef)\r\n};\r\nexport var CheckBoxIconProps = {\r\n    isChecked: false\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class CheckBoxIcon extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.elementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.updateFontSize = this.updateFontSize.bind(this);\r\n        this.setIconFontSize = this.setIconFontSize.bind(this);\r\n        this.getIconSize = this.getIconSize.bind(this);\r\n        this.getComputedIconSize = this.getComputedIconSize.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size])\r\n    }\r\n    updateFontSize() {\r\n        var {\r\n            isChecked: isChecked,\r\n            size: size\r\n        } = this.props;\r\n        if (hasWindow() && size) {\r\n            var newIconSize = this.getIconSize(size);\r\n            var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\r\n            this.setIconFontSize(newFontSize)\r\n        }\r\n    }\r\n    setIconFontSize(fontSize) {\r\n        var element = this.elementRef.current;\r\n        element.style.fontSize = \"\".concat(fontSize, \"px\")\r\n    }\r\n    getIconSize(size) {\r\n        if (isNumber(size)) {\r\n            return size\r\n        }\r\n        if (size.endsWith(\"px\")) {\r\n            return parseInt(size, 10)\r\n        }\r\n        return this.getComputedIconSize()\r\n    }\r\n    getComputedIconSize() {\r\n        var element = this.elementRef.current;\r\n        var iconComputedStyle = getElementComputedStyle(element);\r\n        var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\r\n        return computedIconSize\r\n    }\r\n    get cssStyles() {\r\n        if (void 0 !== this.__getterCache.cssStyles) {\r\n            return this.__getterCache.cssStyles\r\n        }\r\n        return this.__getterCache.cssStyles = (() => {\r\n            var {\r\n                size: size\r\n            } = this.props;\r\n            var width = normalizeStyleProp(\"width\", size);\r\n            var height = normalizeStyleProp(\"height\", size);\r\n            return {\r\n                height: height,\r\n                width: width\r\n            }\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.size !== nextProps.size) {\r\n            this.__getterCache.cssStyles = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            elementRef: this.elementRef,\r\n            setIconFontSize: this.setIconFontSize,\r\n            getIconSize: this.getIconSize,\r\n            getComputedIconSize: this.getComputedIconSize,\r\n            cssStyles: this.cssStyles,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nCheckBoxIcon.defaultProps = CheckBoxIconProps;\r\n"]},"metadata":{},"sourceType":"module"}