{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { getWindow } from \"../../core/utils/window\";\nimport modules from \"./ui.grid_core.modules\";\nimport errors from \"../widget/ui.errors\";\nimport { sessionStorage } from \"../../core/utils/storage\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined, isPlainObject, isEmptyObject } from \"../../core/utils/type\";\nimport { fromPromise } from \"../../core/utils/deferred\";\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\n\nvar parseDates = function parseDates(state) {\n  if (!state) {\n    return;\n  }\n\n  each(state, function (key, value) {\n    if (isPlainObject(value) || Array.isArray(value)) {\n      parseDates(value);\n    } else if (\"string\" === typeof value) {\n      var date = DATE_REGEX.exec(value);\n\n      if (date) {\n        state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]));\n      }\n    }\n  });\n};\n\nexport var StateStoringController = modules.ViewController.inherit(function () {\n  var getStorage = function (options) {\n    var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\n\n    if (!storage) {\n      throw new Error(\"E1007\");\n    }\n\n    return storage;\n  };\n\n  var getUniqueStorageKey = function (options) {\n    return isDefined(options.storageKey) ? options.storageKey : \"storage\";\n  };\n\n  return {\n    _loadState: function () {\n      var options = this.option(\"stateStoring\");\n\n      if (\"custom\" === options.type) {\n        return options.customLoad && options.customLoad();\n      }\n\n      try {\n        return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)));\n      } catch (e) {\n        errors.log(e.message);\n      }\n    },\n    _saveState: function (state) {\n      var options = this.option(\"stateStoring\");\n\n      if (\"custom\" === options.type) {\n        options.customSave && options.customSave(state);\n        return;\n      }\n\n      try {\n        getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state));\n      } catch (e) {\n        errors.log(e.message);\n      }\n    },\n    publicMethods: function () {\n      return [\"state\"];\n    },\n    isEnabled: function () {\n      return this.option(\"stateStoring.enabled\");\n    },\n    init: function () {\n      var that = this;\n      that._state = {};\n      that._isLoaded = false;\n      that._isLoading = false;\n\n      that._windowUnloadHandler = function () {\n        if (void 0 !== that._savingTimeoutID) {\n          that._saveState(that.state());\n        }\n      };\n\n      eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\n      return that;\n    },\n    isLoaded: function () {\n      return this._isLoaded;\n    },\n    isLoading: function () {\n      return this._isLoading;\n    },\n    load: function () {\n      this._isLoading = true;\n      var loadResult = fromPromise(this._loadState());\n      loadResult.always(() => {\n        this._isLoaded = true;\n        this._isLoading = false;\n      }).done(state => {\n        if (null !== state && !isEmptyObject(state)) {\n          this.state(state);\n        }\n      });\n      return loadResult;\n    },\n    state: function (_state) {\n      var that = this;\n\n      if (!arguments.length) {\n        return extend(true, {}, that._state);\n      } else {\n        that._state = extend({}, _state);\n        parseDates(that._state);\n      }\n    },\n    save: function () {\n      var that = this;\n      clearTimeout(that._savingTimeoutID);\n      that._savingTimeoutID = setTimeout(function () {\n        that._saveState(that.state());\n\n        that._savingTimeoutID = void 0;\n      }, that.option(\"stateStoring.savingTimeout\"));\n    },\n    optionChanged: function (args) {\n      switch (args.name) {\n        case \"stateStoring\":\n          if (this.isEnabled() && !this.isLoading()) {\n            this.load();\n          }\n\n          args.handled = true;\n          break;\n\n        default:\n          this.callBase(args);\n      }\n    },\n    dispose: function () {\n      clearTimeout(this._savingTimeoutID);\n      eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler);\n    }\n  };\n}());","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js"],"names":["eventsEngine","getWindow","modules","errors","sessionStorage","extend","each","isDefined","isPlainObject","isEmptyObject","fromPromise","DATE_REGEX","parseDates","state","key","value","Array","isArray","date","exec","Date","UTC","StateStoringController","ViewController","inherit","getStorage","options","storage","type","localStorage","Error","getUniqueStorageKey","storageKey","_loadState","option","customLoad","JSON","parse","getItem","e","log","message","_saveState","customSave","setItem","stringify","publicMethods","isEnabled","init","that","_state","_isLoaded","_isLoading","_windowUnloadHandler","_savingTimeoutID","on","isLoaded","isLoading","load","loadResult","always","done","arguments","length","save","clearTimeout","setTimeout","optionChanged","args","name","handled","callBase","dispose","off"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}