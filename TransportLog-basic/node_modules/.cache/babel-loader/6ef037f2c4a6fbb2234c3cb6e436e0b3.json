{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"dateCellTemplate\", \"dateHeaderData\", \"groupByDate\", \"groupOrientation\", \"groups\", \"timeCellTemplate\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"../../../base/row\";\nimport { isHorizontalGroupingApplied } from \"../../../utils\";\nimport { DateHeaderCell } from \"../../../base/header_panel/date_header/cell\";\nimport { DateHeaderLayoutProps } from \"../../../base/header_panel/date_header/layout\";\nimport getThemeType from \"../../../../../../utils/getThemeType\";\nvar {\n  isMaterial: isMaterial\n} = getThemeType();\nexport var viewFunction = _ref => {\n  var {\n    isHorizontalGrouping: isHorizontalGrouping,\n    props: {\n      dateCellTemplate: dateCellTemplate,\n      dateHeaderData: dateHeaderData,\n      timeCellTemplate: timeCellTemplate\n    }\n  } = _ref;\n  var {\n    dataMap: dataMap,\n    isMonthDateHeader: isMonthDateHeader,\n    leftVirtualCellCount: leftVirtualCellCount,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellCount: rightVirtualCellCount,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    weekDayLeftVirtualCellCount: weekDayLeftVirtualCellCount,\n    weekDayLeftVirtualCellWidth: weekDayLeftVirtualCellWidth,\n    weekDayRightVirtualCellCount: weekDayRightVirtualCellCount,\n    weekDayRightVirtualCellWidth: weekDayRightVirtualCellWidth\n  } = dateHeaderData;\n  return createFragment(dataMap.map((dateHeaderRow, rowIndex) => {\n    var rowsCount = dataMap.length;\n    var isTimeCellTemplate = rowsCount - 1 === rowIndex;\n    var isWeekDayRow = rowsCount > 1 && 0 === rowIndex;\n    var splitText = isMaterial && (isMonthDateHeader || isWeekDayRow);\n    var validLeftVirtualCellCount = leftVirtualCellCount;\n    var validRightVirtualCellCount = rightVirtualCellCount;\n    var validRightVirtualCellWidth = rightVirtualCellWidth;\n    var validLeftVirtualCellWidth = leftVirtualCellWidth;\n\n    if (isWeekDayRow) {\n      validLeftVirtualCellCount = weekDayLeftVirtualCellCount;\n      validRightVirtualCellCount = weekDayRightVirtualCellCount;\n      validRightVirtualCellWidth = weekDayRightVirtualCellWidth;\n      validLeftVirtualCellWidth = weekDayLeftVirtualCellWidth;\n    }\n\n    return createComponentVNode(2, Row, {\n      className: \"dx-scheduler-header-row\",\n      leftVirtualCellWidth: validLeftVirtualCellWidth,\n      leftVirtualCellCount: validLeftVirtualCellCount,\n      rightVirtualCellWidth: validRightVirtualCellWidth,\n      rightVirtualCellCount: validRightVirtualCellCount,\n      children: dateHeaderRow.map(_ref2 => {\n        var {\n          colSpan: colSpan,\n          endDate: endDate,\n          groupIndex: groupIndex,\n          groups: cellGroups,\n          index: index,\n          isFirstGroupCell: isFirstGroupCell,\n          isLastGroupCell: isLastGroupCell,\n          key: key,\n          startDate: startDate,\n          text: text,\n          today: today\n        } = _ref2;\n        return createComponentVNode(2, DateHeaderCell, {\n          startDate: startDate,\n          endDate: endDate,\n          groups: isHorizontalGrouping ? cellGroups : void 0,\n          groupIndex: isHorizontalGrouping ? groupIndex : void 0,\n          today: today,\n          index: index,\n          text: text,\n          isFirstGroupCell: isFirstGroupCell,\n          isLastGroupCell: isLastGroupCell,\n          isWeekDayCell: isWeekDayRow,\n          colSpan: colSpan,\n          splitText: splitText,\n          dateCellTemplate: dateCellTemplate,\n          timeCellTemplate: timeCellTemplate,\n          isTimeCellTemplate: isTimeCellTemplate\n        }, key);\n      })\n    }, rowIndex.toString());\n  }), 0);\n};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class TimelineDateHeaderLayout extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get isHorizontalGrouping() {\n    var {\n      groupByDate: groupByDate,\n      groupOrientation: groupOrientation,\n      groups: groups\n    } = this.props;\n    return isHorizontalGroupingApplied(groups, groupOrientation) && !groupByDate;\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        dateCellTemplate: getTemplate(props.dateCellTemplate),\n        timeCellTemplate: getTemplate(props.timeCellTemplate)\n      }),\n      isHorizontalGrouping: this.isHorizontalGrouping,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nTimelineDateHeaderLayout.defaultProps = DateHeaderLayoutProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createFragment","createComponentVNode","normalizeProps","Fragment","BaseInfernoComponent","Row","isHorizontalGroupingApplied","DateHeaderCell","DateHeaderLayoutProps","getThemeType","isMaterial","viewFunction","_ref","isHorizontalGrouping","props","dateCellTemplate","dateHeaderData","timeCellTemplate","dataMap","isMonthDateHeader","leftVirtualCellCount","leftVirtualCellWidth","rightVirtualCellCount","rightVirtualCellWidth","weekDayLeftVirtualCellCount","weekDayLeftVirtualCellWidth","weekDayRightVirtualCellCount","weekDayRightVirtualCellWidth","map","dateHeaderRow","rowIndex","rowsCount","length","isTimeCellTemplate","isWeekDayRow","splitText","validLeftVirtualCellCount","validRightVirtualCellCount","validRightVirtualCellWidth","validLeftVirtualCellWidth","className","children","_ref2","colSpan","endDate","groupIndex","groups","cellGroups","index","isFirstGroupCell","isLastGroupCell","key","startDate","text","today","isWeekDayCell","toString","getTemplate","TemplateProp","defaultProps","TimelineDateHeaderLayout","constructor","state","groupByDate","groupOrientation","restAttributes","_this$props","restProps","render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/timeline/header_panel/date_header/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"dateCellTemplate\", \"dateHeaderData\", \"groupByDate\", \"groupOrientation\", \"groups\", \"timeCellTemplate\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Row\r\n} from \"../../../base/row\";\r\nimport {\r\n    isHorizontalGroupingApplied\r\n} from \"../../../utils\";\r\nimport {\r\n    DateHeaderCell\r\n} from \"../../../base/header_panel/date_header/cell\";\r\nimport {\r\n    DateHeaderLayoutProps\r\n} from \"../../../base/header_panel/date_header/layout\";\r\nimport getThemeType from \"../../../../../../utils/getThemeType\";\r\nvar {\r\n    isMaterial: isMaterial\r\n} = getThemeType();\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        isHorizontalGrouping: isHorizontalGrouping,\r\n        props: {\r\n            dateCellTemplate: dateCellTemplate,\r\n            dateHeaderData: dateHeaderData,\r\n            timeCellTemplate: timeCellTemplate\r\n        }\r\n    } = _ref;\r\n    var {\r\n        dataMap: dataMap,\r\n        isMonthDateHeader: isMonthDateHeader,\r\n        leftVirtualCellCount: leftVirtualCellCount,\r\n        leftVirtualCellWidth: leftVirtualCellWidth,\r\n        rightVirtualCellCount: rightVirtualCellCount,\r\n        rightVirtualCellWidth: rightVirtualCellWidth,\r\n        weekDayLeftVirtualCellCount: weekDayLeftVirtualCellCount,\r\n        weekDayLeftVirtualCellWidth: weekDayLeftVirtualCellWidth,\r\n        weekDayRightVirtualCellCount: weekDayRightVirtualCellCount,\r\n        weekDayRightVirtualCellWidth: weekDayRightVirtualCellWidth\r\n    } = dateHeaderData;\r\n    return createFragment(dataMap.map((dateHeaderRow, rowIndex) => {\r\n        var rowsCount = dataMap.length;\r\n        var isTimeCellTemplate = rowsCount - 1 === rowIndex;\r\n        var isWeekDayRow = rowsCount > 1 && 0 === rowIndex;\r\n        var splitText = isMaterial && (isMonthDateHeader || isWeekDayRow);\r\n        var validLeftVirtualCellCount = leftVirtualCellCount;\r\n        var validRightVirtualCellCount = rightVirtualCellCount;\r\n        var validRightVirtualCellWidth = rightVirtualCellWidth;\r\n        var validLeftVirtualCellWidth = leftVirtualCellWidth;\r\n        if (isWeekDayRow) {\r\n            validLeftVirtualCellCount = weekDayLeftVirtualCellCount;\r\n            validRightVirtualCellCount = weekDayRightVirtualCellCount;\r\n            validRightVirtualCellWidth = weekDayRightVirtualCellWidth;\r\n            validLeftVirtualCellWidth = weekDayLeftVirtualCellWidth\r\n        }\r\n        return createComponentVNode(2, Row, {\r\n            className: \"dx-scheduler-header-row\",\r\n            leftVirtualCellWidth: validLeftVirtualCellWidth,\r\n            leftVirtualCellCount: validLeftVirtualCellCount,\r\n            rightVirtualCellWidth: validRightVirtualCellWidth,\r\n            rightVirtualCellCount: validRightVirtualCellCount,\r\n            children: dateHeaderRow.map(_ref2 => {\r\n                var {\r\n                    colSpan: colSpan,\r\n                    endDate: endDate,\r\n                    groupIndex: groupIndex,\r\n                    groups: cellGroups,\r\n                    index: index,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    key: key,\r\n                    startDate: startDate,\r\n                    text: text,\r\n                    today: today\r\n                } = _ref2;\r\n                return createComponentVNode(2, DateHeaderCell, {\r\n                    startDate: startDate,\r\n                    endDate: endDate,\r\n                    groups: isHorizontalGrouping ? cellGroups : void 0,\r\n                    groupIndex: isHorizontalGrouping ? groupIndex : void 0,\r\n                    today: today,\r\n                    index: index,\r\n                    text: text,\r\n                    isFirstGroupCell: isFirstGroupCell,\r\n                    isLastGroupCell: isLastGroupCell,\r\n                    isWeekDayCell: isWeekDayRow,\r\n                    colSpan: colSpan,\r\n                    splitText: splitText,\r\n                    dateCellTemplate: dateCellTemplate,\r\n                    timeCellTemplate: timeCellTemplate,\r\n                    isTimeCellTemplate: isTimeCellTemplate\r\n                }, key)\r\n            })\r\n        }, rowIndex.toString())\r\n    }), 0)\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class TimelineDateHeaderLayout extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get isHorizontalGrouping() {\r\n        var {\r\n            groupByDate: groupByDate,\r\n            groupOrientation: groupOrientation,\r\n            groups: groups\r\n        } = this.props;\r\n        return isHorizontalGroupingApplied(groups, groupOrientation) && !groupByDate\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                dateCellTemplate: getTemplate(props.dateCellTemplate),\r\n                timeCellTemplate: getTemplate(props.timeCellTemplate)\r\n            }),\r\n            isHorizontalGrouping: this.isHorizontalGrouping,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nTimelineDateHeaderLayout.defaultProps = DateHeaderLayoutProps;\r\n"]},"metadata":{},"sourceType":"module"}