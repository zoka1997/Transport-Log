{"ast":null,"code":"import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\n/**\n * `touch` module is used to handle touch interactions.\n */\n\nvar ScheduleTouch =\n/** @class */\nfunction () {\n  function ScheduleTouch(parent) {\n    this.parent = parent;\n    this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\n    this.touchObj = new Touch(this.element, {\n      scroll: this.scrollHandler.bind(this),\n      swipe: this.swipeHandler.bind(this),\n      tapHold: this.tapHoldHandler.bind(this),\n      swipeSettings: {\n        swipeThresholdDistance: 1\n      }\n    });\n    EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\n    this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\n    this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\n  }\n\n  ScheduleTouch.prototype.scrollHandler = function (e) {\n    if (this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action || !this.parent.allowSwiping || e.originalEvent && e.originalEvent.target && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) || closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS)) && !this.parent.isAdaptive) {\n      return;\n    }\n\n    if (!this.timeStampStart) {\n      this.timeStampStart = Date.now();\n    }\n\n    if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\n      this.onTransitionEnd();\n    }\n\n    if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionBegin, args);\n\n      if (args.cancel) {\n        return;\n      }\n\n      var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n\n      if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\n        return;\n      } else {\n        this.isScrollTriggered = true;\n        e.originalEvent.preventDefault();\n        e.originalEvent.stopPropagation();\n      }\n    }\n\n    if (e.scrollDirection === this.touchLeftDirection) {\n      if (!this.nextPanel) {\n        this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\n        this.nextPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.nextPanel.element);\n      }\n\n      var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    } else if (e.scrollDirection === this.touchRightDirection) {\n      var prevWidth = 0;\n\n      if (!this.previousPanel) {\n        this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\n        this.previousPanel = {\n          element: this.parent.activeView.getPanel(),\n          selectedDate: new Date(this.parent.selectedDate.getTime())\n        };\n        this.setDimensions(this.previousPanel.element);\n        prevWidth = this.previousPanel.element.offsetWidth;\n      }\n\n      var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\n      this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n    }\n  };\n\n  ScheduleTouch.prototype.swipeHandler = function (e) {\n    if (!this.isScrollTriggered || this.parent.uiStateValues.action || !this.parent.allowSwiping) {\n      return;\n    }\n\n    this.isScrollTriggered = false;\n    var swipeDate = e.swipeDirection === 'Left' ? this.parent.activeView.renderDates[0] : this.parent.activeView.renderDates.slice(-1)[0];\n\n    if (e.swipeDirection === 'Left' && swipeDate < this.parent.maxDate || e.swipeDirection === 'Right' && swipeDate >= this.parent.minDate) {\n      var time = Date.now() - this.timeStampStart;\n      var offsetDist = e.distanceX * (Browser.isDevice ? 6 : 1.66);\n\n      if (offsetDist > time || e.distanceX > this.parent.element.offsetWidth / 2) {\n        this.swapPanels(e.swipeDirection);\n\n        if (offsetDist > time && e.distanceX > this.parent.element.offsetWidth / 2) {\n          this.element.style.transitionDuration = offsetDist / time / 10 + 's';\n        }\n\n        this.confirmSwipe(e.swipeDirection);\n      } else {\n        this.cancelSwipe();\n      }\n\n      var args = {\n        requestType: 'dateNavigate',\n        cancel: false,\n        event: e.originalEvent\n      };\n      this.parent.trigger(events.actionComplete, args);\n    } else {\n      this.cancelSwipe();\n    }\n\n    this.timeStampStart = null;\n  };\n\n  ScheduleTouch.prototype.tapHoldHandler = function (e) {\n    var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\n\n    if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n      this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\n      return;\n    }\n  };\n\n  ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\n    if (!this.currentPanel) {\n      this.currentPanel = {\n        element: this.parent.activeView.getPanel(),\n        selectedDate: new Date(this.parent.selectedDate.getTime())\n      };\n      this.setDimensions(this.currentPanel.element);\n    } else {\n      this.parent.setProperties({\n        selectedDate: this.currentPanel.selectedDate\n      }, true);\n    }\n\n    this.parent.setProperties({\n      selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType)\n    }, true);\n\n    if (this.parent.headerModule) {\n      this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\n    }\n\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.renderLayout(clsName);\n  };\n\n  ScheduleTouch.prototype.swapPanels = function (direction) {\n    if (direction === this.touchLeftDirection) {\n      var temp = this.nextPanel;\n      this.nextPanel = this.currentPanel;\n      this.currentPanel = temp;\n    } else {\n      var temp = this.previousPanel;\n      this.previousPanel = this.currentPanel;\n      this.currentPanel = temp;\n    }\n  };\n\n  ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\n    var _this = this;\n\n    var previousDate = swipeDirection === this.touchLeftDirection ? this.nextPanel.selectedDate : this.previousPanel.selectedDate;\n    var args = {\n      action: 'date',\n      cancel: false,\n      previousDate: previousDate,\n      currentDate: this.currentPanel.selectedDate\n    };\n    this.parent.trigger(events.navigating, args, function (navArgs) {\n      if (navArgs.cancel) {\n        _this.swapPanels(swipeDirection);\n\n        _this.cancelSwipe();\n      } else {\n        _this.parent.activeView.setPanel(_this.currentPanel.element);\n\n        _this.parent.setProperties({\n          selectedDate: _this.currentPanel.selectedDate\n        }, true);\n\n        var translateX = void 0;\n\n        if (_this.parent.enableRtl) {\n          translateX = swipeDirection === _this.touchLeftDirection ? _this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth : 0;\n        } else {\n          translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\n        }\n\n        addClass([_this.element], cls.TRANSLATE_CLASS);\n        _this.element.style.transform = 'translatex(' + translateX + 'px)';\n\n        if (_this.parent.headerModule) {\n          _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\n        }\n\n        _this.parent.renderTemplates();\n\n        _this.parent.crudModule.refreshDataManager();\n      }\n    });\n  };\n\n  ScheduleTouch.prototype.cancelSwipe = function () {\n    this.parent.activeView.setPanel(this.currentPanel.element);\n    this.parent.setProperties({\n      selectedDate: this.currentPanel.selectedDate\n    }, true);\n    this.parent.activeView.getRenderDates();\n    this.parent.activeView.generateColumnLevels();\n    addClass([this.element], cls.TRANSLATE_CLASS);\n    var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\n    this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\n  };\n\n  ScheduleTouch.prototype.onTransitionEnd = function () {\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n    this.element.style.transitionDuration = '';\n    this.element.style.transform = '';\n\n    if (this.previousPanel) {\n      remove(this.previousPanel.element);\n      this.previousPanel = null;\n      removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    if (this.nextPanel) {\n      remove(this.nextPanel.element);\n      this.nextPanel = null;\n      removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\n      addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n    }\n\n    this.currentPanel = null;\n    this.parent.activeView.getPanel().style.width = '';\n  };\n\n  ScheduleTouch.prototype.getTranslateX = function (element) {\n    var style = window.getComputedStyle(element);\n    return new WebKitCSSMatrix(style.webkitTransform).m41;\n  };\n\n  ScheduleTouch.prototype.setDimensions = function (element) {\n    element.style.width = this.parent.element.clientWidth + 'px';\n  };\n\n  ScheduleTouch.prototype.resetValues = function () {\n    this.currentPanel = null;\n    this.previousPanel = null;\n    this.nextPanel = null;\n    this.timeStampStart = null;\n    this.element.style.transform = '';\n    util.removeChildren(this.element);\n    removeClass([this.element], cls.TRANSLATE_CLASS);\n  };\n\n  ScheduleTouch.prototype.destroy = function () {\n    if (this.touchObj) {\n      this.touchObj.destroy();\n      this.touchObj = null;\n    }\n\n    EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\n    this.resetValues();\n  };\n\n  return ScheduleTouch;\n}();\n\nexport { ScheduleTouch };","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/touch.js"],"names":["addClass","removeClass","Touch","remove","EventHandler","Browser","closest","isNullOrUndefined","events","cls","util","ScheduleTouch","parent","element","querySelector","TABLE_CONTAINER_CLASS","touchObj","scroll","scrollHandler","bind","swipe","swipeHandler","tapHold","tapHoldHandler","swipeSettings","swipeThresholdDistance","add","onTransitionEnd","touchLeftDirection","enableRtl","touchRightDirection","prototype","e","currentView","uiStateValues","action","allowSwiping","originalEvent","target","classList","contains","APPOINTMENT_CLASS","isAdaptive","timeStampStart","Date","now","TRANSLATE_CLASS","scrollDirection","args","requestType","cancel","event","trigger","actionBegin","scrollDiv","CONTENT_WRAP_CLASS","scrollWidth","clientWidth","isScrollTriggered","preventDefault","stopPropagation","nextPanel","renderPanel","NEXT_PANEL_CLASS","activeView","getPanel","selectedDate","getTime","setDimensions","x","distanceX","style","transform","getTranslateX","prevWidth","previousPanel","PREVIOUS_PANEL_CLASS","offsetWidth","swipeDate","swipeDirection","renderDates","slice","maxDate","minDate","time","offsetDist","isDevice","swapPanels","transitionDuration","confirmSwipe","cancelSwipe","actionComplete","quickPopup","tapHoldEventPopup","clsName","nextPrevType","currentPanel","setProperties","getNextPreviousDate","headerModule","setCalendarDate","getRenderDates","renderLayout","direction","temp","_this","previousDate","currentDate","navigating","navArgs","setPanel","translateX","offsetLeft","updateDateRange","getDateRangeText","renderTemplates","crudModule","refreshDataManager","generateColumnLevels","CURRENT_PANEL_CLASS","width","window","getComputedStyle","WebKitCSSMatrix","webkitTransform","m41","resetValues","removeChildren","destroy"],"mappings":"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","sourcesContent":["import { addClass, removeClass, Touch, remove, EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport * as cls from '../base/css-constant';\nimport * as util from '../base/util';\n/**\n * `touch` module is used to handle touch interactions.\n */\nvar ScheduleTouch = /** @class */ (function () {\n    function ScheduleTouch(parent) {\n        this.parent = parent;\n        this.element = this.parent.element.querySelector('.' + cls.TABLE_CONTAINER_CLASS);\n        this.touchObj = new Touch(this.element, {\n            scroll: this.scrollHandler.bind(this),\n            swipe: this.swipeHandler.bind(this),\n            tapHold: this.tapHoldHandler.bind(this),\n            swipeSettings: { swipeThresholdDistance: 1 }\n        });\n        EventHandler.add(this.element, 'transitionend', this.onTransitionEnd, this);\n        this.touchLeftDirection = this.parent.enableRtl ? 'Right' : 'Left';\n        this.touchRightDirection = this.parent.enableRtl ? 'Left' : 'Right';\n    }\n    ScheduleTouch.prototype.scrollHandler = function (e) {\n        if (this.parent.currentView === 'Agenda' || this.parent.uiStateValues.action || !this.parent.allowSwiping ||\n            (e.originalEvent && e.originalEvent.target && (e.originalEvent.target.classList.contains(cls.APPOINTMENT_CLASS) ||\n                closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS)) && !this.parent.isAdaptive)) {\n            return;\n        }\n        if (!this.timeStampStart) {\n            this.timeStampStart = Date.now();\n        }\n        if (this.element.classList.contains(cls.TRANSLATE_CLASS)) {\n            this.onTransitionEnd();\n        }\n        if (e.scrollDirection === 'Left' || e.scrollDirection === 'Right') {\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\n            this.parent.trigger(events.actionBegin, args);\n            if (args.cancel) {\n                return;\n            }\n            var scrollDiv = this.element.querySelector('.' + cls.CONTENT_WRAP_CLASS);\n            if (scrollDiv && scrollDiv.scrollWidth > scrollDiv.clientWidth) {\n                return;\n            }\n            else {\n                this.isScrollTriggered = true;\n                e.originalEvent.preventDefault();\n                e.originalEvent.stopPropagation();\n            }\n        }\n        if (e.scrollDirection === this.touchLeftDirection) {\n            if (!this.nextPanel) {\n                this.renderPanel(cls.NEXT_PANEL_CLASS, 'next');\n                this.nextPanel = {\n                    element: this.parent.activeView.getPanel(),\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\n                };\n                this.setDimensions(this.nextPanel.element);\n            }\n            var x = this.parent.enableRtl ? e.distanceX : -e.distanceX;\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n        }\n        else if (e.scrollDirection === this.touchRightDirection) {\n            var prevWidth = 0;\n            if (!this.previousPanel) {\n                this.renderPanel(cls.PREVIOUS_PANEL_CLASS, 'previous');\n                this.previousPanel = {\n                    element: this.parent.activeView.getPanel(),\n                    selectedDate: new Date(this.parent.selectedDate.getTime())\n                };\n                this.setDimensions(this.previousPanel.element);\n                prevWidth = this.previousPanel.element.offsetWidth;\n            }\n            var x = this.parent.enableRtl ? prevWidth - e.distanceX : -prevWidth + e.distanceX;\n            this.element.style.transform = 'translatex(' + (this.getTranslateX(this.element) + x) + 'px)';\n        }\n    };\n    ScheduleTouch.prototype.swipeHandler = function (e) {\n        if (!this.isScrollTriggered || this.parent.uiStateValues.action || !this.parent.allowSwiping) {\n            return;\n        }\n        this.isScrollTriggered = false;\n        var swipeDate = e.swipeDirection === 'Left' ?\n            this.parent.activeView.renderDates[0] : this.parent.activeView.renderDates.slice(-1)[0];\n        if ((e.swipeDirection === 'Left' && swipeDate < this.parent.maxDate) ||\n            (e.swipeDirection === 'Right' && swipeDate >= this.parent.minDate)) {\n            var time = Date.now() - this.timeStampStart;\n            var offsetDist = (e.distanceX * (Browser.isDevice ? 6 : 1.66));\n            if (offsetDist > time || (e.distanceX > (this.parent.element.offsetWidth / 2))) {\n                this.swapPanels(e.swipeDirection);\n                if (offsetDist > time && (e.distanceX > (this.parent.element.offsetWidth / 2))) {\n                    this.element.style.transitionDuration = ((offsetDist / time) / 10) + 's';\n                }\n                this.confirmSwipe(e.swipeDirection);\n            }\n            else {\n                this.cancelSwipe();\n            }\n            var args = { requestType: 'dateNavigate', cancel: false, event: e.originalEvent };\n            this.parent.trigger(events.actionComplete, args);\n        }\n        else {\n            this.cancelSwipe();\n        }\n        this.timeStampStart = null;\n    };\n    ScheduleTouch.prototype.tapHoldHandler = function (e) {\n        var target = closest(e.originalEvent.target, '.' + cls.APPOINTMENT_CLASS);\n        if (!isNullOrUndefined(target) && this.parent.isAdaptive) {\n            this.parent.quickPopup.tapHoldEventPopup(e.originalEvent);\n            return;\n        }\n    };\n    ScheduleTouch.prototype.renderPanel = function (clsName, nextPrevType) {\n        if (!this.currentPanel) {\n            this.currentPanel = {\n                element: this.parent.activeView.getPanel(),\n                selectedDate: new Date(this.parent.selectedDate.getTime())\n            };\n            this.setDimensions(this.currentPanel.element);\n        }\n        else {\n            this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\n        }\n        this.parent.setProperties({ selectedDate: this.parent.activeView.getNextPreviousDate(nextPrevType) }, true);\n        if (this.parent.headerModule) {\n            this.parent.headerModule.setCalendarDate(this.parent.selectedDate);\n        }\n        this.parent.activeView.getRenderDates();\n        this.parent.activeView.renderLayout(clsName);\n    };\n    ScheduleTouch.prototype.swapPanels = function (direction) {\n        if (direction === this.touchLeftDirection) {\n            var temp = this.nextPanel;\n            this.nextPanel = this.currentPanel;\n            this.currentPanel = temp;\n        }\n        else {\n            var temp = this.previousPanel;\n            this.previousPanel = this.currentPanel;\n            this.currentPanel = temp;\n        }\n    };\n    ScheduleTouch.prototype.confirmSwipe = function (swipeDirection) {\n        var _this = this;\n        var previousDate = swipeDirection === this.touchLeftDirection ?\n            this.nextPanel.selectedDate : this.previousPanel.selectedDate;\n        var args = {\n            action: 'date', cancel: false, previousDate: previousDate, currentDate: this.currentPanel.selectedDate\n        };\n        this.parent.trigger(events.navigating, args, function (navArgs) {\n            if (navArgs.cancel) {\n                _this.swapPanels(swipeDirection);\n                _this.cancelSwipe();\n            }\n            else {\n                _this.parent.activeView.setPanel(_this.currentPanel.element);\n                _this.parent.setProperties({ selectedDate: _this.currentPanel.selectedDate }, true);\n                var translateX = void 0;\n                if (_this.parent.enableRtl) {\n                    translateX = swipeDirection === _this.touchLeftDirection ?\n                        (_this.previousPanel ? _this.previousPanel.element.offsetLeft : _this.currentPanel.element.offsetWidth) : 0;\n                }\n                else {\n                    translateX = swipeDirection === _this.touchLeftDirection ? -_this.currentPanel.element.offsetLeft : 0;\n                }\n                addClass([_this.element], cls.TRANSLATE_CLASS);\n                _this.element.style.transform = 'translatex(' + translateX + 'px)';\n                if (_this.parent.headerModule) {\n                    _this.parent.headerModule.updateDateRange(_this.parent.activeView.getDateRangeText());\n                }\n                _this.parent.renderTemplates();\n                _this.parent.crudModule.refreshDataManager();\n            }\n        });\n    };\n    ScheduleTouch.prototype.cancelSwipe = function () {\n        this.parent.activeView.setPanel(this.currentPanel.element);\n        this.parent.setProperties({ selectedDate: this.currentPanel.selectedDate }, true);\n        this.parent.activeView.getRenderDates();\n        this.parent.activeView.generateColumnLevels();\n        addClass([this.element], cls.TRANSLATE_CLASS);\n        var prevWidth = this.previousPanel ? this.previousPanel.element.offsetWidth : 0;\n        this.element.style.transform = 'translatex(' + (this.parent.enableRtl ? prevWidth : -this.currentPanel.element.offsetLeft) + 'px)';\n    };\n    ScheduleTouch.prototype.onTransitionEnd = function () {\n        removeClass([this.element], cls.TRANSLATE_CLASS);\n        this.element.style.transitionDuration = '';\n        this.element.style.transform = '';\n        if (this.previousPanel) {\n            remove(this.previousPanel.element);\n            this.previousPanel = null;\n            removeClass([this.currentPanel.element], cls.PREVIOUS_PANEL_CLASS);\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n        }\n        if (this.nextPanel) {\n            remove(this.nextPanel.element);\n            this.nextPanel = null;\n            removeClass([this.currentPanel.element], cls.NEXT_PANEL_CLASS);\n            addClass([this.currentPanel.element], cls.CURRENT_PANEL_CLASS);\n        }\n        this.currentPanel = null;\n        this.parent.activeView.getPanel().style.width = '';\n    };\n    ScheduleTouch.prototype.getTranslateX = function (element) {\n        var style = window.getComputedStyle(element);\n        return new WebKitCSSMatrix(style.webkitTransform).m41;\n    };\n    ScheduleTouch.prototype.setDimensions = function (element) {\n        element.style.width = (this.parent.element.clientWidth) + 'px';\n    };\n    ScheduleTouch.prototype.resetValues = function () {\n        this.currentPanel = null;\n        this.previousPanel = null;\n        this.nextPanel = null;\n        this.timeStampStart = null;\n        this.element.style.transform = '';\n        util.removeChildren(this.element);\n        removeClass([this.element], cls.TRANSLATE_CLASS);\n    };\n    ScheduleTouch.prototype.destroy = function () {\n        if (this.touchObj) {\n            this.touchObj.destroy();\n            this.touchObj = null;\n        }\n        EventHandler.remove(this.element, 'transitionend', this.onTransitionEnd);\n        this.resetValues();\n    };\n    return ScheduleTouch;\n}());\nexport { ScheduleTouch };\n"]},"metadata":{},"sourceType":"module"}