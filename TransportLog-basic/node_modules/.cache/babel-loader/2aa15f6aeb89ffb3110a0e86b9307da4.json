{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Guid from \"../../core/guid\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isString } from \"../../core/utils/type\";\nexport default class FormItemsRunTimeInfo {\n  constructor() {\n    this._map = {};\n  }\n\n  _findWidgetInstance(condition) {\n    var result;\n    each(this._map, function (guid, _ref) {\n      var {\n        widgetInstance: widgetInstance,\n        item: item\n      } = _ref;\n\n      if (condition(item)) {\n        result = widgetInstance;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  _findFieldByCondition(callback, valueExpr) {\n    var result;\n    each(this._map, function (key, value) {\n      if (callback(value)) {\n        result = \"guid\" === valueExpr ? key : value[valueExpr];\n        return false;\n      }\n    });\n    return result;\n  }\n\n  clear() {\n    this._map = {};\n  }\n\n  removeItemsByItems(itemsRunTimeInfo) {\n    each(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid));\n  }\n\n  removeItemByKey(key) {\n    delete this._map[key];\n  }\n\n  add(options) {\n    var key = options.guid || new Guid();\n    this._map[key] = options;\n    return key;\n  }\n\n  addItemsOrExtendFrom(itemsRunTimeInfo) {\n    itemsRunTimeInfo.each((key, itemRunTimeInfo) => {\n      if (this._map[key]) {\n        if (itemRunTimeInfo.widgetInstance) {\n          this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance;\n        }\n\n        this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer;\n      } else {\n        this.add({\n          item: itemRunTimeInfo.item,\n          widgetInstance: itemRunTimeInfo.widgetInstance,\n          guid: key,\n          $itemContainer: itemRunTimeInfo.$itemContainer\n        });\n      }\n    });\n  }\n\n  extendRunTimeItemInfoByKey(key, options) {\n    if (this._map[key]) {\n      this._map[key] = extend(this._map[key], options);\n    }\n  }\n\n  findWidgetInstanceByItem(item) {\n    return this._findWidgetInstance(storedItem => storedItem === item);\n  }\n\n  findGroupOrTabLayoutManagerByPath(targetPath) {\n    return this._findFieldByCondition(_ref2 => {\n      var {\n        path: path\n      } = _ref2;\n      return path === targetPath;\n    }, \"layoutManager\");\n  }\n\n  findKeyByPath(targetPath) {\n    return this._findFieldByCondition(_ref3 => {\n      var {\n        path: path\n      } = _ref3;\n      return path === targetPath;\n    }, \"guid\");\n  }\n\n  findWidgetInstanceByName(name) {\n    return this._findWidgetInstance(item => name === item.name);\n  }\n\n  findWidgetInstanceByDataField(dataField) {\n    return this._findWidgetInstance(item => dataField === (isString(item) ? item : item.dataField));\n  }\n\n  findItemContainerByItem(item) {\n    for (var key in this._map) {\n      if (this._map[key].item === item) {\n        return this._map[key].$itemContainer;\n      }\n    }\n\n    return null;\n  }\n\n  findItemIndexByItem(targetItem) {\n    return this._findFieldByCondition(_ref4 => {\n      var {\n        item: item\n      } = _ref4;\n      return item === targetItem;\n    }, \"itemIndex\");\n  }\n\n  findPreparedItemByItem(item) {\n    return this._findFieldByCondition(_ref5 => {\n      var {\n        item: currentItem\n      } = _ref5;\n      return currentItem === item;\n    }, \"preparedItem\");\n  }\n\n  getItems() {\n    return this._map;\n  }\n\n  each(handler) {\n    each(this._map, function (key, itemRunTimeInfo) {\n      handler(key, itemRunTimeInfo);\n    });\n  }\n\n  removeItemsByPathStartWith(path) {\n    var keys = Object.keys(this._map);\n    var filteredKeys = keys.filter(key => {\n      if (this._map[key].path) {\n        return this._map[key].path.indexOf(path, 0) > -1;\n      }\n\n      return false;\n    });\n    filteredKeys.forEach(key => this.removeItemByKey(key));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/form/ui.form.items_runtime_info.js"],"names":["Guid","each","extend","isString","FormItemsRunTimeInfo","constructor","_map","_findWidgetInstance","condition","result","guid","_ref","widgetInstance","item","_findFieldByCondition","callback","valueExpr","key","value","clear","removeItemsByItems","itemsRunTimeInfo","getItems","removeItemByKey","add","options","addItemsOrExtendFrom","itemRunTimeInfo","$itemContainer","extendRunTimeItemInfoByKey","findWidgetInstanceByItem","storedItem","findGroupOrTabLayoutManagerByPath","targetPath","_ref2","path","findKeyByPath","_ref3","findWidgetInstanceByName","name","findWidgetInstanceByDataField","dataField","findItemContainerByItem","findItemIndexByItem","targetItem","_ref4","findPreparedItemByItem","_ref5","currentItem","handler","removeItemsByPathStartWith","keys","Object","filteredKeys","filter","indexOf","forEach"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,SACIC,IADJ,QAEO,2BAFP;AAGA,SACIC,MADJ,QAEO,yBAFP;AAGA,SACIC,QADJ,QAEO,uBAFP;AAGA,eAAe,MAAMC,oBAAN,CAA2B;AACtCC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAY,EAAZ;AACH;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC3B,QAAIC,MAAJ;AACAR,IAAAA,IAAI,CAAC,KAAKK,IAAN,EAAa,UAASI,IAAT,EAAeC,IAAf,EAAqB;AAClC,UAAI;AACAC,QAAAA,cAAc,EAAEA,cADhB;AAEAC,QAAAA,IAAI,EAAEA;AAFN,UAGAF,IAHJ;;AAIA,UAAIH,SAAS,CAACK,IAAD,CAAb,EAAqB;AACjBJ,QAAAA,MAAM,GAAGG,cAAT;AACA,eAAO,KAAP;AACH;AACJ,KATG,CAAJ;AAUA,WAAOH,MAAP;AACH;;AACDK,EAAAA,qBAAqB,CAACC,QAAD,EAAWC,SAAX,EAAsB;AACvC,QAAIP,MAAJ;AACAR,IAAAA,IAAI,CAAC,KAAKK,IAAN,EAAa,UAASW,GAAT,EAAcC,KAAd,EAAqB;AAClC,UAAIH,QAAQ,CAACG,KAAD,CAAZ,EAAqB;AACjBT,QAAAA,MAAM,GAAG,WAAWO,SAAX,GAAuBC,GAAvB,GAA6BC,KAAK,CAACF,SAAD,CAA3C;AACA,eAAO,KAAP;AACH;AACJ,KALG,CAAJ;AAMA,WAAOP,MAAP;AACH;;AACDU,EAAAA,KAAK,GAAG;AACJ,SAAKb,IAAL,GAAY,EAAZ;AACH;;AACDc,EAAAA,kBAAkB,CAACC,gBAAD,EAAmB;AACjCpB,IAAAA,IAAI,CAACoB,gBAAgB,CAACC,QAAjB,EAAD,EAA8BZ,IAAI,IAAI,KAAKa,eAAL,CAAqBb,IAArB,CAAtC,CAAJ;AACH;;AACDa,EAAAA,eAAe,CAACN,GAAD,EAAM;AACjB,WAAO,KAAKX,IAAL,CAAUW,GAAV,CAAP;AACH;;AACDO,EAAAA,GAAG,CAACC,OAAD,EAAU;AACT,QAAIR,GAAG,GAAGQ,OAAO,CAACf,IAAR,IAAgB,IAAIV,IAAJ,EAA1B;AACA,SAAKM,IAAL,CAAUW,GAAV,IAAiBQ,OAAjB;AACA,WAAOR,GAAP;AACH;;AACDS,EAAAA,oBAAoB,CAACL,gBAAD,EAAmB;AACnCA,IAAAA,gBAAgB,CAACpB,IAAjB,CAAsB,CAACgB,GAAD,EAAMU,eAAN,KAA0B;AAC5C,UAAI,KAAKrB,IAAL,CAAUW,GAAV,CAAJ,EAAoB;AAChB,YAAIU,eAAe,CAACf,cAApB,EAAoC;AAChC,eAAKN,IAAL,CAAUW,GAAV,EAAeL,cAAf,GAAgCe,eAAe,CAACf,cAAhD;AACH;;AACD,aAAKN,IAAL,CAAUW,GAAV,EAAeW,cAAf,GAAgCD,eAAe,CAACC,cAAhD;AACH,OALD,MAKO;AACH,aAAKJ,GAAL,CAAS;AACLX,UAAAA,IAAI,EAAEc,eAAe,CAACd,IADjB;AAELD,UAAAA,cAAc,EAAEe,eAAe,CAACf,cAF3B;AAGLF,UAAAA,IAAI,EAAEO,GAHD;AAILW,UAAAA,cAAc,EAAED,eAAe,CAACC;AAJ3B,SAAT;AAMH;AACJ,KAdD;AAeH;;AACDC,EAAAA,0BAA0B,CAACZ,GAAD,EAAMQ,OAAN,EAAe;AACrC,QAAI,KAAKnB,IAAL,CAAUW,GAAV,CAAJ,EAAoB;AAChB,WAAKX,IAAL,CAAUW,GAAV,IAAiBf,MAAM,CAAC,KAAKI,IAAL,CAAUW,GAAV,CAAD,EAAiBQ,OAAjB,CAAvB;AACH;AACJ;;AACDK,EAAAA,wBAAwB,CAACjB,IAAD,EAAO;AAC3B,WAAO,KAAKN,mBAAL,CAAyBwB,UAAU,IAAIA,UAAU,KAAKlB,IAAtD,CAAP;AACH;;AACDmB,EAAAA,iCAAiC,CAACC,UAAD,EAAa;AAC1C,WAAO,KAAKnB,qBAAL,CAA2BoB,KAAK,IAAI;AACvC,UAAI;AACAC,QAAAA,IAAI,EAAEA;AADN,UAEAD,KAFJ;AAGA,aAAOC,IAAI,KAAKF,UAAhB;AACH,KALM,EAKJ,eALI,CAAP;AAMH;;AACDG,EAAAA,aAAa,CAACH,UAAD,EAAa;AACtB,WAAO,KAAKnB,qBAAL,CAA2BuB,KAAK,IAAI;AACvC,UAAI;AACAF,QAAAA,IAAI,EAAEA;AADN,UAEAE,KAFJ;AAGA,aAAOF,IAAI,KAAKF,UAAhB;AACH,KALM,EAKJ,MALI,CAAP;AAMH;;AACDK,EAAAA,wBAAwB,CAACC,IAAD,EAAO;AAC3B,WAAO,KAAKhC,mBAAL,CAAyBM,IAAI,IAAI0B,IAAI,KAAK1B,IAAI,CAAC0B,IAA/C,CAAP;AACH;;AACDC,EAAAA,6BAA6B,CAACC,SAAD,EAAY;AACrC,WAAO,KAAKlC,mBAAL,CAAyBM,IAAI,IAAI4B,SAAS,MAAMtC,QAAQ,CAACU,IAAD,CAAR,GAAiBA,IAAjB,GAAwBA,IAAI,CAAC4B,SAAnC,CAA1C,CAAP;AACH;;AACDC,EAAAA,uBAAuB,CAAC7B,IAAD,EAAO;AAC1B,SAAK,IAAII,GAAT,IAAgB,KAAKX,IAArB,EAA2B;AACvB,UAAI,KAAKA,IAAL,CAAUW,GAAV,EAAeJ,IAAf,KAAwBA,IAA5B,EAAkC;AAC9B,eAAO,KAAKP,IAAL,CAAUW,GAAV,EAAeW,cAAtB;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AACDe,EAAAA,mBAAmB,CAACC,UAAD,EAAa;AAC5B,WAAO,KAAK9B,qBAAL,CAA2B+B,KAAK,IAAI;AACvC,UAAI;AACAhC,QAAAA,IAAI,EAAEA;AADN,UAEAgC,KAFJ;AAGA,aAAOhC,IAAI,KAAK+B,UAAhB;AACH,KALM,EAKJ,WALI,CAAP;AAMH;;AACDE,EAAAA,sBAAsB,CAACjC,IAAD,EAAO;AACzB,WAAO,KAAKC,qBAAL,CAA2BiC,KAAK,IAAI;AACvC,UAAI;AACAlC,QAAAA,IAAI,EAAEmC;AADN,UAEAD,KAFJ;AAGA,aAAOC,WAAW,KAAKnC,IAAvB;AACH,KALM,EAKJ,cALI,CAAP;AAMH;;AACDS,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKhB,IAAZ;AACH;;AACDL,EAAAA,IAAI,CAACgD,OAAD,EAAU;AACVhD,IAAAA,IAAI,CAAC,KAAKK,IAAN,EAAa,UAASW,GAAT,EAAcU,eAAd,EAA+B;AAC5CsB,MAAAA,OAAO,CAAChC,GAAD,EAAMU,eAAN,CAAP;AACH,KAFG,CAAJ;AAGH;;AACDuB,EAAAA,0BAA0B,CAACf,IAAD,EAAO;AAC7B,QAAIgB,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,KAAK7C,IAAjB,CAAX;AACA,QAAI+C,YAAY,GAAGF,IAAI,CAACG,MAAL,CAAYrC,GAAG,IAAI;AAClC,UAAI,KAAKX,IAAL,CAAUW,GAAV,EAAekB,IAAnB,EAAyB;AACrB,eAAO,KAAK7B,IAAL,CAAUW,GAAV,EAAekB,IAAf,CAAoBoB,OAApB,CAA4BpB,IAA5B,EAAkC,CAAlC,IAAuC,CAAC,CAA/C;AACH;;AACD,aAAO,KAAP;AACH,KALkB,CAAnB;AAMAkB,IAAAA,YAAY,CAACG,OAAb,CAAqBvC,GAAG,IAAI,KAAKM,eAAL,CAAqBN,GAArB,CAA5B;AACH;;AAlIqC","sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.items_runtime_info.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isString\r\n} from \"../../core/utils/type\";\r\nexport default class FormItemsRunTimeInfo {\r\n    constructor() {\r\n        this._map = {}\r\n    }\r\n    _findWidgetInstance(condition) {\r\n        var result;\r\n        each(this._map, (function(guid, _ref) {\r\n            var {\r\n                widgetInstance: widgetInstance,\r\n                item: item\r\n            } = _ref;\r\n            if (condition(item)) {\r\n                result = widgetInstance;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _findFieldByCondition(callback, valueExpr) {\r\n        var result;\r\n        each(this._map, (function(key, value) {\r\n            if (callback(value)) {\r\n                result = \"guid\" === valueExpr ? key : value[valueExpr];\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    clear() {\r\n        this._map = {}\r\n    }\r\n    removeItemsByItems(itemsRunTimeInfo) {\r\n        each(itemsRunTimeInfo.getItems(), guid => this.removeItemByKey(guid))\r\n    }\r\n    removeItemByKey(key) {\r\n        delete this._map[key]\r\n    }\r\n    add(options) {\r\n        var key = options.guid || new Guid;\r\n        this._map[key] = options;\r\n        return key\r\n    }\r\n    addItemsOrExtendFrom(itemsRunTimeInfo) {\r\n        itemsRunTimeInfo.each((key, itemRunTimeInfo) => {\r\n            if (this._map[key]) {\r\n                if (itemRunTimeInfo.widgetInstance) {\r\n                    this._map[key].widgetInstance = itemRunTimeInfo.widgetInstance\r\n                }\r\n                this._map[key].$itemContainer = itemRunTimeInfo.$itemContainer\r\n            } else {\r\n                this.add({\r\n                    item: itemRunTimeInfo.item,\r\n                    widgetInstance: itemRunTimeInfo.widgetInstance,\r\n                    guid: key,\r\n                    $itemContainer: itemRunTimeInfo.$itemContainer\r\n                })\r\n            }\r\n        })\r\n    }\r\n    extendRunTimeItemInfoByKey(key, options) {\r\n        if (this._map[key]) {\r\n            this._map[key] = extend(this._map[key], options)\r\n        }\r\n    }\r\n    findWidgetInstanceByItem(item) {\r\n        return this._findWidgetInstance(storedItem => storedItem === item)\r\n    }\r\n    findGroupOrTabLayoutManagerByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref2 => {\r\n            var {\r\n                path: path\r\n            } = _ref2;\r\n            return path === targetPath\r\n        }, \"layoutManager\")\r\n    }\r\n    findKeyByPath(targetPath) {\r\n        return this._findFieldByCondition(_ref3 => {\r\n            var {\r\n                path: path\r\n            } = _ref3;\r\n            return path === targetPath\r\n        }, \"guid\")\r\n    }\r\n    findWidgetInstanceByName(name) {\r\n        return this._findWidgetInstance(item => name === item.name)\r\n    }\r\n    findWidgetInstanceByDataField(dataField) {\r\n        return this._findWidgetInstance(item => dataField === (isString(item) ? item : item.dataField))\r\n    }\r\n    findItemContainerByItem(item) {\r\n        for (var key in this._map) {\r\n            if (this._map[key].item === item) {\r\n                return this._map[key].$itemContainer\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    findItemIndexByItem(targetItem) {\r\n        return this._findFieldByCondition(_ref4 => {\r\n            var {\r\n                item: item\r\n            } = _ref4;\r\n            return item === targetItem\r\n        }, \"itemIndex\")\r\n    }\r\n    findPreparedItemByItem(item) {\r\n        return this._findFieldByCondition(_ref5 => {\r\n            var {\r\n                item: currentItem\r\n            } = _ref5;\r\n            return currentItem === item\r\n        }, \"preparedItem\")\r\n    }\r\n    getItems() {\r\n        return this._map\r\n    }\r\n    each(handler) {\r\n        each(this._map, (function(key, itemRunTimeInfo) {\r\n            handler(key, itemRunTimeInfo)\r\n        }))\r\n    }\r\n    removeItemsByPathStartWith(path) {\r\n        var keys = Object.keys(this._map);\r\n        var filteredKeys = keys.filter(key => {\r\n            if (this._map[key].path) {\r\n                return this._map[key].path.indexOf(path, 0) > -1\r\n            }\r\n            return false\r\n        });\r\n        filteredKeys.forEach(key => this.removeItemByKey(key))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}