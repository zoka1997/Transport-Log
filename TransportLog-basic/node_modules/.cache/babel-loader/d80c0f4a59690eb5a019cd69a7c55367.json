{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.views.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport BaseView from \"./ui.calendar.base_view\";\nimport { noop } from \"../../core/utils/common\";\nimport dateUtils from \"../../core/utils/date\";\nimport { extend } from \"../../core/utils/extend\";\nimport dateLocalization from \"../../localization/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { isDefined } from \"../../core/utils/type\";\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\";\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\nvar Views = {\n  month: BaseView.inherit({\n    _getViewName: function () {\n      return \"month\";\n    },\n    _getDefaultOptions: function () {\n      return extend(this.callBase(), {\n        firstDayOfWeek: void 0,\n        rowCount: 6,\n        colCount: 7\n      });\n    },\n    _renderImpl: function () {\n      this.callBase();\n\n      this._renderHeader();\n    },\n    _renderBody: function () {\n      this.callBase();\n\n      this._$table.find(\".\".concat(CALENDAR_OTHER_VIEW_CLASS)).addClass(CALENDAR_OTHER_MONTH_CLASS);\n    },\n    _renderFocusTarget: noop,\n    getCellAriaLabel: function (date) {\n      return dateLocalization.format(date, \"longdate\");\n    },\n    _renderHeader: function () {\n      var $headerRow = $(\"<tr>\");\n      var $header = $(\"<thead>\").append($headerRow);\n\n      this._$table.prepend($header);\n\n      for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\n        this._renderHeaderCell(colIndex, $headerRow);\n      }\n    },\n    _renderHeaderCell: function (cellIndex, $headerRow) {\n      var {\n        full: fullCaption,\n        abbreviated: abbrCaption\n      } = this._getDayCaption(this._getFirstDayOfWeek() + cellIndex);\n\n      var $cell = $(\"<th>\").attr({\n        scope: \"col\",\n        abbr: fullCaption\n      }).text(abbrCaption);\n\n      this._appendCell($headerRow, $cell);\n    },\n    getNavigatorCaption: function () {\n      return dateLocalization.format(this.option(\"date\"), \"monthandyear\");\n    },\n    _isTodayCell: function (cellDate) {\n      var today = this.option(\"_todayDate\")();\n      return dateUtils.sameDate(cellDate, today);\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var minDate = this.option(\"min\");\n      var maxDate = this.option(\"max\");\n      return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\");\n    },\n    _isOtherView: function (cellDate) {\n      return cellDate.getMonth() !== this.option(\"date\").getMonth();\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.format(cellDate, \"d\");\n    },\n    _getDayCaption: function (day) {\n      var daysInWeek = this.option(\"colCount\");\n      var dayIndex = day % daysInWeek;\n      return {\n        full: dateLocalization.getDayNames()[dayIndex],\n        abbreviated: dateLocalization.getDayNames(\"abbreviated\")[dayIndex]\n      };\n    },\n    _getFirstCellData: function () {\n      var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\"));\n      var firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay();\n      var daysInWeek = this.option(\"colCount\");\n\n      if (firstMonthDayOffset >= 0) {\n        firstMonthDayOffset -= daysInWeek;\n      }\n\n      firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\n      return firstDay;\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setDate(date.getDate() + 1);\n      return date;\n    },\n    _getFirstDayOfWeek: function () {\n      return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex();\n    },\n    _getCellByDate: function (date) {\n      return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()), \"']\"));\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"));\n    },\n    _getDefaultDisabledDatesHandler: function (disabledDates) {\n      return function (args) {\n        var isDisabledDate = disabledDates.some(function (item) {\n          return dateUtils.sameDate(item, args.date);\n        });\n\n        if (isDisabledDate) {\n          return true;\n        }\n      };\n    }\n  }),\n  year: BaseView.inherit({\n    _getViewName: function () {\n      return \"year\";\n    },\n    _isTodayCell: function (cellDate) {\n      var today = this.option(\"_todayDate\")();\n      return dateUtils.sameMonthAndYear(cellDate, today);\n    },\n    _isDateOutOfRange: function (cellDate) {\n      return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")));\n    },\n    _isOtherView: function () {\n      return false;\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()];\n    },\n    _getFirstCellData: function () {\n      var currentDate = this.option(\"date\");\n      var data = new Date(currentDate);\n      data.setDate(1);\n      data.setMonth(0);\n      return data;\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setMonth(date.getMonth() + 1);\n      return date;\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"));\n    },\n    getCellAriaLabel: function (date) {\n      return dateLocalization.format(date, \"monthandyear\");\n    },\n    getNavigatorCaption: function () {\n      return dateLocalization.format(this.option(\"date\"), \"yyyy\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"));\n    }\n  }),\n  decade: BaseView.inherit({\n    _getViewName: function () {\n      return \"decade\";\n    },\n    _isTodayCell: function (cellDate) {\n      var today = this.option(\"_todayDate\")();\n      return dateUtils.sameYear(cellDate, today);\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var min = this.option(\"min\");\n      var max = this.option(\"max\");\n      return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear());\n    },\n    _isOtherView: function (cellDate) {\n      var date = new Date(cellDate);\n      date.setMonth(1);\n      return !dateUtils.sameDecade(date, this.option(\"date\"));\n    },\n    _getCellText: function (cellDate) {\n      return dateLocalization.format(cellDate, \"yyyy\");\n    },\n    _getFirstCellData: function () {\n      var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\n      return dateUtils.createDateWithFullYear(year, 0, 1);\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setFullYear(date.getFullYear() + 1);\n      return date;\n    },\n    getNavigatorCaption: function () {\n      var currentDate = this.option(\"date\");\n      var firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate);\n      var startDate = new Date(currentDate);\n      var endDate = new Date(currentDate);\n      startDate.setFullYear(firstYearInDecade);\n      endDate.setFullYear(firstYearInDecade + 9);\n      return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    _isValueOnCurrentView: function (currentDate, value) {\n      return dateUtils.sameDecade(currentDate, value);\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      foundDate.setMonth(0);\n      return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"));\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"));\n    }\n  }),\n  century: BaseView.inherit({\n    _getViewName: function () {\n      return \"century\";\n    },\n    _isTodayCell: function (cellDate) {\n      var today = this.option(\"_todayDate\")();\n      return dateUtils.sameDecade(cellDate, today);\n    },\n    _isDateOutOfRange: function (cellDate) {\n      var decade = dateUtils.getFirstYearInDecade(cellDate);\n      var minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\"));\n      var maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\n      return !dateUtils.dateInRange(decade, minDecade, maxDecade);\n    },\n    _isOtherView: function (cellDate) {\n      var date = new Date(cellDate);\n      date.setMonth(1);\n      return !dateUtils.sameCentury(date, this.option(\"date\"));\n    },\n    _getCellText: function (cellDate) {\n      var startDate = dateLocalization.format(cellDate, \"yyyy\");\n      var endDate = new Date(cellDate);\n      endDate.setFullYear(endDate.getFullYear() + 9);\n      return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    _getFirstCellData: function () {\n      var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\n      return dateUtils.createDateWithFullYear(decade, 0, 1);\n    },\n    _getNextCellData: function (date) {\n      date = new Date(date);\n      date.setFullYear(date.getFullYear() + 10);\n      return date;\n    },\n    _getCellByDate: function (date) {\n      var foundDate = new Date(date);\n      foundDate.setDate(1);\n      foundDate.setMonth(0);\n      foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\n      return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"));\n    },\n    getNavigatorCaption: function () {\n      var currentDate = this.option(\"date\");\n      var firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate);\n      var startDate = new Date(currentDate);\n      var endDate = new Date(currentDate);\n      startDate.setFullYear(firstDecadeInCentury);\n      endDate.setFullYear(firstDecadeInCentury + 99);\n      return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\");\n    },\n    isBoundary: function (date) {\n      return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"));\n    }\n  })\n};\nexport default Views;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/calendar/ui.calendar.views.js"],"names":["$","BaseView","noop","dateUtils","extend","dateLocalization","dateSerialization","isDefined","CALENDAR_OTHER_MONTH_CLASS","CALENDAR_OTHER_VIEW_CLASS","Views","month","inherit","_getViewName","_getDefaultOptions","callBase","firstDayOfWeek","rowCount","colCount","_renderImpl","_renderHeader","_renderBody","_$table","find","concat","addClass","_renderFocusTarget","getCellAriaLabel","date","format","$headerRow","$header","append","prepend","colIndex","option","_renderHeaderCell","cellIndex","full","fullCaption","abbreviated","abbrCaption","_getDayCaption","_getFirstDayOfWeek","$cell","attr","scope","abbr","text","_appendCell","getNavigatorCaption","_isTodayCell","cellDate","today","sameDate","_isDateOutOfRange","minDate","maxDate","dateInRange","_isOtherView","getMonth","_getCellText","day","daysInWeek","dayIndex","getDayNames","_getFirstCellData","firstDay","getFirstMonthDate","firstMonthDayOffset","getDay","setDate","getDate","_getNextCellData","Date","firstDayOfWeekIndex","_getCellByDate","serializeDate","getShortDateFormat","isBoundary","sameMonthAndYear","_getDefaultDisabledDatesHandler","disabledDates","args","isDisabledDate","some","item","year","getLastMonthDate","getMonthNames","currentDate","data","setMonth","foundDate","sameYear","decade","min","max","getFullYear","sameDecade","getFirstYearInDecade","createDateWithFullYear","setFullYear","firstYearInDecade","startDate","endDate","_isValueOnCurrentView","value","century","minDecade","maxDecade","sameCentury","getFirstDecadeInCentury","firstDecadeInCentury"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/calendar/ui.calendar.views.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport BaseView from \"./ui.calendar.base_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar CALENDAR_OTHER_MONTH_CLASS = \"dx-calendar-other-month\";\r\nvar CALENDAR_OTHER_VIEW_CLASS = \"dx-calendar-other-view\";\r\nvar Views = {\r\n    month: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"month\"\r\n        },\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                firstDayOfWeek: void 0,\r\n                rowCount: 6,\r\n                colCount: 7\r\n            })\r\n        },\r\n        _renderImpl: function() {\r\n            this.callBase();\r\n            this._renderHeader()\r\n        },\r\n        _renderBody: function() {\r\n            this.callBase();\r\n            this._$table.find(\".\".concat(CALENDAR_OTHER_VIEW_CLASS)).addClass(CALENDAR_OTHER_MONTH_CLASS)\r\n        },\r\n        _renderFocusTarget: noop,\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"longdate\")\r\n        },\r\n        _renderHeader: function() {\r\n            var $headerRow = $(\"<tr>\");\r\n            var $header = $(\"<thead>\").append($headerRow);\r\n            this._$table.prepend($header);\r\n            for (var colIndex = 0, colCount = this.option(\"colCount\"); colIndex < colCount; colIndex++) {\r\n                this._renderHeaderCell(colIndex, $headerRow)\r\n            }\r\n        },\r\n        _renderHeaderCell: function(cellIndex, $headerRow) {\r\n            var {\r\n                full: fullCaption,\r\n                abbreviated: abbrCaption\r\n            } = this._getDayCaption(this._getFirstDayOfWeek() + cellIndex);\r\n            var $cell = $(\"<th>\").attr({\r\n                scope: \"col\",\r\n                abbr: fullCaption\r\n            }).text(abbrCaption);\r\n            this._appendCell($headerRow, $cell)\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"monthandyear\")\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return dateUtils.sameDate(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var minDate = this.option(\"min\");\r\n            var maxDate = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate, minDate, maxDate, \"date\")\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            return cellDate.getMonth() !== this.option(\"date\").getMonth()\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"d\")\r\n        },\r\n        _getDayCaption: function(day) {\r\n            var daysInWeek = this.option(\"colCount\");\r\n            var dayIndex = day % daysInWeek;\r\n            return {\r\n                full: dateLocalization.getDayNames()[dayIndex],\r\n                abbreviated: dateLocalization.getDayNames(\"abbreviated\")[dayIndex]\r\n            }\r\n        },\r\n        _getFirstCellData: function() {\r\n            var firstDay = dateUtils.getFirstMonthDate(this.option(\"date\"));\r\n            var firstMonthDayOffset = this._getFirstDayOfWeek() - firstDay.getDay();\r\n            var daysInWeek = this.option(\"colCount\");\r\n            if (firstMonthDayOffset >= 0) {\r\n                firstMonthDayOffset -= daysInWeek\r\n            }\r\n            firstDay.setDate(firstDay.getDate() + firstMonthDayOffset);\r\n            return firstDay\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setDate(date.getDate() + 1);\r\n            return date\r\n        },\r\n        _getFirstDayOfWeek: function() {\r\n            return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n        },\r\n        _getCellByDate: function(date) {\r\n            return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(date, dateUtils.getShortDateFormat()), \"']\"))\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameMonthAndYear(date, this.option(\"min\")) || dateUtils.sameMonthAndYear(date, this.option(\"max\"))\r\n        },\r\n        _getDefaultDisabledDatesHandler: function(disabledDates) {\r\n            return function(args) {\r\n                var isDisabledDate = disabledDates.some((function(item) {\r\n                    return dateUtils.sameDate(item, args.date)\r\n                }));\r\n                if (isDisabledDate) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }),\r\n    year: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"year\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return dateUtils.sameMonthAndYear(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            return !dateUtils.dateInRange(cellDate, dateUtils.getFirstMonthDate(this.option(\"min\")), dateUtils.getLastMonthDate(this.option(\"max\")))\r\n        },\r\n        _isOtherView: function() {\r\n            return false\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.getMonthNames(\"abbreviated\")[cellDate.getMonth()]\r\n        },\r\n        _getFirstCellData: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var data = new Date(currentDate);\r\n            data.setDate(1);\r\n            data.setMonth(0);\r\n            return data\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setMonth(date.getMonth() + 1);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"))\r\n        },\r\n        getCellAriaLabel: function(date) {\r\n            return dateLocalization.format(date, \"monthandyear\")\r\n        },\r\n        getNavigatorCaption: function() {\r\n            return dateLocalization.format(this.option(\"date\"), \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameYear(date, this.option(\"min\")) || dateUtils.sameYear(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    decade: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"decade\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return dateUtils.sameYear(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var min = this.option(\"min\");\r\n            var max = this.option(\"max\");\r\n            return !dateUtils.dateInRange(cellDate.getFullYear(), min && min.getFullYear(), max && max.getFullYear())\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameDecade(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            return dateLocalization.format(cellDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var year = dateUtils.getFirstYearInDecade(this.option(\"date\")) - 1;\r\n            return dateUtils.createDateWithFullYear(year, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n            return date\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstYearInDecade = dateUtils.getFirstYearInDecade(currentDate);\r\n            var startDate = new Date(currentDate);\r\n            var endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstYearInDecade);\r\n            endDate.setFullYear(firstYearInDecade + 9);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _isValueOnCurrentView: function(currentDate, value) {\r\n            return dateUtils.sameDecade(currentDate, value)\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"))\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameDecade(date, this.option(\"min\")) || dateUtils.sameDecade(date, this.option(\"max\"))\r\n        }\r\n    }),\r\n    century: BaseView.inherit({\r\n        _getViewName: function() {\r\n            return \"century\"\r\n        },\r\n        _isTodayCell: function(cellDate) {\r\n            var today = this.option(\"_todayDate\")();\r\n            return dateUtils.sameDecade(cellDate, today)\r\n        },\r\n        _isDateOutOfRange: function(cellDate) {\r\n            var decade = dateUtils.getFirstYearInDecade(cellDate);\r\n            var minDecade = dateUtils.getFirstYearInDecade(this.option(\"min\"));\r\n            var maxDecade = dateUtils.getFirstYearInDecade(this.option(\"max\"));\r\n            return !dateUtils.dateInRange(decade, minDecade, maxDecade)\r\n        },\r\n        _isOtherView: function(cellDate) {\r\n            var date = new Date(cellDate);\r\n            date.setMonth(1);\r\n            return !dateUtils.sameCentury(date, this.option(\"date\"))\r\n        },\r\n        _getCellText: function(cellDate) {\r\n            var startDate = dateLocalization.format(cellDate, \"yyyy\");\r\n            var endDate = new Date(cellDate);\r\n            endDate.setFullYear(endDate.getFullYear() + 9);\r\n            return startDate + \" - \" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        _getFirstCellData: function() {\r\n            var decade = dateUtils.getFirstDecadeInCentury(this.option(\"date\")) - 10;\r\n            return dateUtils.createDateWithFullYear(decade, 0, 1)\r\n        },\r\n        _getNextCellData: function(date) {\r\n            date = new Date(date);\r\n            date.setFullYear(date.getFullYear() + 10);\r\n            return date\r\n        },\r\n        _getCellByDate: function(date) {\r\n            var foundDate = new Date(date);\r\n            foundDate.setDate(1);\r\n            foundDate.setMonth(0);\r\n            foundDate.setFullYear(dateUtils.getFirstYearInDecade(foundDate));\r\n            return this._$table.find(\"td[data-value='\".concat(dateSerialization.serializeDate(foundDate, dateUtils.getShortDateFormat()), \"']\"))\r\n        },\r\n        getNavigatorCaption: function() {\r\n            var currentDate = this.option(\"date\");\r\n            var firstDecadeInCentury = dateUtils.getFirstDecadeInCentury(currentDate);\r\n            var startDate = new Date(currentDate);\r\n            var endDate = new Date(currentDate);\r\n            startDate.setFullYear(firstDecadeInCentury);\r\n            endDate.setFullYear(firstDecadeInCentury + 99);\r\n            return dateLocalization.format(startDate, \"yyyy\") + \"-\" + dateLocalization.format(endDate, \"yyyy\")\r\n        },\r\n        isBoundary: function(date) {\r\n            return dateUtils.sameCentury(date, this.option(\"min\")) || dateUtils.sameCentury(date, this.option(\"max\"))\r\n        }\r\n    })\r\n};\r\nexport default Views;\r\n"]},"metadata":{},"sourceType":"module"}