{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../core/component_registrator\";\nimport config from \"../../core/config\";\nimport devices from \"../../core/devices\";\nimport $ from \"../../core/renderer\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport { EmptyTemplate } from \"../../core/templates/empty_template\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { noop } from \"../../core/utils/common\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport dateUtils from \"../../core/utils/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { Deferred, when, fromPromise } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined, isString, isObject, isFunction, isEmptyObject, isDeferred, isPromise } from \"../../core/utils/type\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport DataHelperMixin from \"../../data_helper\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport { custom as customDialog } from \"../dialog\";\nimport { isMaterial } from \"../themes\";\nimport errors from \"../widget/ui.errors\";\nimport Widget from \"../widget/ui.widget\";\nimport { AppointmentPopup, ACTION_TO_APPOINTMENT } from \"./appointmentPopup/popup\";\nimport { AppointmentForm } from \"./appointmentPopup/form\";\nimport { CompactAppointmentsHelper } from \"./compactAppointmentsHelper\";\nimport { DesktopTooltipStrategy } from \"./tooltip_strategies/desktopTooltipStrategy\";\nimport { MobileTooltipStrategy } from \"./tooltip_strategies/mobileTooltipStrategy\";\nimport { hide as hideLoading, show as showLoading } from \"./loading\";\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\nimport { SchedulerHeader } from \"./header/header\";\nimport subscribes from \"./subscribes\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport timeZoneUtils from \"./utils.timeZone\";\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\nimport { createAppointmentAdapter } from \"./appointmentAdapter\";\nimport { AppointmentTooltipInfo } from \"./dataStructures\";\nimport { utils } from \"./utils\";\nimport { createExpressions, createResourceEditorModel as _createResourceEditorModel, getAppointmentColor, getCellGroups, loadResources, setResourceToAppointment } from \"./resources/utils\";\nimport { ExpressionUtils } from \"./expressionUtils\";\nimport { validateDayHours, isDateAndTimeView as _isDateAndTimeView, isTimelineView } from \"../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { renderAppointments } from \"./appointments/render\";\nimport { AgendaResourceProcessor } from \"./resources/agendaResourceProcessor\";\nimport { AppointmentDataProvider } from \"./appointments/dataProvider/appointmentDataProvider\";\nimport { getAppointmentTakesAllDay } from \"../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay\";\nimport { getPreparedDataItems } from \"../../renovation/ui/scheduler/utils/data\";\nimport { getCurrentView } from \"../../renovation/ui/scheduler/model/views\";\nimport { createTimeZoneCalculator } from \"../../renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator\";\nimport { excludeFromRecurrence } from \"../../renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence\";\nvar MINUTES_IN_HOUR = 60;\nvar DEFAULT_AGENDA_DURATION = 7;\nvar WIDGET_CLASS = \"dx-scheduler\";\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\nvar WIDGET_SMALL_WIDTH = 400;\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\nvar DEFAULT_APPOINTMENT_TEMPLATE_NAME = \"item\";\nvar DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME = \"appointmentCollector\";\nvar DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME = \"dropDownAppointment\";\nvar VIEWS_CONFIG = {\n  day: {\n    workSpace: SchedulerWorkSpaceDay,\n    renderingStrategy: \"vertical\"\n  },\n  week: {\n    workSpace: SchedulerWorkSpaceWeek,\n    renderingStrategy: \"vertical\"\n  },\n  workWeek: {\n    workSpace: SchedulerWorkSpaceWorkWeek,\n    renderingStrategy: \"vertical\"\n  },\n  month: {\n    workSpace: SchedulerWorkSpaceMonth,\n    renderingStrategy: \"horizontalMonth\"\n  },\n  timelineDay: {\n    workSpace: SchedulerTimelineDay,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWeek: {\n    workSpace: SchedulerTimelineWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWorkWeek: {\n    workSpace: SchedulerTimelineWorkWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineMonth: {\n    workSpace: SchedulerTimelineMonth,\n    renderingStrategy: \"horizontalMonthLine\"\n  },\n  agenda: {\n    workSpace: SchedulerAgenda,\n    renderingStrategy: \"agenda\"\n  }\n};\nvar StoreEventNames = {\n  ADDING: \"onAppointmentAdding\",\n  ADDED: \"onAppointmentAdded\",\n  DELETING: \"onAppointmentDeleting\",\n  DELETED: \"onAppointmentDeleted\",\n  UPDATING: \"onAppointmentUpdating\",\n  UPDATED: \"onAppointmentUpdated\"\n};\nvar RECURRENCE_EDITING_MODE = {\n  SERIES: \"editSeries\",\n  OCCURENCE: \"editOccurence\",\n  CANCEL: \"cancel\"\n};\n\nclass Scheduler extends Widget {\n  _getDefaultOptions() {\n    var defaultOptions = extend(super._getDefaultOptions(), {\n      views: [\"day\", \"week\"],\n      currentView: \"day\",\n      currentDate: dateUtils.trimTime(new Date()),\n      min: void 0,\n      max: void 0,\n      dateSerializationFormat: void 0,\n      firstDayOfWeek: void 0,\n      groups: [],\n      resources: [],\n      loadedResources: [],\n      resourceLoaderMap: new Map(),\n      dataSource: null,\n      customizeDateNavigatorText: void 0,\n      appointmentTemplate: DEFAULT_APPOINTMENT_TEMPLATE_NAME,\n      dropDownAppointmentTemplate: DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME,\n      appointmentCollectorTemplate: DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME,\n      dataCellTemplate: null,\n      timeCellTemplate: null,\n      resourceCellTemplate: null,\n      dateCellTemplate: null,\n      startDayHour: 0,\n      endDayHour: 24,\n      editing: {\n        allowAdding: true,\n        allowDeleting: true,\n        allowDragging: true,\n        allowResizing: true,\n        allowUpdating: true,\n        allowTimeZoneEditing: false\n      },\n      showAllDayPanel: true,\n      showCurrentTimeIndicator: true,\n      shadeUntilCurrentTime: false,\n      indicatorUpdateInterval: 3e5,\n      indicatorTime: void 0,\n      recurrenceEditMode: \"dialog\",\n      cellDuration: 30,\n      maxAppointmentsPerCell: \"auto\",\n      selectedCellData: [],\n      groupByDate: false,\n      onAppointmentRendered: null,\n      onAppointmentClick: null,\n      onAppointmentDblClick: null,\n      onAppointmentContextMenu: null,\n      onCellClick: null,\n      onCellContextMenu: null,\n      onAppointmentAdding: null,\n      onAppointmentAdded: null,\n      onAppointmentUpdating: null,\n      onAppointmentUpdated: null,\n      onAppointmentDeleting: null,\n      onAppointmentDeleted: null,\n      onAppointmentFormOpening: null,\n      onAppointmentTooltipShowing: null,\n      appointmentTooltipTemplate: \"appointmentTooltip\",\n      appointmentPopupTemplate: \"appointmentPopup\",\n      crossScrollingEnabled: false,\n      useDropDownViewSwitcher: false,\n      startDateExpr: \"startDate\",\n      endDateExpr: \"endDate\",\n      textExpr: \"text\",\n      descriptionExpr: \"description\",\n      allDayExpr: \"allDay\",\n      recurrenceRuleExpr: \"recurrenceRule\",\n      recurrenceExceptionExpr: \"recurrenceException\",\n      disabledExpr: \"disabled\",\n      remoteFiltering: false,\n      timeZone: \"\",\n      startDateTimeZoneExpr: \"startDateTimeZone\",\n      endDateTimeZoneExpr: \"endDateTimeZone\",\n      noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\n      adaptivityEnabled: false,\n      allowMultipleCellSelection: true,\n      scrolling: {\n        mode: \"standard\"\n      },\n      allDayPanelMode: \"all\",\n      renovateRender: true,\n      _draggingMode: \"outlook\",\n      _appointmentTooltipOffset: {\n        x: 0,\n        y: 0\n      },\n      _appointmentTooltipButtonsPosition: \"bottom\",\n      _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\n      _dropDownButtonIcon: \"overflow\",\n      _appointmentCountPerCell: 2,\n      _collectorOffset: 0,\n      _appointmentOffset: 26,\n      toolbar: [{\n        location: \"before\",\n        defaultElement: \"dateNavigator\"\n      }, {\n        location: \"after\",\n        defaultElement: \"viewSwitcher\"\n      }]\n    });\n    return extend(true, defaultOptions, {\n      integrationOptions: {\n        useDeferUpdateForTemplates: false\n      }\n    });\n  }\n\n  get filteredItems() {\n    if (!this._filteredItems) {\n      this._filteredItems = [];\n    }\n\n    return this._filteredItems;\n  }\n\n  set filteredItems(value) {\n    this._filteredItems = value;\n  }\n\n  get preparedItems() {\n    if (!this._preparedItems) {\n      this._preparedItems = [];\n    }\n\n    return this._preparedItems;\n  }\n\n  set preparedItems(value) {\n    this._preparedItems = value;\n  }\n\n  get currentView() {\n    return getCurrentView(this.option(\"currentView\"), this.option(\"views\"));\n  }\n\n  get currentViewType() {\n    return isObject(this.currentView) ? this.currentView.type : this.currentView;\n  }\n\n  get timeZoneCalculator() {\n    if (!this._timeZoneCalculator) {\n      this._timeZoneCalculator = createTimeZoneCalculator(this.option(\"timeZone\"));\n    }\n\n    return this._timeZoneCalculator;\n  }\n\n  _setDeprecatedOptions() {\n    super._setDeprecatedOptions();\n\n    extend(this._deprecatedOptions, {\n      dropDownAppointmentTemplate: {\n        since: \"19.2\",\n        message: \"appointmentTooltipTemplate\"\n      }\n    });\n  }\n\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: function () {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: function () {\n        return !devices.current().generic;\n      },\n      options: {\n        useDropDownViewSwitcher: true,\n        editing: {\n          allowDragging: false,\n          allowResizing: false\n        }\n      }\n    }, {\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        useDropDownViewSwitcher: true,\n        dateCellTemplate: function (data, index, element) {\n          var text = data.text;\n          text.split(\" \").forEach(function (text, index) {\n            var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\n            $(element).append(span);\n\n            if (!index) {\n              $(element).append(\" \");\n            }\n          });\n        },\n        _appointmentTooltipOffset: {\n          x: 0,\n          y: 11\n        },\n        _appointmentTooltipButtonsPosition: \"top\",\n        _appointmentTooltipOpenButtonText: null,\n        _dropDownButtonIcon: \"chevrondown\",\n        _appointmentCountPerCell: 1,\n        _collectorOffset: 20,\n        _appointmentOffset: 30\n      }\n    }]);\n  }\n\n  _postponeDataSourceLoading(promise) {\n    this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise);\n  }\n\n  _postponeResourceLoading() {\n    var whenLoaded = this.postponedOperations.add(\"loadResources\", () => {\n      var groups = this._getCurrentViewOption(\"groups\");\n\n      return loadResources(groups, this.option(\"resources\"), this.option(\"resourceLoaderMap\"));\n    });\n    var resolveCallbacks = new Deferred();\n    whenLoaded.done(resources => {\n      this.option(\"loadedResources\", resources);\n      resolveCallbacks.resolve(resources);\n    });\n\n    this._postponeDataSourceLoading(whenLoaded);\n\n    return resolveCallbacks.promise();\n  }\n\n  _optionChanged(args) {\n    var _this$_header, _this$_header2, _this$_header4;\n\n    var value = args.value;\n    var name = args.name;\n\n    switch (args.name) {\n      case \"customizeDateNavigatorText\":\n        this._updateOption(\"header\", name, value);\n\n        break;\n\n      case \"firstDayOfWeek\":\n        this._updateOption(\"workSpace\", name, value);\n\n        this._updateOption(\"header\", name, value);\n\n        break;\n\n      case \"currentDate\":\n        value = this._dateOption(name);\n        value = dateUtils.trimTime(new Date(value));\n        this.option(\"selectedCellData\", []);\n\n        this._workSpace.option(name, new Date(value));\n\n        null === (_this$_header = this._header) || void 0 === _this$_header ? void 0 : _this$_header.option(name, new Date(value));\n        null === (_this$_header2 = this._header) || void 0 === _this$_header2 ? void 0 : _this$_header2.option(\"startViewDate\", this.getStartViewDate());\n\n        this._appointments.option(\"items\", []);\n\n        this._filterAppointmentsByDate();\n\n        this._postponeDataSourceLoading();\n\n        break;\n\n      case \"dataSource\":\n        this._initDataSource();\n\n        this.appointmentDataProvider.setDataSource(this._dataSource);\n\n        this._postponeResourceLoading().done(resources => {\n          this._filterAppointmentsByDate();\n\n          this._updateOption(\"workSpace\", \"showAllDayPanel\", this.option(\"showAllDayPanel\"));\n        });\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        value = this._dateOption(name);\n\n        this._updateOption(\"header\", name, new Date(value));\n\n        this._updateOption(\"workSpace\", name, new Date(value));\n\n        break;\n\n      case \"views\":\n        if (this._getCurrentViewOptions()) {\n          this.repaint();\n        } else {\n          var _this$_header3;\n\n          null === (_this$_header3 = this._header) || void 0 === _this$_header3 ? void 0 : _this$_header3.option(name, value);\n        }\n\n        break;\n\n      case \"useDropDownViewSwitcher\":\n        null === (_this$_header4 = this._header) || void 0 === _this$_header4 ? void 0 : _this$_header4.option(name, value);\n        break;\n\n      case \"currentView\":\n        this._validateDayHours();\n\n        this._validateCellDuration();\n\n        this._appointments.option({\n          items: [],\n          allowDrag: this._allowDragging(),\n          allowResize: this._allowResizing(),\n          itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\n        });\n\n        this._postponeResourceLoading().done(resources => {\n          var _this$_header5;\n\n          this._refreshWorkSpace(resources);\n\n          null === (_this$_header5 = this._header) || void 0 === _this$_header5 ? void 0 : _this$_header5.option(this._headerConfig());\n\n          this._filterAppointmentsByDate();\n\n          this._appointments.option(\"allowAllDayResize\", \"day\" !== value);\n        });\n\n        this.postponedOperations.callPostponedOperations();\n        break;\n\n      case \"appointmentTemplate\":\n        this._appointments.option(\"itemTemplate\", value);\n\n        break;\n\n      case \"dateCellTemplate\":\n      case \"resourceCellTemplate\":\n      case \"dataCellTemplate\":\n      case \"timeCellTemplate\":\n        this.repaint();\n        break;\n\n      case \"groups\":\n        this._postponeResourceLoading().done(resources => {\n          this._refreshWorkSpace(resources);\n\n          this._filterAppointmentsByDate();\n        });\n\n        break;\n\n      case \"resources\":\n        this._dataAccessors.resources = createExpressions(this.option(\"resources\"));\n        this.agendaResourceProcessor.initializeState(this.option(\"resources\"));\n        this.updateInstances();\n\n        this._postponeResourceLoading().done(resources => {\n          this._appointments.option(\"items\", []);\n\n          this._refreshWorkSpace(resources);\n\n          this._filterAppointmentsByDate();\n\n          this._createAppointmentPopupForm();\n        });\n\n        break;\n\n      case \"startDayHour\":\n      case \"endDayHour\":\n        this._validateDayHours();\n\n        this.updateInstances();\n\n        this._appointments.option(\"items\", []);\n\n        this._updateOption(\"workSpace\", name, value);\n\n        this._appointments.repaint();\n\n        this._filterAppointmentsByDate();\n\n        this._postponeDataSourceLoading();\n\n        break;\n\n      case StoreEventNames.ADDING:\n      case StoreEventNames.ADDED:\n      case StoreEventNames.UPDATING:\n      case StoreEventNames.UPDATED:\n      case StoreEventNames.DELETING:\n      case StoreEventNames.DELETED:\n      case \"onAppointmentFormOpening\":\n      case \"onAppointmentTooltipShowing\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      case \"onAppointmentRendered\":\n        this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\n\n        break;\n\n      case \"onAppointmentClick\":\n        this._appointments.option(\"onItemClick\", this._createActionByOption(name));\n\n        break;\n\n      case \"onAppointmentDblClick\":\n        this._appointments.option(name, this._createActionByOption(name));\n\n        break;\n\n      case \"onAppointmentContextMenu\":\n        this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\n\n        break;\n\n      case \"noDataText\":\n      case \"allowMultipleCellSelection\":\n      case \"selectedCellData\":\n      case \"accessKey\":\n      case \"onCellClick\":\n      case \"onCellContextMenu\":\n        this._workSpace.option(name, value);\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        this._postponeResourceLoading().done(resources => {\n          this._appointments.option(\"items\", []);\n\n          this._refreshWorkSpace(resources);\n\n          if (this._readyToRenderAppointments) {\n            this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n          }\n        });\n\n        break;\n\n      case \"cellDuration\":\n        this._validateCellDuration();\n\n        this._updateOption(\"workSpace\", name, value);\n\n        this._appointments.option(\"items\", []);\n\n        if (this._readyToRenderAppointments) {\n          this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\n\n          this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n        }\n\n        break;\n\n      case \"tabIndex\":\n      case \"focusStateEnabled\":\n        this._updateOption(\"header\", name, value);\n\n        this._updateOption(\"workSpace\", name, value);\n\n        this._appointments.option(name, value);\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"width\":\n        this._updateOption(\"header\", name, value);\n\n        if (this.option(\"crossScrollingEnabled\")) {\n          this._updateOption(\"workSpace\", \"width\", value);\n        }\n\n        this._updateOption(\"workSpace\", \"schedulerWidth\", value);\n\n        super._optionChanged(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"height\":\n        super._optionChanged(args);\n\n        this._dimensionChanged();\n\n        this._updateOption(\"workSpace\", \"schedulerHeight\", value);\n\n        break;\n\n      case \"editing\":\n        this._initEditing();\n\n        var editing = this._editing;\n\n        this._bringEditingModeToAppointments(editing);\n\n        this.hideAppointmentTooltip();\n\n        this._cleanPopup();\n\n        break;\n\n      case \"showAllDayPanel\":\n        this.updateInstances();\n        this.repaint();\n        break;\n\n      case \"showCurrentTimeIndicator\":\n      case \"indicatorTime\":\n      case \"indicatorUpdateInterval\":\n      case \"shadeUntilCurrentTime\":\n      case \"groupByDate\":\n        this._updateOption(\"workSpace\", name, value);\n\n        this.repaint();\n        break;\n\n      case \"appointmentDragging\":\n      case \"appointmentTooltipTemplate\":\n      case \"appointmentPopupTemplate\":\n      case \"recurrenceEditMode\":\n      case \"remoteFiltering\":\n      case \"timeZone\":\n        this.updateInstances();\n        this.repaint();\n        break;\n\n      case \"dropDownAppointmentTemplate\":\n      case \"appointmentCollectorTemplate\":\n      case \"_appointmentTooltipOffset\":\n      case \"_appointmentTooltipButtonsPosition\":\n      case \"_appointmentTooltipOpenButtonText\":\n      case \"_dropDownButtonIcon\":\n      case \"_appointmentCountPerCell\":\n      case \"_collectorOffset\":\n      case \"_appointmentOffset\":\n        this.repaint();\n        break;\n\n      case \"dateSerializationFormat\":\n      case \"maxAppointmentsPerCell\":\n        break;\n\n      case \"startDateExpr\":\n      case \"endDateExpr\":\n      case \"startDateTimeZoneExpr\":\n      case \"endDateTimeZoneExpr\":\n      case \"textExpr\":\n      case \"descriptionExpr\":\n      case \"allDayExpr\":\n      case \"recurrenceRuleExpr\":\n      case \"recurrenceExceptionExpr\":\n      case \"disabledExpr\":\n        this._updateExpression(name, value);\n\n        this.appointmentDataProvider.updateDataAccessors(this._dataAccessors);\n\n        this._initAppointmentTemplate();\n\n        this.repaint();\n        break;\n\n      case \"adaptivityEnabled\":\n        this._toggleAdaptiveClass();\n\n        this.repaint();\n        break;\n\n      case \"scrolling\":\n        this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\n\n        this._updateOption(\"workSpace\", args.fullName, value);\n\n        break;\n\n      case \"allDayPanelMode\":\n        this._updateOption(\"workSpace\", args.fullName, value);\n\n        break;\n\n      case \"renovateRender\":\n        this._updateOption(\"workSpace\", name, value);\n\n        break;\n\n      case \"_draggingMode\":\n        this._workSpace.option(\"draggingMode\", value);\n\n        break;\n\n      case \"toolbar\":\n        this._header ? this._header.option(\"items\", value) : this.repaint();\n        break;\n\n      case \"loadedResources\":\n      case \"resourceLoaderMap\":\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _dateOption(optionName) {\n    var optionValue = this._getCurrentViewOption(optionName);\n\n    return dateSerialization.deserializeDate(optionValue);\n  }\n\n  _getSerializationFormat(optionName) {\n    var value = this._getCurrentViewOption(optionName);\n\n    if (\"number\" === typeof value) {\n      return \"number\";\n    }\n\n    if (!isString(value)) {\n      return;\n    }\n\n    return dateSerialization.getDateSerializationFormat(value);\n  }\n\n  _bringEditingModeToAppointments(editing) {\n    var editingConfig = {\n      allowDelete: editing.allowUpdating && editing.allowDeleting\n    };\n\n    if (!this._isAgenda()) {\n      editingConfig.allowDrag = editing.allowDragging;\n      editingConfig.allowResize = editing.allowResizing;\n      editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing();\n    }\n\n    this._appointments.option(editingConfig);\n\n    this.repaint();\n  }\n\n  _isAgenda() {\n    return \"agenda\" === this.getLayoutManager().appointmentRenderingStrategyName;\n  }\n\n  _allowDragging() {\n    return this._editing.allowDragging && !this._isAgenda();\n  }\n\n  _allowResizing() {\n    return this._editing.allowResizing && !this._isAgenda();\n  }\n\n  _allowAllDayResizing() {\n    return this._editing.allowResizing && this._supportAllDayResizing();\n  }\n\n  _supportAllDayResizing() {\n    return \"day\" !== this.currentViewType || this.currentView.intervalCount > 1;\n  }\n\n  _isAllDayExpanded() {\n    return this.option(\"showAllDayPanel\") && this.appointmentDataProvider.hasAllDayAppointments(this.filteredItems, this.preparedItems);\n  }\n\n  _getTimezoneOffsetByOption(date) {\n    return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date);\n  }\n\n  _filterAppointmentsByDate() {\n    var dateRange = this._workSpace.getDateRange();\n\n    var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\n      path: \"fromGrid\"\n    });\n    var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\n      path: \"fromGrid\"\n    });\n    this.appointmentDataProvider.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"));\n  }\n\n  _reloadDataSource() {\n    var result = new Deferred();\n\n    if (this._dataSource) {\n      this._dataSource.load().done(function () {\n        hideLoading();\n\n        this._fireContentReadyAction(result);\n      }.bind(this)).fail(function () {\n        hideLoading();\n        result.reject();\n      });\n\n      this._dataSource.isLoading() && showLoading({\n        container: this.$element(),\n        position: {\n          of: this.$element()\n        }\n      });\n    } else {\n      this._fireContentReadyAction(result);\n    }\n\n    return result.promise();\n  }\n\n  _fireContentReadyAction(result) {\n    var contentReadyBase = super._fireContentReadyAction.bind(this);\n\n    var fireContentReady = () => {\n      contentReadyBase();\n      null === result || void 0 === result ? void 0 : result.resolve();\n    };\n\n    if (this._workSpaceRecalculation) {\n      var _this$_workSpaceRecal;\n\n      null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {\n        fireContentReady();\n      });\n    } else {\n      fireContentReady();\n    }\n  }\n\n  _dimensionChanged() {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this._toggleSmallClass();\n\n    var workspace = this.getWorkSpace();\n\n    if (!this._isAgenda() && this.filteredItems && workspace) {\n      workspace.option(\"allDayExpanded\", this._isAllDayExpanded());\n\n      workspace._dimensionChanged();\n\n      var appointments = this.getLayoutManager().createAppointmentsMap(this.filteredItems);\n\n      this._appointments.option(\"items\", appointments);\n    }\n\n    this.hideAppointmentTooltip();\n\n    this._appointmentPopup.triggerResize();\n\n    this._appointmentPopup.updatePopupFullScreenMode();\n  }\n\n  _clean() {\n    this._cleanPopup();\n\n    super._clean();\n  }\n\n  _toggleSmallClass() {\n    var width = getBoundingRect(this.$element().get(0)).width;\n    this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH);\n  }\n\n  _toggleAdaptiveClass() {\n    this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"));\n  }\n\n  _visibilityChanged(visible) {\n    visible && this._dimensionChanged();\n  }\n\n  _dataSourceOptions() {\n    return {\n      paginate: false\n    };\n  }\n\n  _initAllDayPanel() {\n    if (\"hidden\" === this.option(\"allDayPanelMode\")) {\n      this.option(\"showAllDayPanel\", false);\n    }\n  }\n\n  _init() {\n    this._initExpressions({\n      startDate: this.option(\"startDateExpr\"),\n      endDate: this.option(\"endDateExpr\"),\n      startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\n      endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\n      allDay: this.option(\"allDayExpr\"),\n      text: this.option(\"textExpr\"),\n      description: this.option(\"descriptionExpr\"),\n      recurrenceRule: this.option(\"recurrenceRuleExpr\"),\n      recurrenceException: this.option(\"recurrenceExceptionExpr\"),\n      disabled: this.option(\"disabledExpr\")\n    });\n\n    super._init();\n\n    this._initAllDayPanel();\n\n    this._initDataSource();\n\n    this.$element().addClass(WIDGET_CLASS);\n\n    this._initEditing();\n\n    this.updateInstances();\n\n    this._initActions();\n\n    this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\n    this._asyncTemplatesTimers = [];\n    this._dataSourceLoadedCallback = Callbacks();\n    this._subscribes = subscribes;\n    this.agendaResourceProcessor = new AgendaResourceProcessor(this.option(\"resources\"));\n  }\n\n  createAppointmentDataProvider() {\n    this.appointmentDataProvider = new AppointmentDataProvider({\n      dataSource: this._dataSource,\n      dataAccessors: this._dataAccessors,\n      timeZoneCalculator: this.timeZoneCalculator,\n      dateSerializationFormat: this.option(\"dateSerializationFormat\"),\n      resources: this.option(\"resources\"),\n      startDayHour: this._getCurrentViewOption(\"startDayHour\"),\n      endDayHour: this._getCurrentViewOption(\"endDayHour\"),\n      appointmentDuration: this._getCurrentViewOption(\"cellDuration\"),\n      allDayPanelMode: this._getCurrentViewOption(\"allDayPanelMode\"),\n      showAllDayPanel: this.option(\"showAllDayPanel\"),\n      getLoadedResources: () => this.option(\"loadedResources\"),\n      getIsVirtualScrolling: () => this.isVirtualScrolling(),\n      getSupportAllDayRow: () => this._workSpace.supportAllDayRow(),\n      getViewType: () => this._workSpace.type,\n      getViewDirection: () => this._workSpace.viewDirection,\n      getDateRange: () => this._workSpace.getDateRange(),\n      getGroupCount: () => this._workSpace._getGroupCount(),\n      getViewDataProvider: () => this._workSpace.viewDataProvider\n    });\n  }\n\n  updateInstances() {\n    this._timeZoneCalculator = null;\n\n    if (this.getWorkSpace()) {\n      this.createAppointmentDataProvider();\n    }\n  }\n\n  _initTemplates() {\n    this._initAppointmentTemplate();\n\n    this._templateManager.addDefaultTemplates({\n      appointmentTooltip: new EmptyTemplate(),\n      dropDownAppointment: new EmptyTemplate()\n    });\n\n    super._initTemplates();\n  }\n\n  _initAppointmentTemplate() {\n    var {\n      expr: expr\n    } = this._dataAccessors;\n\n    var createGetter = property => compileGetter(\"appointmentData.\".concat(property));\n\n    var getDate = getter => data => {\n      var value = getter(data);\n\n      if (value instanceof Date) {\n        return value.valueOf();\n      }\n\n      return value;\n    };\n\n    this._templateManager.addDefaultTemplates({\n      item: new BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\n        text: createGetter(expr.textExpr),\n        startDate: getDate(createGetter(expr.startDateExpr)),\n        endDate: getDate(createGetter(expr.endDateExpr)),\n        startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\n        endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\n        allDay: createGetter(expr.allDayExpr),\n        recurrenceRule: createGetter(expr.recurrenceRuleExpr)\n      })\n    });\n  }\n\n  _renderContent() {\n    this._renderContentImpl();\n  }\n\n  _updatePreparedItems(items) {\n    this.preparedItems = getPreparedDataItems(items, this._dataAccessors, this._getCurrentViewOption(\"cellDuration\"), this.timeZoneCalculator);\n  }\n\n  _dataSourceChangedHandler(result) {\n    if (this._readyToRenderAppointments) {\n      this._workSpaceRecalculation.done(function () {\n        this._updatePreparedItems(result);\n\n        this._renderAppointments();\n\n        this.getWorkSpace().onDataSourceChanged(this.filteredItems);\n      }.bind(this));\n    }\n  }\n\n  isVirtualScrolling() {\n    var _currentViewOptions$s;\n\n    var workspace = this.getWorkSpace();\n\n    if (workspace) {\n      return workspace.isVirtualScrolling();\n    }\n\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    var scrolling = this.option(\"scrolling\");\n    return \"virtual\" === (null === scrolling || void 0 === scrolling ? void 0 : scrolling.mode) || \"virtual\" === (null === currentViewOptions || void 0 === currentViewOptions ? void 0 : null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);\n  }\n\n  _filterAppointments() {\n    this.filteredItems = this.appointmentDataProvider.filter(this.preparedItems);\n  }\n\n  _renderAppointments() {\n    var workspace = this.getWorkSpace();\n\n    this._filterAppointments();\n\n    workspace.option(\"allDayExpanded\", this._isAllDayExpanded());\n    var viewModel = [];\n\n    if (this._isVisible()) {\n      viewModel = this._getAppointmentsToRepaint();\n    }\n\n    if (this.option(\"isRenovatedAppointments\")) {\n      renderAppointments({\n        instance: this,\n        $dateTable: this.getWorkSpace()._getDateTable(),\n        viewModel: viewModel\n      });\n    } else {\n      this._appointments.option(\"items\", viewModel);\n    }\n\n    this.appointmentDataProvider.cleanState();\n  }\n\n  _getAppointmentsToRepaint() {\n    var layoutManager = this.getLayoutManager();\n    var appointmentsMap = layoutManager.createAppointmentsMap(this.filteredItems);\n\n    if (this.option(\"isRenovatedAppointments\")) {\n      var appointmentTemplate = this.option(\"appointmentTemplate\") !== DEFAULT_APPOINTMENT_TEMPLATE_NAME ? this.option(\"appointmentTemplate\") : void 0;\n      return {\n        appointments: appointmentsMap,\n        appointmentTemplate: appointmentTemplate\n      };\n    }\n\n    return layoutManager.getRepaintedAppointments(appointmentsMap, this.getAppointmentsInstance().option(\"items\"));\n  }\n\n  _initExpressions(fields) {\n    this._dataAccessors = utils.dataAccessors.create(fields, this._dataAccessors, config().forceIsoDateParsing, this.option(\"dateSerializationFormat\"));\n    this._dataAccessors.resources = createExpressions(this.option(\"resources\"));\n  }\n\n  _updateExpression(name, value) {\n    var exprObj = {};\n    exprObj[name.replace(\"Expr\", \"\")] = value;\n\n    this._initExpressions(exprObj);\n  }\n\n  getResourceDataAccessors() {\n    return this._dataAccessors.resources;\n  }\n\n  _initEditing() {\n    var editing = this.option(\"editing\");\n    this._editing = {\n      allowAdding: !!editing,\n      allowUpdating: !!editing,\n      allowDeleting: !!editing,\n      allowResizing: !!editing,\n      allowDragging: !!editing\n    };\n\n    if (isObject(editing)) {\n      this._editing = extend(this._editing, editing);\n    }\n\n    this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\n    this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\n    this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly());\n  }\n\n  _isReadOnly() {\n    var result = true;\n    var editing = this._editing;\n\n    for (var prop in editing) {\n      if (Object.prototype.hasOwnProperty.call(editing, prop)) {\n        result = result && !editing[prop];\n      }\n    }\n\n    return result;\n  }\n\n  _dispose() {\n    var _this$_recurrenceDial;\n\n    this._appointmentTooltip && this._appointmentTooltip.dispose();\n    null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\n    this.hideAppointmentPopup();\n    this.hideAppointmentTooltip();\n\n    this._asyncTemplatesTimers.forEach(clearTimeout);\n\n    this._asyncTemplatesTimers = [];\n\n    super._dispose();\n  }\n\n  _initActions() {\n    this._actions = {\n      onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\n      onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\n      onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\n      onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\n      onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\n      onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\n      onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\"),\n      onAppointmentTooltipShowing: this._createActionByOption(\"onAppointmentTooltipShowing\")\n    };\n  }\n\n  _getAppointmentRenderedAction() {\n    return this._createActionByOption(\"onAppointmentRendered\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n\n  _renderFocusTarget() {\n    return noop();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this._validateDayHours();\n\n    this._validateCellDuration();\n\n    this._renderMainContainer();\n\n    this._renderHeader();\n\n    this._layoutManager = new AppointmentLayoutManager(this);\n    this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\n\n    this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\n\n    this._appointmentTooltip = new (this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\n\n    this._createAppointmentPopupForm();\n\n    if (this._isDataSourceLoaded() || this._isDataSourceLoading()) {\n      this._initMarkupCore(this.option(\"loadedResources\"));\n\n      this._dataSourceChangedHandler(this._dataSource.items());\n\n      this._fireContentReadyAction();\n    } else {\n      var groups = this._getCurrentViewOption(\"groups\");\n\n      loadResources(groups, this.option(\"resources\"), this.option(\"resourceLoaderMap\")).done(resources => {\n        this.option(\"loadedResources\", resources);\n\n        this._initMarkupCore(resources);\n\n        this._reloadDataSource();\n      });\n    }\n  }\n\n  _createAppointmentPopupForm() {\n    var _this$_appointmentPop;\n\n    if (this._appointmentForm) {\n      var _this$_appointmentFor;\n\n      null === (_this$_appointmentFor = this._appointmentForm.form) || void 0 === _this$_appointmentFor ? void 0 : _this$_appointmentFor.dispose();\n    }\n\n    this._appointmentForm = this.createAppointmentForm();\n    null === (_this$_appointmentPop = this._appointmentPopup) || void 0 === _this$_appointmentPop ? void 0 : _this$_appointmentPop.dispose();\n    this._appointmentPopup = this.createAppointmentPopup(this._appointmentForm);\n  }\n\n  _renderMainContainer() {\n    this._mainContainer = $(\"<div>\").addClass(\"dx-scheduler-container\");\n    this.$element().append(this._mainContainer);\n  }\n\n  createAppointmentForm() {\n    var scheduler = {\n      createResourceEditorModel: () => _createResourceEditorModel(this.option(\"resources\"), this.option(\"loadedResources\")),\n      getDataAccessors: () => this._dataAccessors,\n      createComponent: (element, component, options) => this._createComponent(element, component, options),\n      getEditingConfig: () => this._editing,\n      getFirstDayOfWeek: () => this.option(\"firstDayOfWeek\"),\n      getStartDayHour: () => this.option(\"startDayHour\"),\n      getCalculatedEndDate: startDateWithStartHour => this._workSpace.calculateEndDate(startDateWithStartHour)\n    };\n    return new AppointmentForm(scheduler);\n  }\n\n  createAppointmentPopup(form) {\n    var scheduler = {\n      getElement: () => this.$element(),\n      createComponent: (element, component, options) => this._createComponent(element, component, options),\n      focus: () => this.focus(),\n      getResources: () => this.option(\"resources\"),\n      getEditingConfig: () => this._editing,\n      getTimeZoneCalculator: () => this.timeZoneCalculator,\n      getDataAccessors: () => this._dataAccessors,\n      getAppointmentFormOpening: () => this._actions.onAppointmentFormOpening,\n      processActionResult: (arg, canceled) => this._processActionResult(arg, canceled),\n      addAppointment: appointment => this.addAppointment(appointment),\n      updateAppointment: (sourceAppointment, updatedAppointment) => this.updateAppointment(sourceAppointment, updatedAppointment),\n      updateScrollPosition: (startDate, resourceItem, inAllDayRow) => {\n        this._workSpace.updateScrollPosition(startDate, resourceItem, inAllDayRow);\n      }\n    };\n    return new AppointmentPopup(scheduler, form);\n  }\n\n  _getAppointmentTooltipOptions() {\n    return {\n      createComponent: this._createComponent.bind(this),\n      container: this.$element(),\n      getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\n      addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\n      getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\n      showAppointmentPopup: this.showAppointmentPopup.bind(this),\n      checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\n      isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\n      createFormattedDateText: (appointment, targetedAppointment, format) => this.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format),\n      getAppointmentDisabled: appointment => createAppointmentAdapter(appointment, this._dataAccessors, this.timeZoneCalculator).disabled\n    };\n  }\n\n  checkAndDeleteAppointment(appointment, targetedAppointment) {\n    var targetedAdapter = createAppointmentAdapter(targetedAppointment, this._dataAccessors, this.timeZoneCalculator);\n    var deletingOptions = this.fireOnAppointmentDeleting(appointment, targetedAdapter);\n\n    if (!deletingOptions.cancel) {\n      this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {\n        this.processDeleteAppointment(appointment, deletingOptions);\n      }, true);\n    }\n  }\n\n  _getExtraAppointmentTooltipOptions() {\n    return {\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      editing: this.option(\"editing\"),\n      offset: this.option(\"_appointmentTooltipOffset\")\n    };\n  }\n\n  isAppointmentInAllDayPanel(appointmentData) {\n    var workSpace = this._workSpace;\n    var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\n    return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\");\n  }\n\n  _initMarkupCore(resources) {\n    this._readyToRenderAppointments = hasWindow();\n    this._workSpace && this._cleanWorkspace();\n\n    this._renderWorkSpace(resources);\n\n    this._appointments.option({\n      fixedContainer: this._workSpace.getFixedContainer(),\n      allDayContainer: this._workSpace.getAllDayContainer()\n    });\n\n    this._waitAsyncTemplate(() => {\n      var _this$_workSpaceRecal2;\n\n      return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve();\n    });\n\n    this.createAppointmentDataProvider();\n\n    this._filterAppointmentsByDate();\n  }\n\n  _isDataSourceLoaded() {\n    return this._dataSource && this._dataSource.isLoaded();\n  }\n\n  _render() {\n    var _this$getWorkSpace;\n\n    this._toggleSmallClass();\n\n    this._toggleAdaptiveClass();\n\n    null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.updateHeaderEmptyCellWidth();\n\n    super._render();\n  }\n\n  _renderHeader() {\n    if (0 !== this.option(\"toolbar\").length) {\n      var $header = $(\"<div>\").appendTo(this._mainContainer);\n      this._header = this._createComponent($header, SchedulerHeader, this._headerConfig());\n    }\n  }\n\n  _headerConfig() {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    var countConfig = this._getViewCountConfig();\n\n    var result = extend({\n      firstDayOfWeek: this.getFirstDayOfWeek(),\n      currentView: this.option(\"currentView\"),\n      isAdaptive: this.option(\"adaptivityEnabled\"),\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\n      customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\n      agendaDuration: currentViewOptions.agendaDuration || DEFAULT_AGENDA_DURATION\n    }, currentViewOptions);\n    result.intervalCount = countConfig.intervalCount;\n    result.views = this.option(\"views\");\n    result.min = new Date(this._dateOption(\"min\"));\n    result.max = new Date(this._dateOption(\"max\"));\n    result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n    result.onCurrentViewChange = name => {\n      this.option(\"currentView\", name);\n    }, result.onCurrentDateChange = date => {\n      this.option(\"currentDate\", date);\n    };\n    result.items = this.option(\"toolbar\");\n    result.startViewDate = this.getStartViewDate();\n\n    result.todayDate = () => {\n      var result = this.timeZoneCalculator.createDate(new Date(), {\n        path: \"toGrid\"\n      });\n      return result;\n    };\n\n    return result;\n  }\n\n  _appointmentsConfig() {\n    var config = {\n      getResources: () => this.option(\"resources\"),\n      getResourceDataAccessors: this.getResourceDataAccessors.bind(this),\n      getAgendaResourceProcessor: () => this.agendaResourceProcessor,\n      getAppointmentColor: this.createGetAppointmentColor(),\n      getAppointmentDataProvider: () => this.appointmentDataProvider,\n      dataAccessors: this._dataAccessors,\n      observer: this,\n      onItemRendered: this._getAppointmentRenderedAction(),\n      onItemClick: this._createActionByOption(\"onAppointmentClick\"),\n      onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\n      onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      allowDrag: this._allowDragging(),\n      allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\n      allowResize: this._allowResizing(),\n      allowAllDayResize: this._allowAllDayResizing(),\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      currentView: this.currentView,\n      groups: this._getCurrentViewOption(\"groups\"),\n      isRenovatedAppointments: this.option(\"isRenovatedAppointments\"),\n      timeZoneCalculator: this.timeZoneCalculator,\n      getResizableStep: () => this._workSpace ? this._workSpace.positionHelper.getResizableStep() : 0,\n      getDOMElementsMetaData: () => {\n        var _this$_workSpace;\n\n        return null === (_this$_workSpace = this._workSpace) || void 0 === _this$_workSpace ? void 0 : _this$_workSpace.getDOMElementsMetaData();\n      },\n      getViewDataProvider: () => {\n        var _this$_workSpace2;\n\n        return null === (_this$_workSpace2 = this._workSpace) || void 0 === _this$_workSpace2 ? void 0 : _this$_workSpace2.viewDataProvider;\n      },\n      isVerticalViewDirection: () => \"vertical\" === this.getRenderingStrategyInstance().getDirection(),\n      isVerticalGroupedWorkSpace: () => this._workSpace._isVerticalGroupedWorkSpace(),\n      isDateAndTimeView: () => _isDateAndTimeView(this._workSpace.type),\n      onContentReady: () => {\n        var _this$_workSpace3;\n\n        null === (_this$_workSpace3 = this._workSpace) || void 0 === _this$_workSpace3 ? void 0 : _this$_workSpace3.option(\"allDayExpanded\", this._isAllDayExpanded());\n      }\n    };\n    return config;\n  }\n\n  getCollectorOffset() {\n    if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\n      return this.option(\"_collectorOffset\");\n    } else {\n      return 0;\n    }\n  }\n\n  getAppointmentDurationInMinutes() {\n    return this._getCurrentViewOption(\"cellDuration\");\n  }\n\n  _validateCellDuration() {\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var cellDuration = this._getCurrentViewOption(\"cellDuration\");\n\n    if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\n      errors.log(\"W1015\");\n    }\n  }\n\n  _getCurrentViewType() {\n    return this.currentViewType;\n  }\n\n  _renderWorkSpace(groups) {\n    var _this$_header6;\n\n    this._readyToRenderAppointments && this._toggleSmallClass();\n    var $workSpace = $(\"<div>\").appendTo(this._mainContainer);\n\n    var countConfig = this._getViewCountConfig();\n\n    var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\n\n    var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\n\n    this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\n    this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\n\n    this._workSpace._attachTablesEvents();\n\n    this._workSpace.getWorkArea().append(this._appointments.$element());\n\n    this._recalculateWorkspace();\n\n    countConfig.startDate && (null === (_this$_header6 = this._header) || void 0 === _this$_header6 ? void 0 : _this$_header6.option(\"currentDate\", this._workSpace._getHeaderDate()));\n\n    this._appointments.option(\"_collectorOffset\", this.getCollectorOffset());\n  }\n\n  _getViewCountConfig() {\n    var currentView = this.option(\"currentView\");\n\n    var view = this._getViewByName(currentView);\n\n    var viewCount = view && view.intervalCount || 1;\n    var startDate = view && view.startDate || null;\n    return {\n      intervalCount: viewCount,\n      startDate: startDate\n    };\n  }\n\n  _getViewByName(name) {\n    var views = this.option(\"views\");\n\n    for (var i = 0; i < views.length; i++) {\n      if (views[i].name === name || views[i].type === name || views[i] === name) {\n        return views[i];\n      }\n    }\n  }\n\n  _recalculateWorkspace() {\n    this._workSpaceRecalculation = new Deferred();\n\n    this._waitAsyncTemplate(() => {\n      triggerResizeEvent(this._workSpace.$element());\n\n      this._workSpace._refreshDateTimeIndication();\n    });\n  }\n\n  _workSpaceConfig(groups, countConfig) {\n    var _currentViewOptions$s2;\n\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    var scrolling = this.option(\"scrolling\");\n    var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.mode);\n    var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(item => {\n      var _currentViewOptions$s3;\n\n      return scrolling.orientation === item || (null === (_currentViewOptions$s3 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s3 ? void 0 : _currentViewOptions$s3.orientation) === item;\n    }).length > 0);\n    var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed || isTimelineView(this.currentViewType);\n    var result = extend({\n      resources: this.option(\"resources\"),\n      loadedResources: this.option(\"loadedResources\"),\n      getFilteredItems: () => this.filteredItems,\n      getResourceDataAccessors: this.getResourceDataAccessors.bind(this),\n      noDataText: this.option(\"noDataText\"),\n      firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n      startDayHour: this.option(\"startDayHour\"),\n      endDayHour: this.option(\"endDayHour\"),\n      tabIndex: this.option(\"tabIndex\"),\n      accessKey: this.option(\"accessKey\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      cellDuration: this.option(\"cellDuration\"),\n      showAllDayPanel: this.option(\"showAllDayPanel\"),\n      showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\n      indicatorTime: this.option(\"indicatorTime\"),\n      indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\n      shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\n      allDayExpanded: this._appointments.option(\"items\"),\n      crossScrollingEnabled: crossScrollingEnabled,\n      dataCellTemplate: this.option(\"dataCellTemplate\"),\n      timeCellTemplate: this.option(\"timeCellTemplate\"),\n      resourceCellTemplate: this.option(\"resourceCellTemplate\"),\n      dateCellTemplate: this.option(\"dateCellTemplate\"),\n      allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\n      selectedCellData: this.option(\"selectedCellData\"),\n      onSelectionChanged: args => {\n        this.option(\"selectedCellData\", args.selectedCellData);\n      },\n      groupByDate: this._getCurrentViewOption(\"groupByDate\"),\n      scrolling: scrolling,\n      draggingMode: this.option(\"_draggingMode\"),\n      timeZoneCalculator: this.timeZoneCalculator,\n      schedulerHeight: this.option(\"height\"),\n      schedulerWidth: this.option(\"width\"),\n      allDayPanelMode: this.option(\"allDayPanelMode\"),\n      onSelectedCellsClick: this.showAddAppointmentPopup.bind(this),\n      onRenderAppointments: this._renderAppointments.bind(this),\n      onShowAllDayPanel: value => this.option(\"showAllDayPanel\", value),\n      getHeaderHeight: () => utils.DOM.getHeaderHeight(this._header),\n      onScrollEnd: () => this._appointments.updateResizableArea(),\n      renovateRender: this._isRenovatedRender(isVirtualScrolling),\n      isRenovatedAppointments: this.option(\"isRenovatedAppointments\")\n    }, currentViewOptions);\n    result.observer = this;\n    result.intervalCount = countConfig.intervalCount;\n    result.startDate = countConfig.startDate;\n    result.groups = groups;\n    result.onCellClick = this._createActionByOption(\"onCellClick\");\n    result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\n    result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n    result.hoursInterval = result.cellDuration / 60;\n    result.allDayExpanded = false;\n    result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\n    result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\n    result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\n    result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\n\n    result.getAppointmentDataProvider = () => this.appointmentDataProvider;\n\n    return result;\n  }\n\n  _isRenovatedRender(isVirtualScrolling) {\n    return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling;\n  }\n\n  _waitAsyncTemplate(callback) {\n    if (this._options.silent(\"templatesRenderAsynchronously\")) {\n      var timer = setTimeout(() => {\n        callback();\n        clearTimeout(timer);\n      });\n\n      this._asyncTemplatesTimers.push(timer);\n    } else {\n      callback();\n    }\n  }\n\n  _getCurrentViewOptions() {\n    return this.currentView;\n  }\n\n  _getCurrentViewOption(optionName) {\n    if (this.currentView && void 0 !== this.currentView[optionName]) {\n      return this.currentView[optionName];\n    }\n\n    return this.option(optionName);\n  }\n\n  _getAppointmentTemplate(optionName) {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    if (currentViewOptions && currentViewOptions[optionName]) {\n      return this._getTemplate(currentViewOptions[optionName]);\n    }\n\n    return this._getTemplateByOption(optionName);\n  }\n\n  _updateOption(viewName, optionName, value) {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\n      this[\"_\" + viewName].option(optionName, value);\n    }\n  }\n\n  _refreshWorkSpace(groups) {\n    this._cleanWorkspace();\n\n    delete this._workSpace;\n\n    this._renderWorkSpace(groups);\n\n    if (this._readyToRenderAppointments) {\n      this._appointments.option({\n        fixedContainer: this._workSpace.getFixedContainer(),\n        allDayContainer: this._workSpace.getAllDayContainer()\n      });\n\n      this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve());\n    }\n  }\n\n  _cleanWorkspace() {\n    this._appointments.$element().detach();\n\n    this._workSpace._dispose();\n\n    this._workSpace.$element().remove();\n\n    this.option(\"selectedCellData\", []);\n  }\n\n  getWorkSpaceScrollable() {\n    return this._workSpace.getScrollable();\n  }\n\n  getWorkSpaceScrollableContainer() {\n    return this._workSpace.getScrollableContainer();\n  }\n\n  getWorkSpace() {\n    return this._workSpace;\n  }\n\n  getHeader() {\n    return this._header;\n  }\n\n  _cleanPopup() {\n    var _this$_appointmentPop2;\n\n    null === (_this$_appointmentPop2 = this._appointmentPopup) || void 0 === _this$_appointmentPop2 ? void 0 : _this$_appointmentPop2.dispose();\n  }\n\n  _checkRecurringAppointment(rawAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent, recurrenceEditMode) {\n    var recurrenceRule = ExpressionUtils.getField(this._dataAccessors, \"recurrenceRule\", rawAppointment);\n\n    if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\n      callback();\n      return;\n    }\n\n    var editMode = recurrenceEditMode || this.option(\"recurrenceEditMode\");\n\n    switch (editMode) {\n      case \"series\":\n        callback();\n        break;\n\n      case \"occurrence\":\n        this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n\n        break;\n\n      default:\n        if (dragEvent) {\n          dragEvent.cancel = new Deferred();\n        }\n\n        this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {\n          editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\n          editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n        }).fail(() => this._appointments.moveAppointmentBack(dragEvent));\n\n    }\n  }\n\n  _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\n    var appointment = excludeFromRecurrence(rawAppointment, exceptionDate, this._dataAccessors, this._timeZoneCalculator);\n\n    var singleRawAppointment = _extends({}, newRawAppointment);\n\n    delete singleRawAppointment[this._dataAccessors.expr.recurrenceExceptionExpr];\n    delete singleRawAppointment[this._dataAccessors.expr.recurrenceRuleExpr];\n    var keyPropertyName = this.appointmentDataProvider.keyName;\n    delete singleRawAppointment[keyPropertyName];\n    var canCreateNewAppointment = !isDeleted && !isPopupEditing;\n\n    if (canCreateNewAppointment) {\n      this.addAppointment(singleRawAppointment);\n    }\n\n    if (isPopupEditing) {\n      this._appointmentPopup.show(singleRawAppointment, {\n        isToolbarVisible: true,\n        action: ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES,\n        excludeInfo: {\n          sourceAppointment: rawAppointment,\n          updatedAppointment: appointment.source()\n        }\n      });\n\n      this._editAppointmentData = rawAppointment;\n    } else {\n      this._updateAppointment(rawAppointment, appointment.source(), () => {\n        this._appointments.moveAppointmentBack(dragEvent);\n      }, dragEvent);\n    }\n  }\n\n  _createRecurrenceException(appointment, exceptionDate) {\n    var result = [];\n\n    if (appointment.recurrenceException) {\n      result.push(appointment.recurrenceException);\n    }\n\n    result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\n    return result.join();\n  }\n\n  _getSerializedDate(date, startDate, isAllDay) {\n    isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\n    return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT);\n  }\n\n  _showRecurrenceChangeConfirm(isDeleted) {\n    var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\n    var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\n    var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\n    this._recurrenceDialog = customDialog({\n      messageHtml: message,\n      showCloseButton: true,\n      showTitle: true,\n      buttons: [{\n        text: seriesText,\n        onClick: function () {\n          return RECURRENCE_EDITING_MODE.SERIES;\n        }\n      }, {\n        text: occurrenceText,\n        onClick: function () {\n          return RECURRENCE_EDITING_MODE.OCCURENCE;\n        }\n      }],\n      popupOptions: {\n        onHidden: e => {\n          e.component.$element().remove();\n        },\n        copyRootClassesToWrapper: true,\n        _ignoreCopyRootClassesToWrapperDeprecation: true\n      }\n    });\n    return this._recurrenceDialog.show();\n  }\n\n  _getUpdatedData(rawAppointment) {\n    var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {\n      path: \"fromGrid\"\n    }) : void 0;\n\n    var isValidDate = date => !isNaN(new Date(date).getTime());\n\n    var targetCell = this.getTargetCellData();\n    var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\n    var cellStartDate = getConvertedFromGrid(targetCell.startDate);\n    var cellEndDate = getConvertedFromGrid(targetCell.endDate);\n    var appointmentStartDate = new Date(appointment.startDate);\n    var appointmentEndDate = new Date(appointment.endDate);\n    var resultedStartDate = cellStartDate || appointmentStartDate;\n\n    if (!isValidDate(appointmentStartDate)) {\n      appointmentStartDate = resultedStartDate;\n    }\n\n    if (!isValidDate(appointmentEndDate)) {\n      appointmentEndDate = cellEndDate;\n    }\n\n    var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\n    var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\n\n    if (isKeepAppointmentHours) {\n      var {\n        trimTime: trimTime\n      } = dateUtils;\n      var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\n        path: \"toGrid\"\n      });\n      var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\n      resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\n      resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\n        path: \"fromGrid\"\n      });\n    }\n\n    var result = createAppointmentAdapter({}, this._dataAccessors, this.timeZoneCalculator);\n\n    if (void 0 !== targetCell.allDay) {\n      result.allDay = targetCell.allDay;\n    }\n\n    result.startDate = resultedStartDate;\n    var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\n\n    if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\n      resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate);\n    }\n\n    if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\n      var dateCopy = new Date(resultedStartDate);\n      dateCopy.setHours(0);\n      resultedEndDate = new Date(dateCopy.getTime() + duration);\n\n      if (0 !== resultedEndDate.getHours()) {\n        resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"));\n      }\n    }\n\n    var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\n    result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\n    var rawResult = result.source();\n    setResourceToAppointment(this.option(\"resources\"), this.getResourceDataAccessors(), rawResult, targetCell.groups);\n    return rawResult;\n  }\n\n  getTargetedAppointment(appointment, element) {\n    var settings = utils.dataAccessors.getAppointmentSettings(element);\n    var info = utils.dataAccessors.getAppointmentInfo(element);\n    var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\n    var adapter = createAppointmentAdapter(appointment, this._dataAccessors, this.timeZoneCalculator);\n    var targetedAdapter = adapter.clone();\n\n    if (this._isAgenda() && adapter.isRecurrent) {\n      var agendaSettings = settings.agendaSettings;\n      targetedAdapter.startDate = ExpressionUtils.getField(this._dataAccessors, \"startDate\", agendaSettings);\n      targetedAdapter.endDate = ExpressionUtils.getField(this._dataAccessors, \"endDate\", agendaSettings);\n    } else if (settings) {\n      targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\n      targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate;\n    }\n\n    var rawTargetedAppointment = targetedAdapter.source();\n\n    if (element) {\n      this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex);\n    }\n\n    if (info) {\n      rawTargetedAppointment.displayStartDate = new Date(info.appointment.startDate);\n      rawTargetedAppointment.displayEndDate = new Date(info.appointment.endDate);\n    }\n\n    return rawTargetedAppointment;\n  }\n\n  subscribe(subject, action) {\n    this._subscribes[subject] = subscribes[subject] = action;\n  }\n\n  fire(subject) {\n    var callback = this._subscribes[subject];\n    var args = Array.prototype.slice.call(arguments);\n\n    if (!isFunction(callback)) {\n      throw errors.Error(\"E1031\", subject);\n    }\n\n    return callback.apply(this, args.slice(1));\n  }\n\n  getTargetCellData() {\n    return this._workSpace.getDataByDroppableCell();\n  }\n\n  _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\n    var updatingOptions = {\n      newData: rawAppointment,\n      oldData: extend({}, target),\n      cancel: false\n    };\n\n    var performFailAction = function (err) {\n      if (onUpdatePrevented) {\n        onUpdatePrevented.call(this);\n      }\n\n      if (err && \"Error\" === err.name) {\n        throw err;\n      }\n    }.bind(this);\n\n    this._actions[StoreEventNames.UPDATING](updatingOptions);\n\n    if (dragEvent && !isDeferred(dragEvent.cancel)) {\n      dragEvent.cancel = new Deferred();\n    }\n\n    return this._processActionResult(updatingOptions, function (canceled) {\n      var deferred = new Deferred();\n\n      if (!canceled) {\n        this._expandAllDayPanel(rawAppointment);\n\n        try {\n          deferred = this.appointmentDataProvider.update(target, rawAppointment).done(() => {\n            dragEvent && dragEvent.cancel.resolve(false);\n          }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction());\n        } catch (err) {\n          performFailAction(err);\n          deferred.resolve();\n        }\n      } else {\n        performFailAction();\n        deferred.resolve();\n      }\n\n      return deferred.promise();\n    });\n  }\n\n  _processActionResult(actionOptions, callback) {\n    var deferred = new Deferred();\n\n    var resolveCallback = callbackResult => {\n      when(fromPromise(callbackResult)).always(deferred.resolve);\n    };\n\n    if (isPromise(actionOptions.cancel)) {\n      when(fromPromise(actionOptions.cancel)).always(cancel => {\n        if (!isDefined(cancel)) {\n          cancel = \"rejected\" === actionOptions.cancel.state();\n        }\n\n        resolveCallback(callback.call(this, cancel));\n      });\n    } else {\n      resolveCallback(callback.call(this, actionOptions.cancel));\n    }\n\n    return deferred.promise();\n  }\n\n  _expandAllDayPanel(appointment) {\n    if (!this._isAllDayExpanded() && this.appointmentTakesAllDay(appointment)) {\n      this._workSpace.option(\"allDayExpanded\", true);\n    }\n  }\n\n  _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\n    var args = {\n      appointmentData: appointment || storeAppointment\n    };\n\n    if (storeAppointment instanceof Error) {\n      args.error = storeAppointment;\n    } else {\n      this._appointmentPopup.visible && this._appointmentPopup.hide();\n    }\n\n    this._actions[handlerName](args);\n\n    this._fireContentReadyAction();\n  }\n\n  getAppointmentsInstance() {\n    return this._appointments;\n  }\n\n  getLayoutManager() {\n    return this._layoutManager;\n  }\n\n  getRenderingStrategyInstance() {\n    return this.getLayoutManager().getRenderingStrategyInstance();\n  }\n\n  getActions() {\n    return this._actions;\n  }\n\n  appointmentTakesAllDay(rawAppointment) {\n    var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\n    return getAppointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"), this._getCurrentViewOption(\"allDayPanelMode\"));\n  }\n\n  dayHasAppointment(day, rawAppointment, trimTime) {\n    var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\n      path: \"toGrid\"\n    });\n\n    var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\n    var startDate = new Date(appointment.startDate);\n    var endDate = new Date(appointment.endDate);\n    startDate = getConvertedToTimeZone(startDate);\n    endDate = getConvertedToTimeZone(endDate);\n\n    if (day.getTime() === endDate.getTime()) {\n      return startDate.getTime() === endDate.getTime();\n    }\n\n    if (trimTime) {\n      day = dateUtils.trimTime(day);\n      startDate = dateUtils.trimTime(startDate);\n      endDate = dateUtils.trimTime(endDate);\n    }\n\n    var dayTimeStamp = day.getTime();\n    var startDateTimeStamp = startDate.getTime();\n    var endDateTimeStamp = endDate.getTime();\n    return startDateTimeStamp <= dayTimeStamp && dayTimeStamp <= endDateTimeStamp;\n  }\n\n  setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (null !== groups && void 0 !== groups && groups.length) {\n      var resourcesSetter = this.getResourceDataAccessors().setter;\n      var workSpace = this._workSpace;\n      var getGroups;\n      var setResourceCallback;\n\n      if (this._isAgenda()) {\n        getGroups = function () {\n          var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\n\n          return getCellGroups(apptSettings[0].groupIndex, this.getWorkSpace().option(\"groups\"));\n        };\n\n        setResourceCallback = function (_, group) {\n          resourcesSetter[group.name](rawAppointment, group.id);\n        };\n      } else {\n        getGroups = function () {\n          var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\n          return workSpace.getCellDataByCoordinates({\n            left: setting.left,\n            top: setting.top\n          }).groups;\n        };\n\n        setResourceCallback = function (field, value) {\n          resourcesSetter[field](rawAppointment, value);\n        };\n      }\n\n      each(getGroups.call(this), setResourceCallback);\n    }\n  }\n\n  getStartViewDate() {\n    var _this$_workSpace4;\n\n    return null === (_this$_workSpace4 = this._workSpace) || void 0 === _this$_workSpace4 ? void 0 : _this$_workSpace4.getStartViewDate();\n  }\n\n  getEndViewDate() {\n    return this._workSpace.getEndViewDate();\n  }\n\n  showAddAppointmentPopup(cellData, cellGroups) {\n    var appointmentAdapter = createAppointmentAdapter({}, this._dataAccessors, this.timeZoneCalculator);\n    appointmentAdapter.allDay = cellData.allDay;\n    appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\n      path: \"fromGrid\"\n    });\n    appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\n      path: \"fromGrid\"\n    });\n    var resultAppointment = extend(appointmentAdapter.source(), cellGroups);\n    this.showAppointmentPopup(resultAppointment, true);\n  }\n\n  showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\n    var newRawTargetedAppointment = _extends({}, rawTargetedAppointment);\n\n    if (newRawTargetedAppointment) {\n      delete newRawTargetedAppointment.displayStartDate;\n      delete newRawTargetedAppointment.displayEndDate;\n    }\n\n    var appointment = createAppointmentAdapter(newRawTargetedAppointment || rawAppointment, this._dataAccessors, this.timeZoneCalculator);\n    var newTargetedAppointment = extend({}, rawAppointment, newRawTargetedAppointment);\n    var isCreateAppointment = null !== createNewAppointment && void 0 !== createNewAppointment ? createNewAppointment : isEmptyObject(rawAppointment);\n\n    if (isEmptyObject(rawAppointment)) {\n      rawAppointment = this.createPopupAppointment();\n    }\n\n    if (isCreateAppointment) {\n      delete this._editAppointmentData;\n      this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, {\n        isToolbarVisible: true,\n        action: ACTION_TO_APPOINTMENT.CREATE\n      });\n    } else {\n      this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {\n        this._editAppointmentData = rawAppointment;\n\n        this._appointmentPopup.show(rawAppointment, {\n          isToolbarVisible: this._editing.allowUpdating,\n          action: ACTION_TO_APPOINTMENT.UPDATE\n        });\n      }, false, true);\n    }\n  }\n\n  createPopupAppointment() {\n    var result = {};\n    var toMs = dateUtils.dateToMilliseconds;\n    var startDate = new Date(this.option(\"currentDate\"));\n    var endDate = new Date(startDate.getTime() + this.option(\"cellDuration\") * toMs(\"minute\"));\n    ExpressionUtils.setField(this._dataAccessors, \"startDate\", result, startDate);\n    ExpressionUtils.setField(this._dataAccessors, \"endDate\", result, endDate);\n    return result;\n  }\n\n  hideAppointmentPopup(saveChanges) {\n    var _this$_appointmentPop3;\n\n    if (null !== (_this$_appointmentPop3 = this._appointmentPopup) && void 0 !== _this$_appointmentPop3 && _this$_appointmentPop3.visible) {\n      saveChanges && this._appointmentPopup.saveChangesAsync();\n\n      this._appointmentPopup.hide();\n    }\n  }\n\n  showAppointmentTooltip(appointment, element, targetedAppointment) {\n    if (appointment) {\n      var settings = utils.dataAccessors.getAppointmentSettings(element);\n      var appointmentConfig = {\n        itemData: targetedAppointment || appointment,\n        groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex,\n        groups: this.option(\"groups\")\n      };\n\n      var _getAppointmentColor = this.createGetAppointmentColor();\n\n      var deferredColor = _getAppointmentColor(appointmentConfig);\n\n      var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\n      this.showAppointmentTooltipCore(element, [info]);\n    }\n  }\n\n  createGetAppointmentColor() {\n    return appointmentConfig => {\n      var resourceConfig = {\n        resources: this.option(\"resources\"),\n        dataAccessors: this.getResourceDataAccessors(),\n        loadedResources: this.option(\"loadedResources\"),\n        resourceLoaderMap: this.option(\"resourceLoaderMap\")\n      };\n      return getAppointmentColor(resourceConfig, appointmentConfig);\n    };\n  }\n\n  showAppointmentTooltipCore(target, data, options) {\n    var arg = {\n      cancel: false,\n      appointments: data.map(item => {\n        var result = {\n          appointmentData: item.appointment,\n          currentAppointmentData: _extends({}, item.targetedAppointment),\n          color: item.color\n        };\n\n        if (item.settings.info) {\n          var {\n            startDate: startDate,\n            endDate: endDate\n          } = item.settings.info.appointment;\n          result.currentAppointmentData.displayStartDate = startDate;\n          result.currentAppointmentData.displayEndDate = endDate;\n        }\n\n        return result;\n      }),\n      targetElement: target\n    };\n\n    this._createActionByOption(\"onAppointmentTooltipShowing\")(arg);\n\n    if (this._appointmentTooltip.isAlreadyShown(target)) {\n      this.hideAppointmentTooltip();\n    } else {\n      this._processActionResult(arg, canceled => {\n        !canceled && this._appointmentTooltip.show(target, data, _extends({}, this._getExtraAppointmentTooltipOptions(), options));\n      });\n    }\n  }\n\n  hideAppointmentTooltip() {\n    this._appointmentTooltip && this._appointmentTooltip.hide();\n  }\n\n  scrollToTime(hours, minutes, date) {\n    errors.log(\"W0002\", \"dxScheduler\", \"scrollToTime\", \"21.1\", 'Use the \"scrollTo\" method instead');\n\n    this._workSpace.scrollToTime(hours, minutes, date);\n  }\n\n  scrollTo(date, groups, allDay) {\n    this._workSpace.scrollTo(date, groups, allDay);\n  }\n\n  _isHorizontalVirtualScrolling() {\n    var scrolling = this.option(\"scrolling\");\n    var {\n      orientation: orientation,\n      mode: mode\n    } = scrolling;\n    var isVirtualScrolling = \"virtual\" === mode;\n    return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation);\n  }\n\n  addAppointment(rawAppointment) {\n    var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\n    appointment.text = appointment.text || \"\";\n    var serializedAppointment = appointment.source(true);\n    var addingOptions = {\n      appointmentData: serializedAppointment,\n      cancel: false\n    };\n\n    this._actions[StoreEventNames.ADDING](addingOptions);\n\n    return this._processActionResult(addingOptions, canceled => {\n      if (canceled) {\n        return new Deferred().resolve();\n      }\n\n      this._expandAllDayPanel(serializedAppointment);\n\n      return this.appointmentDataProvider.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment));\n    });\n  }\n\n  updateAppointment(target, appointment) {\n    return this._updateAppointment(target, appointment);\n  }\n\n  deleteAppointment(rawAppointment) {\n    var deletingOptions = this.fireOnAppointmentDeleting(rawAppointment);\n    this.processDeleteAppointment(rawAppointment, deletingOptions);\n  }\n\n  fireOnAppointmentDeleting(rawAppointment, targetedAppointmentData) {\n    var deletingOptions = {\n      appointmentData: rawAppointment,\n      targetedAppointmentData: targetedAppointmentData,\n      cancel: false\n    };\n\n    this._actions[StoreEventNames.DELETING](deletingOptions);\n\n    return deletingOptions;\n  }\n\n  processDeleteAppointment(rawAppointment, deletingOptions) {\n    this._processActionResult(deletingOptions, function (canceled) {\n      if (!canceled) {\n        this.appointmentDataProvider.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment));\n      }\n    });\n  }\n\n  deleteRecurrence(appointment, date, recurrenceEditMode) {\n    this._checkRecurringAppointment(appointment, {}, date, () => {\n      this.processDeleteAppointment(appointment, {\n        cancel: false\n      });\n    }, true, false, null, recurrenceEditMode);\n  }\n\n  focus() {\n    if (this._editAppointmentData) {\n      this._appointments.focus();\n    } else {\n      this._workSpace.focus();\n    }\n  }\n\n  getFirstDayOfWeek() {\n    return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex();\n  }\n\n  _validateDayHours() {\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    validateDayHours(startDayHour, endDayHour);\n  }\n\n  _getDragBehavior() {\n    return this._workSpace.dragBehavior;\n  }\n\n}\n\nScheduler.include(DataHelperMixin);\nregisterComponent(\"dxScheduler\", Scheduler);\nexport default Scheduler;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/ui.scheduler.js"],"names":["_extends","registerComponent","config","devices","$","BindableTemplate","EmptyTemplate","Callbacks","noop","compileGetter","getBoundingRect","dateUtils","dateSerialization","Deferred","when","fromPromise","extend","each","isDefined","isString","isObject","isFunction","isEmptyObject","isDeferred","isPromise","hasWindow","DataHelperMixin","triggerResizeEvent","dateLocalization","messageLocalization","custom","customDialog","isMaterial","errors","Widget","AppointmentPopup","ACTION_TO_APPOINTMENT","AppointmentForm","CompactAppointmentsHelper","DesktopTooltipStrategy","MobileTooltipStrategy","hide","hideLoading","show","showLoading","AppointmentCollection","AppointmentLayoutManager","SchedulerHeader","subscribes","getRecurrenceProcessor","timeZoneUtils","SchedulerAgenda","SchedulerTimelineDay","SchedulerTimelineMonth","SchedulerTimelineWeek","SchedulerTimelineWorkWeek","SchedulerWorkSpaceDay","SchedulerWorkSpaceMonth","SchedulerWorkSpaceWeek","SchedulerWorkSpaceWorkWeek","createAppointmentAdapter","AppointmentTooltipInfo","utils","createExpressions","createResourceEditorModel","_createResourceEditorModel","getAppointmentColor","getCellGroups","loadResources","setResourceToAppointment","ExpressionUtils","validateDayHours","isDateAndTimeView","_isDateAndTimeView","isTimelineView","renderAppointments","AgendaResourceProcessor","AppointmentDataProvider","getAppointmentTakesAllDay","getPreparedDataItems","getCurrentView","createTimeZoneCalculator","excludeFromRecurrence","MINUTES_IN_HOUR","DEFAULT_AGENDA_DURATION","WIDGET_CLASS","WIDGET_SMALL_CLASS","concat","WIDGET_ADAPTIVE_CLASS","WIDGET_READONLY_CLASS","WIDGET_SMALL_WIDTH","FULL_DATE_FORMAT","UTC_FULL_DATE_FORMAT","DEFAULT_APPOINTMENT_TEMPLATE_NAME","DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME","DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME","VIEWS_CONFIG","day","workSpace","renderingStrategy","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","StoreEventNames","ADDING","ADDED","DELETING","DELETED","UPDATING","UPDATED","RECURRENCE_EDITING_MODE","SERIES","OCCURENCE","CANCEL","Scheduler","_getDefaultOptions","defaultOptions","views","currentView","currentDate","trimTime","Date","min","max","dateSerializationFormat","firstDayOfWeek","groups","resources","loadedResources","resourceLoaderMap","Map","dataSource","customizeDateNavigatorText","appointmentTemplate","dropDownAppointmentTemplate","appointmentCollectorTemplate","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","startDayHour","endDayHour","editing","allowAdding","allowDeleting","allowDragging","allowResizing","allowUpdating","allowTimeZoneEditing","showAllDayPanel","showCurrentTimeIndicator","shadeUntilCurrentTime","indicatorUpdateInterval","indicatorTime","recurrenceEditMode","cellDuration","maxAppointmentsPerCell","selectedCellData","groupByDate","onAppointmentRendered","onAppointmentClick","onAppointmentDblClick","onAppointmentContextMenu","onCellClick","onCellContextMenu","onAppointmentAdding","onAppointmentAdded","onAppointmentUpdating","onAppointmentUpdated","onAppointmentDeleting","onAppointmentDeleted","onAppointmentFormOpening","onAppointmentTooltipShowing","appointmentTooltipTemplate","appointmentPopupTemplate","crossScrollingEnabled","useDropDownViewSwitcher","startDateExpr","endDateExpr","textExpr","descriptionExpr","allDayExpr","recurrenceRuleExpr","recurrenceExceptionExpr","disabledExpr","remoteFiltering","timeZone","startDateTimeZoneExpr","endDateTimeZoneExpr","noDataText","format","adaptivityEnabled","allowMultipleCellSelection","scrolling","mode","allDayPanelMode","renovateRender","_draggingMode","_appointmentTooltipOffset","x","y","_appointmentTooltipButtonsPosition","_appointmentTooltipOpenButtonText","_dropDownButtonIcon","_appointmentCountPerCell","_collectorOffset","_appointmentOffset","toolbar","location","defaultElement","integrationOptions","useDeferUpdateForTemplates","filteredItems","_filteredItems","value","preparedItems","_preparedItems","option","currentViewType","type","timeZoneCalculator","_timeZoneCalculator","_setDeprecatedOptions","_deprecatedOptions","since","message","_defaultOptionsRules","device","real","deviceType","isSimulator","options","focusStateEnabled","current","generic","data","index","element","text","split","forEach","span","addClass","append","_postponeDataSourceLoading","promise","postponedOperations","add","_reloadDataSource","bind","_postponeResourceLoading","whenLoaded","_getCurrentViewOption","resolveCallbacks","done","resolve","_optionChanged","args","_this$_header","_this$_header2","_this$_header4","name","_updateOption","_dateOption","_workSpace","_header","getStartViewDate","_appointments","_filterAppointmentsByDate","_initDataSource","appointmentDataProvider","setDataSource","_dataSource","_getCurrentViewOptions","repaint","_this$_header3","_validateDayHours","_validateCellDuration","items","allowDrag","_allowDragging","allowResize","_allowResizing","itemTemplate","_getAppointmentTemplate","_this$_header5","_refreshWorkSpace","_headerConfig","callPostponedOperations","_dataAccessors","agendaResourceProcessor","initializeState","updateInstances","_createAppointmentPopupForm","_actions","_createActionByOption","_getAppointmentRenderedAction","_readyToRenderAppointments","_getAppointmentsToRepaint","_dimensionChanged","_initEditing","_editing","_bringEditingModeToAppointments","hideAppointmentTooltip","_cleanPopup","_updateExpression","updateDataAccessors","_initAppointmentTemplate","_toggleAdaptiveClass","_isHorizontalVirtualScrolling","fullName","optionName","optionValue","deserializeDate","_getSerializationFormat","getDateSerializationFormat","editingConfig","allowDelete","_isAgenda","allowAllDayResize","_supportAllDayResizing","getLayoutManager","appointmentRenderingStrategyName","_allowAllDayResizing","intervalCount","_isAllDayExpanded","hasAllDayAppointments","_getTimezoneOffsetByOption","date","calculateTimezoneByValue","dateRange","getDateRange","startDate","createDate","path","endDate","filterByDate","result","load","_fireContentReadyAction","fail","reject","isLoading","container","$element","position","of","contentReadyBase","fireContentReady","_workSpaceRecalculation","_this$_workSpaceRecal","_isVisible","_toggleSmallClass","workspace","getWorkSpace","appointments","createAppointmentsMap","_appointmentPopup","triggerResize","updatePopupFullScreenMode","_clean","width","get","toggleClass","_visibilityChanged","visible","_dataSourceOptions","paginate","_initAllDayPanel","_init","_initExpressions","startDateTimeZone","endDateTimeZone","allDay","description","recurrenceRule","recurrenceException","disabled","_initActions","_compactAppointmentsHelper","_asyncTemplatesTimers","_dataSourceLoadedCallback","_subscribes","createAppointmentDataProvider","dataAccessors","appointmentDuration","getLoadedResources","getIsVirtualScrolling","isVirtualScrolling","getSupportAllDayRow","supportAllDayRow","getViewType","getViewDirection","viewDirection","getGroupCount","_getGroupCount","getViewDataProvider","viewDataProvider","_initTemplates","_templateManager","addDefaultTemplates","appointmentTooltip","dropDownAppointment","expr","createGetter","property","getDate","getter","valueOf","item","$container","model","getAppointmentsInstance","_renderAppointmentTemplate","_renderContent","_renderContentImpl","_updatePreparedItems","_dataSourceChangedHandler","_renderAppointments","onDataSourceChanged","_currentViewOptions$s","currentViewOptions","_filterAppointments","filter","viewModel","instance","$dateTable","_getDateTable","cleanState","layoutManager","appointmentsMap","getRepaintedAppointments","fields","create","forceIsoDateParsing","exprObj","replace","getResourceDataAccessors","_isReadOnly","prop","Object","prototype","hasOwnProperty","call","_dispose","_this$_recurrenceDial","_appointmentTooltip","dispose","_recurrenceDialog","hideAppointmentPopup","clearTimeout","excludeValidators","_renderFocusTarget","_initMarkup","_renderMainContainer","_renderHeader","_layoutManager","_createComponent","_appointmentsConfig","_getAppointmentTooltipOptions","_isDataSourceLoaded","_isDataSourceLoading","_initMarkupCore","_this$_appointmentPop","_appointmentForm","_this$_appointmentFor","form","createAppointmentForm","createAppointmentPopup","_mainContainer","scheduler","getDataAccessors","createComponent","component","getEditingConfig","getFirstDayOfWeek","getStartDayHour","getCalculatedEndDate","startDateWithStartHour","calculateEndDate","getElement","focus","getResources","getTimeZoneCalculator","getAppointmentFormOpening","processActionResult","arg","canceled","_processActionResult","addAppointment","appointment","updateAppointment","sourceAppointment","updatedAppointment","updateScrollPosition","resourceItem","inAllDayRow","getScrollableContainer","getWorkSpaceScrollableContainer","getAppointmentTemplate","showAppointmentPopup","checkAndDeleteAppointment","isAppointmentInAllDayPanel","createFormattedDateText","targetedAppointment","fire","getAppointmentDisabled","targetedAdapter","deletingOptions","fireOnAppointmentDeleting","cancel","_checkRecurringAppointment","processDeleteAppointment","_getExtraAppointmentTooltipOptions","rtlEnabled","offset","appointmentData","itTakesAllDay","appointmentTakesAllDay","_cleanWorkspace","_renderWorkSpace","fixedContainer","getFixedContainer","allDayContainer","getAllDayContainer","_waitAsyncTemplate","_this$_workSpaceRecal2","isLoaded","_render","_this$getWorkSpace","updateHeaderEmptyCellWidth","length","$header","appendTo","countConfig","_getViewCountConfig","isAdaptive","tabIndex","agendaDuration","onCurrentViewChange","onCurrentDateChange","startViewDate","todayDate","getAgendaResourceProcessor","createGetAppointmentColor","getAppointmentDataProvider","observer","onItemRendered","onItemClick","onItemContextMenu","isRenovatedAppointments","getResizableStep","positionHelper","getDOMElementsMetaData","_this$_workSpace","_this$_workSpace2","isVerticalViewDirection","getRenderingStrategyInstance","getDirection","isVerticalGroupedWorkSpace","_isVerticalGroupedWorkSpace","onContentReady","_this$_workSpace3","getCollectorOffset","needApplyCollectorOffset","getAppointmentDurationInMinutes","log","_getCurrentViewType","_this$_header6","$workSpace","workSpaceComponent","workSpaceConfig","_workSpaceConfig","initDragBehavior","_all","_attachTablesEvents","getWorkArea","_recalculateWorkspace","_getHeaderDate","view","_getViewByName","viewCount","i","_refreshDateTimeIndication","_currentViewOptions$s2","horizontalVirtualScrollingAllowed","orientation","_currentViewOptions$s3","getFilteredItems","accessKey","allDayExpanded","onSelectionChanged","draggingMode","schedulerHeight","schedulerWidth","onSelectedCellsClick","showAddAppointmentPopup","onRenderAppointments","onShowAllDayPanel","getHeaderHeight","DOM","onScrollEnd","updateResizableArea","_isRenovatedRender","hoursInterval","_getTemplate","callback","_options","silent","timer","setTimeout","push","_getTemplateByOption","viewName","detach","remove","getWorkSpaceScrollable","getScrollable","getHeader","_this$_appointmentPop2","rawAppointment","singleAppointment","exceptionDate","isDeleted","isPopupEditing","dragEvent","getField","evalRecurrenceRule","isValid","editMode","_excludeAppointmentFromSeries","_showRecurrenceChangeConfirm","editingMode","moveAppointmentBack","newRawAppointment","singleRawAppointment","keyPropertyName","keyName","canCreateNewAppointment","isToolbarVisible","action","EXCLUDE_FROM_SERIES","excludeInfo","source","_editAppointmentData","_updateAppointment","_createRecurrenceException","_getSerializedDate","join","isAllDay","setHours","getHours","getMinutes","getSeconds","getMilliseconds","serializeDate","seriesText","occurrenceText","messageHtml","showCloseButton","showTitle","buttons","onClick","popupOptions","onHidden","e","copyRootClassesToWrapper","_ignoreCopyRootClassesToWrapperDeprecation","_getUpdatedData","getConvertedFromGrid","isValidDate","isNaN","getTime","targetCell","getTargetCellData","cellStartDate","cellEndDate","appointmentStartDate","appointmentEndDate","resultedStartDate","duration","isKeepAppointmentHours","keepOriginalHours","timeInMs","resultedEndDate","dateCopy","timeZoneOffset","getTimezoneOffsetChangeInMs","rawResult","getTargetedAppointment","settings","getAppointmentSettings","info","getAppointmentInfo","appointmentIndex","_itemIndexKey","adapter","clone","isRecurrent","agendaSettings","rawTargetedAppointment","setTargetedAppointmentResources","displayStartDate","displayEndDate","subscribe","subject","Array","slice","arguments","Error","apply","getDataByDroppableCell","target","onUpdatePrevented","updatingOptions","newData","oldData","performFailAction","err","deferred","_expandAllDayPanel","update","always","storeAppointment","_onDataPromiseCompleted","actionOptions","resolveCallback","callbackResult","state","handlerName","error","getActions","dayHasAppointment","getConvertedToTimeZone","dayTimeStamp","startDateTimeStamp","endDateTimeStamp","resourcesSetter","setter","getGroups","setResourceCallback","apptSettings","_positionMap","groupIndex","_","group","id","setting","getCellDataByCoordinates","left","top","field","_this$_workSpace4","getEndViewDate","cellData","cellGroups","appointmentAdapter","resultAppointment","createNewAppointment","newRawTargetedAppointment","newTargetedAppointment","isCreateAppointment","createPopupAppointment","CREATE","UPDATE","toMs","dateToMilliseconds","setField","saveChanges","_this$_appointmentPop3","saveChangesAsync","showAppointmentTooltip","appointmentConfig","itemData","_getAppointmentColor","deferredColor","showAppointmentTooltipCore","resourceConfig","map","currentAppointmentData","color","targetElement","isAlreadyShown","scrollToTime","hours","minutes","scrollTo","serializedAppointment","addingOptions","deleteAppointment","targetedAppointmentData","deleteRecurrence","firstDayOfWeekIndex","_getDragBehavior","dragBehavior","include"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport config from \"../../core/config\";\r\nimport devices from \"../../core/devices\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../core/templates/empty_template\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject,\r\n    isDeferred,\r\n    isPromise\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    custom as customDialog\r\n} from \"../dialog\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    AppointmentPopup,\r\n    ACTION_TO_APPOINTMENT\r\n} from \"./appointmentPopup/popup\";\r\nimport {\r\n    AppointmentForm\r\n} from \"./appointmentPopup/form\";\r\nimport {\r\n    CompactAppointmentsHelper\r\n} from \"./compactAppointmentsHelper\";\r\nimport {\r\n    DesktopTooltipStrategy\r\n} from \"./tooltip_strategies/desktopTooltipStrategy\";\r\nimport {\r\n    MobileTooltipStrategy\r\n} from \"./tooltip_strategies/mobileTooltipStrategy\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"./loading\";\r\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\r\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\r\nimport {\r\n    SchedulerHeader\r\n} from \"./header/header\";\r\nimport subscribes from \"./subscribes\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport timeZoneUtils from \"./utils.timeZone\";\r\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\r\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\r\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\r\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\r\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\r\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\r\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\r\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\r\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"./appointmentAdapter\";\r\nimport {\r\n    AppointmentTooltipInfo\r\n} from \"./dataStructures\";\r\nimport {\r\n    utils\r\n} from \"./utils\";\r\nimport {\r\n    createExpressions,\r\n    createResourceEditorModel as _createResourceEditorModel,\r\n    getAppointmentColor,\r\n    getCellGroups,\r\n    loadResources,\r\n    setResourceToAppointment\r\n} from \"./resources/utils\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"./expressionUtils\";\r\nimport {\r\n    validateDayHours,\r\n    isDateAndTimeView as _isDateAndTimeView,\r\n    isTimelineView\r\n} from \"../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport {\r\n    renderAppointments\r\n} from \"./appointments/render\";\r\nimport {\r\n    AgendaResourceProcessor\r\n} from \"./resources/agendaResourceProcessor\";\r\nimport {\r\n    AppointmentDataProvider\r\n} from \"./appointments/dataProvider/appointmentDataProvider\";\r\nimport {\r\n    getAppointmentTakesAllDay\r\n} from \"../../renovation/ui/scheduler/appointment/utils/getAppointmentTakesAllDay\";\r\nimport {\r\n    getPreparedDataItems\r\n} from \"../../renovation/ui/scheduler/utils/data\";\r\nimport {\r\n    getCurrentView\r\n} from \"../../renovation/ui/scheduler/model/views\";\r\nimport {\r\n    createTimeZoneCalculator\r\n} from \"../../renovation/ui/scheduler/timeZoneCalculator/createTimeZoneCalculator\";\r\nimport {\r\n    excludeFromRecurrence\r\n} from \"../../renovation/ui/scheduler/utils/recurrence/excludeFromRecurrence\";\r\nvar MINUTES_IN_HOUR = 60;\r\nvar DEFAULT_AGENDA_DURATION = 7;\r\nvar WIDGET_CLASS = \"dx-scheduler\";\r\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\r\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\r\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\r\nvar WIDGET_SMALL_WIDTH = 400;\r\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\r\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\r\nvar DEFAULT_APPOINTMENT_TEMPLATE_NAME = \"item\";\r\nvar DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME = \"appointmentCollector\";\r\nvar DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME = \"dropDownAppointment\";\r\nvar VIEWS_CONFIG = {\r\n    day: {\r\n        workSpace: SchedulerWorkSpaceDay,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    week: {\r\n        workSpace: SchedulerWorkSpaceWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    workWeek: {\r\n        workSpace: SchedulerWorkSpaceWorkWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    month: {\r\n        workSpace: SchedulerWorkSpaceMonth,\r\n        renderingStrategy: \"horizontalMonth\"\r\n    },\r\n    timelineDay: {\r\n        workSpace: SchedulerTimelineDay,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWeek: {\r\n        workSpace: SchedulerTimelineWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWorkWeek: {\r\n        workSpace: SchedulerTimelineWorkWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineMonth: {\r\n        workSpace: SchedulerTimelineMonth,\r\n        renderingStrategy: \"horizontalMonthLine\"\r\n    },\r\n    agenda: {\r\n        workSpace: SchedulerAgenda,\r\n        renderingStrategy: \"agenda\"\r\n    }\r\n};\r\nvar StoreEventNames = {\r\n    ADDING: \"onAppointmentAdding\",\r\n    ADDED: \"onAppointmentAdded\",\r\n    DELETING: \"onAppointmentDeleting\",\r\n    DELETED: \"onAppointmentDeleted\",\r\n    UPDATING: \"onAppointmentUpdating\",\r\n    UPDATED: \"onAppointmentUpdated\"\r\n};\r\nvar RECURRENCE_EDITING_MODE = {\r\n    SERIES: \"editSeries\",\r\n    OCCURENCE: \"editOccurence\",\r\n    CANCEL: \"cancel\"\r\n};\r\nclass Scheduler extends Widget {\r\n    _getDefaultOptions() {\r\n        var defaultOptions = extend(super._getDefaultOptions(), {\r\n            views: [\"day\", \"week\"],\r\n            currentView: \"day\",\r\n            currentDate: dateUtils.trimTime(new Date),\r\n            min: void 0,\r\n            max: void 0,\r\n            dateSerializationFormat: void 0,\r\n            firstDayOfWeek: void 0,\r\n            groups: [],\r\n            resources: [],\r\n            loadedResources: [],\r\n            resourceLoaderMap: new Map,\r\n            dataSource: null,\r\n            customizeDateNavigatorText: void 0,\r\n            appointmentTemplate: DEFAULT_APPOINTMENT_TEMPLATE_NAME,\r\n            dropDownAppointmentTemplate: DEFAULT_DROP_DOWN_APPOINTMENT_TEMPLATE_NAME,\r\n            appointmentCollectorTemplate: DEFAULT_APPOINTMENT_COLLECTOR_TEMPLATE_NAME,\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            editing: {\r\n                allowAdding: true,\r\n                allowDeleting: true,\r\n                allowDragging: true,\r\n                allowResizing: true,\r\n                allowUpdating: true,\r\n                allowTimeZoneEditing: false\r\n            },\r\n            showAllDayPanel: true,\r\n            showCurrentTimeIndicator: true,\r\n            shadeUntilCurrentTime: false,\r\n            indicatorUpdateInterval: 3e5,\r\n            indicatorTime: void 0,\r\n            recurrenceEditMode: \"dialog\",\r\n            cellDuration: 30,\r\n            maxAppointmentsPerCell: \"auto\",\r\n            selectedCellData: [],\r\n            groupByDate: false,\r\n            onAppointmentRendered: null,\r\n            onAppointmentClick: null,\r\n            onAppointmentDblClick: null,\r\n            onAppointmentContextMenu: null,\r\n            onCellClick: null,\r\n            onCellContextMenu: null,\r\n            onAppointmentAdding: null,\r\n            onAppointmentAdded: null,\r\n            onAppointmentUpdating: null,\r\n            onAppointmentUpdated: null,\r\n            onAppointmentDeleting: null,\r\n            onAppointmentDeleted: null,\r\n            onAppointmentFormOpening: null,\r\n            onAppointmentTooltipShowing: null,\r\n            appointmentTooltipTemplate: \"appointmentTooltip\",\r\n            appointmentPopupTemplate: \"appointmentPopup\",\r\n            crossScrollingEnabled: false,\r\n            useDropDownViewSwitcher: false,\r\n            startDateExpr: \"startDate\",\r\n            endDateExpr: \"endDate\",\r\n            textExpr: \"text\",\r\n            descriptionExpr: \"description\",\r\n            allDayExpr: \"allDay\",\r\n            recurrenceRuleExpr: \"recurrenceRule\",\r\n            recurrenceExceptionExpr: \"recurrenceException\",\r\n            disabledExpr: \"disabled\",\r\n            remoteFiltering: false,\r\n            timeZone: \"\",\r\n            startDateTimeZoneExpr: \"startDateTimeZone\",\r\n            endDateTimeZoneExpr: \"endDateTimeZone\",\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            adaptivityEnabled: false,\r\n            allowMultipleCellSelection: true,\r\n            scrolling: {\r\n                mode: \"standard\"\r\n            },\r\n            allDayPanelMode: \"all\",\r\n            renovateRender: true,\r\n            _draggingMode: \"outlook\",\r\n            _appointmentTooltipOffset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            _appointmentTooltipButtonsPosition: \"bottom\",\r\n            _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\r\n            _dropDownButtonIcon: \"overflow\",\r\n            _appointmentCountPerCell: 2,\r\n            _collectorOffset: 0,\r\n            _appointmentOffset: 26,\r\n            toolbar: [{\r\n                location: \"before\",\r\n                defaultElement: \"dateNavigator\"\r\n            }, {\r\n                location: \"after\",\r\n                defaultElement: \"viewSwitcher\"\r\n            }]\r\n        });\r\n        return extend(true, defaultOptions, {\r\n            integrationOptions: {\r\n                useDeferUpdateForTemplates: false\r\n            }\r\n        })\r\n    }\r\n    get filteredItems() {\r\n        if (!this._filteredItems) {\r\n            this._filteredItems = []\r\n        }\r\n        return this._filteredItems\r\n    }\r\n    set filteredItems(value) {\r\n        this._filteredItems = value\r\n    }\r\n    get preparedItems() {\r\n        if (!this._preparedItems) {\r\n            this._preparedItems = []\r\n        }\r\n        return this._preparedItems\r\n    }\r\n    set preparedItems(value) {\r\n        this._preparedItems = value\r\n    }\r\n    get currentView() {\r\n        return getCurrentView(this.option(\"currentView\"), this.option(\"views\"))\r\n    }\r\n    get currentViewType() {\r\n        return isObject(this.currentView) ? this.currentView.type : this.currentView\r\n    }\r\n    get timeZoneCalculator() {\r\n        if (!this._timeZoneCalculator) {\r\n            this._timeZoneCalculator = createTimeZoneCalculator(this.option(\"timeZone\"))\r\n        }\r\n        return this._timeZoneCalculator\r\n    }\r\n    _setDeprecatedOptions() {\r\n        super._setDeprecatedOptions();\r\n        extend(this._deprecatedOptions, {\r\n            dropDownAppointmentTemplate: {\r\n                since: \"19.2\",\r\n                message: \"appointmentTooltipTemplate\"\r\n            }\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !devices.current().generic\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                editing: {\r\n                    allowDragging: false,\r\n                    allowResizing: false\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                dateCellTemplate: function(data, index, element) {\r\n                    var text = data.text;\r\n                    text.split(\" \").forEach((function(text, index) {\r\n                        var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\r\n                        $(element).append(span);\r\n                        if (!index) {\r\n                            $(element).append(\" \")\r\n                        }\r\n                    }))\r\n                },\r\n                _appointmentTooltipOffset: {\r\n                    x: 0,\r\n                    y: 11\r\n                },\r\n                _appointmentTooltipButtonsPosition: \"top\",\r\n                _appointmentTooltipOpenButtonText: null,\r\n                _dropDownButtonIcon: \"chevrondown\",\r\n                _appointmentCountPerCell: 1,\r\n                _collectorOffset: 20,\r\n                _appointmentOffset: 30\r\n            }\r\n        }])\r\n    }\r\n    _postponeDataSourceLoading(promise) {\r\n        this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise)\r\n    }\r\n    _postponeResourceLoading() {\r\n        var whenLoaded = this.postponedOperations.add(\"loadResources\", () => {\r\n            var groups = this._getCurrentViewOption(\"groups\");\r\n            return loadResources(groups, this.option(\"resources\"), this.option(\"resourceLoaderMap\"))\r\n        });\r\n        var resolveCallbacks = new Deferred;\r\n        whenLoaded.done(resources => {\r\n            this.option(\"loadedResources\", resources);\r\n            resolveCallbacks.resolve(resources)\r\n        });\r\n        this._postponeDataSourceLoading(whenLoaded);\r\n        return resolveCallbacks.promise()\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_header, _this$_header2, _this$_header4;\r\n        var value = args.value;\r\n        var name = args.name;\r\n        switch (args.name) {\r\n            case \"customizeDateNavigatorText\":\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"currentDate\":\r\n                value = this._dateOption(name);\r\n                value = dateUtils.trimTime(new Date(value));\r\n                this.option(\"selectedCellData\", []);\r\n                this._workSpace.option(name, new Date(value));\r\n                null === (_this$_header = this._header) || void 0 === _this$_header ? void 0 : _this$_header.option(name, new Date(value));\r\n                null === (_this$_header2 = this._header) || void 0 === _this$_header2 ? void 0 : _this$_header2.option(\"startViewDate\", this.getStartViewDate());\r\n                this._appointments.option(\"items\", []);\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                this.appointmentDataProvider.setDataSource(this._dataSource);\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._filterAppointmentsByDate();\r\n                    this._updateOption(\"workSpace\", \"showAllDayPanel\", this.option(\"showAllDayPanel\"))\r\n                });\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                value = this._dateOption(name);\r\n                this._updateOption(\"header\", name, new Date(value));\r\n                this._updateOption(\"workSpace\", name, new Date(value));\r\n                break;\r\n            case \"views\":\r\n                if (this._getCurrentViewOptions()) {\r\n                    this.repaint()\r\n                } else {\r\n                    var _this$_header3;\r\n                    null === (_this$_header3 = this._header) || void 0 === _this$_header3 ? void 0 : _this$_header3.option(name, value)\r\n                }\r\n                break;\r\n            case \"useDropDownViewSwitcher\":\r\n                null === (_this$_header4 = this._header) || void 0 === _this$_header4 ? void 0 : _this$_header4.option(name, value);\r\n                break;\r\n            case \"currentView\":\r\n                this._validateDayHours();\r\n                this._validateCellDuration();\r\n                this._appointments.option({\r\n                    items: [],\r\n                    allowDrag: this._allowDragging(),\r\n                    allowResize: this._allowResizing(),\r\n                    itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\r\n                });\r\n                this._postponeResourceLoading().done(resources => {\r\n                    var _this$_header5;\r\n                    this._refreshWorkSpace(resources);\r\n                    null === (_this$_header5 = this._header) || void 0 === _this$_header5 ? void 0 : _this$_header5.option(this._headerConfig());\r\n                    this._filterAppointmentsByDate();\r\n                    this._appointments.option(\"allowAllDayResize\", \"day\" !== value)\r\n                });\r\n                this.postponedOperations.callPostponedOperations();\r\n                break;\r\n            case \"appointmentTemplate\":\r\n                this._appointments.option(\"itemTemplate\", value);\r\n                break;\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n                this.repaint();\r\n                break;\r\n            case \"groups\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate()\r\n                });\r\n                break;\r\n            case \"resources\":\r\n                this._dataAccessors.resources = createExpressions(this.option(\"resources\"));\r\n                this.agendaResourceProcessor.initializeState(this.option(\"resources\"));\r\n                this.updateInstances();\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate();\r\n                    this._createAppointmentPopupForm()\r\n                });\r\n                break;\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n                this._validateDayHours();\r\n                this.updateInstances();\r\n                this._appointments.option(\"items\", []);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.repaint();\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case StoreEventNames.ADDING:\r\n            case StoreEventNames.ADDED:\r\n            case StoreEventNames.UPDATING:\r\n            case StoreEventNames.UPDATED:\r\n            case StoreEventNames.DELETING:\r\n            case StoreEventNames.DELETED:\r\n            case \"onAppointmentFormOpening\":\r\n            case \"onAppointmentTooltipShowing\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            case \"onAppointmentRendered\":\r\n                this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\r\n                break;\r\n            case \"onAppointmentClick\":\r\n                this._appointments.option(\"onItemClick\", this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentDblClick\":\r\n                this._appointments.option(name, this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentContextMenu\":\r\n                this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\r\n                break;\r\n            case \"noDataText\":\r\n            case \"allowMultipleCellSelection\":\r\n            case \"selectedCellData\":\r\n            case \"accessKey\":\r\n            case \"onCellClick\":\r\n            case \"onCellContextMenu\":\r\n                this._workSpace.option(name, value);\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    if (this._readyToRenderAppointments) {\r\n                        this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                    }\r\n                });\r\n                break;\r\n            case \"cellDuration\":\r\n                this._validateCellDuration();\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.option(\"items\", []);\r\n                if (this._readyToRenderAppointments) {\r\n                    this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\r\n                    this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                }\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._updateOption(\"header\", name, value);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.option(name, value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"width\":\r\n                this._updateOption(\"header\", name, value);\r\n                if (this.option(\"crossScrollingEnabled\")) {\r\n                    this._updateOption(\"workSpace\", \"width\", value)\r\n                }\r\n                this._updateOption(\"workSpace\", \"schedulerWidth\", value);\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                this._updateOption(\"workSpace\", \"schedulerHeight\", value);\r\n                break;\r\n            case \"editing\":\r\n                this._initEditing();\r\n                var editing = this._editing;\r\n                this._bringEditingModeToAppointments(editing);\r\n                this.hideAppointmentTooltip();\r\n                this._cleanPopup();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                this.updateInstances();\r\n                this.repaint();\r\n                break;\r\n            case \"showCurrentTimeIndicator\":\r\n            case \"indicatorTime\":\r\n            case \"indicatorUpdateInterval\":\r\n            case \"shadeUntilCurrentTime\":\r\n            case \"groupByDate\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this.repaint();\r\n                break;\r\n            case \"appointmentDragging\":\r\n            case \"appointmentTooltipTemplate\":\r\n            case \"appointmentPopupTemplate\":\r\n            case \"recurrenceEditMode\":\r\n            case \"remoteFiltering\":\r\n            case \"timeZone\":\r\n                this.updateInstances();\r\n                this.repaint();\r\n                break;\r\n            case \"dropDownAppointmentTemplate\":\r\n            case \"appointmentCollectorTemplate\":\r\n            case \"_appointmentTooltipOffset\":\r\n            case \"_appointmentTooltipButtonsPosition\":\r\n            case \"_appointmentTooltipOpenButtonText\":\r\n            case \"_dropDownButtonIcon\":\r\n            case \"_appointmentCountPerCell\":\r\n            case \"_collectorOffset\":\r\n            case \"_appointmentOffset\":\r\n                this.repaint();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"maxAppointmentsPerCell\":\r\n                break;\r\n            case \"startDateExpr\":\r\n            case \"endDateExpr\":\r\n            case \"startDateTimeZoneExpr\":\r\n            case \"endDateTimeZoneExpr\":\r\n            case \"textExpr\":\r\n            case \"descriptionExpr\":\r\n            case \"allDayExpr\":\r\n            case \"recurrenceRuleExpr\":\r\n            case \"recurrenceExceptionExpr\":\r\n            case \"disabledExpr\":\r\n                this._updateExpression(name, value);\r\n                this.appointmentDataProvider.updateDataAccessors(this._dataAccessors);\r\n                this._initAppointmentTemplate();\r\n                this.repaint();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                this._toggleAdaptiveClass();\r\n                this.repaint();\r\n                break;\r\n            case \"scrolling\":\r\n                this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\r\n                this._updateOption(\"workSpace\", args.fullName, value);\r\n                break;\r\n            case \"allDayPanelMode\":\r\n                this._updateOption(\"workSpace\", args.fullName, value);\r\n                break;\r\n            case \"renovateRender\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                break;\r\n            case \"_draggingMode\":\r\n                this._workSpace.option(\"draggingMode\", value);\r\n                break;\r\n            case \"toolbar\":\r\n                this._header ? this._header.option(\"items\", value) : this.repaint();\r\n                break;\r\n            case \"loadedResources\":\r\n            case \"resourceLoaderMap\":\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _dateOption(optionName) {\r\n        var optionValue = this._getCurrentViewOption(optionName);\r\n        return dateSerialization.deserializeDate(optionValue)\r\n    }\r\n    _getSerializationFormat(optionName) {\r\n        var value = this._getCurrentViewOption(optionName);\r\n        if (\"number\" === typeof value) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    }\r\n    _bringEditingModeToAppointments(editing) {\r\n        var editingConfig = {\r\n            allowDelete: editing.allowUpdating && editing.allowDeleting\r\n        };\r\n        if (!this._isAgenda()) {\r\n            editingConfig.allowDrag = editing.allowDragging;\r\n            editingConfig.allowResize = editing.allowResizing;\r\n            editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing()\r\n        }\r\n        this._appointments.option(editingConfig);\r\n        this.repaint()\r\n    }\r\n    _isAgenda() {\r\n        return \"agenda\" === this.getLayoutManager().appointmentRenderingStrategyName\r\n    }\r\n    _allowDragging() {\r\n        return this._editing.allowDragging && !this._isAgenda()\r\n    }\r\n    _allowResizing() {\r\n        return this._editing.allowResizing && !this._isAgenda()\r\n    }\r\n    _allowAllDayResizing() {\r\n        return this._editing.allowResizing && this._supportAllDayResizing()\r\n    }\r\n    _supportAllDayResizing() {\r\n        return \"day\" !== this.currentViewType || this.currentView.intervalCount > 1\r\n    }\r\n    _isAllDayExpanded() {\r\n        return this.option(\"showAllDayPanel\") && this.appointmentDataProvider.hasAllDayAppointments(this.filteredItems, this.preparedItems)\r\n    }\r\n    _getTimezoneOffsetByOption(date) {\r\n        return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date)\r\n    }\r\n    _filterAppointmentsByDate() {\r\n        var dateRange = this._workSpace.getDateRange();\r\n        var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\r\n            path: \"fromGrid\"\r\n        });\r\n        var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\r\n            path: \"fromGrid\"\r\n        });\r\n        this.appointmentDataProvider.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"))\r\n    }\r\n    _reloadDataSource() {\r\n        var result = new Deferred;\r\n        if (this._dataSource) {\r\n            this._dataSource.load().done(function() {\r\n                hideLoading();\r\n                this._fireContentReadyAction(result)\r\n            }.bind(this)).fail((function() {\r\n                hideLoading();\r\n                result.reject()\r\n            }));\r\n            this._dataSource.isLoading() && showLoading({\r\n                container: this.$element(),\r\n                position: {\r\n                    of: this.$element()\r\n                }\r\n            })\r\n        } else {\r\n            this._fireContentReadyAction(result)\r\n        }\r\n        return result.promise()\r\n    }\r\n    _fireContentReadyAction(result) {\r\n        var contentReadyBase = super._fireContentReadyAction.bind(this);\r\n        var fireContentReady = () => {\r\n            contentReadyBase();\r\n            null === result || void 0 === result ? void 0 : result.resolve()\r\n        };\r\n        if (this._workSpaceRecalculation) {\r\n            var _this$_workSpaceRecal;\r\n            null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {\r\n                fireContentReady()\r\n            })\r\n        } else {\r\n            fireContentReady()\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isVisible()) {\r\n            return\r\n        }\r\n        this._toggleSmallClass();\r\n        var workspace = this.getWorkSpace();\r\n        if (!this._isAgenda() && this.filteredItems && workspace) {\r\n            workspace.option(\"allDayExpanded\", this._isAllDayExpanded());\r\n            workspace._dimensionChanged();\r\n            var appointments = this.getLayoutManager().createAppointmentsMap(this.filteredItems);\r\n            this._appointments.option(\"items\", appointments)\r\n        }\r\n        this.hideAppointmentTooltip();\r\n        this._appointmentPopup.triggerResize();\r\n        this._appointmentPopup.updatePopupFullScreenMode()\r\n    }\r\n    _clean() {\r\n        this._cleanPopup();\r\n        super._clean()\r\n    }\r\n    _toggleSmallClass() {\r\n        var width = getBoundingRect(this.$element().get(0)).width;\r\n        this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH)\r\n    }\r\n    _toggleAdaptiveClass() {\r\n        this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"))\r\n    }\r\n    _visibilityChanged(visible) {\r\n        visible && this._dimensionChanged()\r\n    }\r\n    _dataSourceOptions() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    }\r\n    _initAllDayPanel() {\r\n        if (\"hidden\" === this.option(\"allDayPanelMode\")) {\r\n            this.option(\"showAllDayPanel\", false)\r\n        }\r\n    }\r\n    _init() {\r\n        this._initExpressions({\r\n            startDate: this.option(\"startDateExpr\"),\r\n            endDate: this.option(\"endDateExpr\"),\r\n            startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\r\n            endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\r\n            allDay: this.option(\"allDayExpr\"),\r\n            text: this.option(\"textExpr\"),\r\n            description: this.option(\"descriptionExpr\"),\r\n            recurrenceRule: this.option(\"recurrenceRuleExpr\"),\r\n            recurrenceException: this.option(\"recurrenceExceptionExpr\"),\r\n            disabled: this.option(\"disabledExpr\")\r\n        });\r\n        super._init();\r\n        this._initAllDayPanel();\r\n        this._initDataSource();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this._initEditing();\r\n        this.updateInstances();\r\n        this._initActions();\r\n        this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\r\n        this._asyncTemplatesTimers = [];\r\n        this._dataSourceLoadedCallback = Callbacks();\r\n        this._subscribes = subscribes;\r\n        this.agendaResourceProcessor = new AgendaResourceProcessor(this.option(\"resources\"))\r\n    }\r\n    createAppointmentDataProvider() {\r\n        this.appointmentDataProvider = new AppointmentDataProvider({\r\n            dataSource: this._dataSource,\r\n            dataAccessors: this._dataAccessors,\r\n            timeZoneCalculator: this.timeZoneCalculator,\r\n            dateSerializationFormat: this.option(\"dateSerializationFormat\"),\r\n            resources: this.option(\"resources\"),\r\n            startDayHour: this._getCurrentViewOption(\"startDayHour\"),\r\n            endDayHour: this._getCurrentViewOption(\"endDayHour\"),\r\n            appointmentDuration: this._getCurrentViewOption(\"cellDuration\"),\r\n            allDayPanelMode: this._getCurrentViewOption(\"allDayPanelMode\"),\r\n            showAllDayPanel: this.option(\"showAllDayPanel\"),\r\n            getLoadedResources: () => this.option(\"loadedResources\"),\r\n            getIsVirtualScrolling: () => this.isVirtualScrolling(),\r\n            getSupportAllDayRow: () => this._workSpace.supportAllDayRow(),\r\n            getViewType: () => this._workSpace.type,\r\n            getViewDirection: () => this._workSpace.viewDirection,\r\n            getDateRange: () => this._workSpace.getDateRange(),\r\n            getGroupCount: () => this._workSpace._getGroupCount(),\r\n            getViewDataProvider: () => this._workSpace.viewDataProvider\r\n        })\r\n    }\r\n    updateInstances() {\r\n        this._timeZoneCalculator = null;\r\n        if (this.getWorkSpace()) {\r\n            this.createAppointmentDataProvider()\r\n        }\r\n    }\r\n    _initTemplates() {\r\n        this._initAppointmentTemplate();\r\n        this._templateManager.addDefaultTemplates({\r\n            appointmentTooltip: new EmptyTemplate,\r\n            dropDownAppointment: new EmptyTemplate\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _initAppointmentTemplate() {\r\n        var {\r\n            expr: expr\r\n        } = this._dataAccessors;\r\n        var createGetter = property => compileGetter(\"appointmentData.\".concat(property));\r\n        var getDate = getter => data => {\r\n            var value = getter(data);\r\n            if (value instanceof Date) {\r\n                return value.valueOf()\r\n            }\r\n            return value\r\n        };\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\r\n                text: createGetter(expr.textExpr),\r\n                startDate: getDate(createGetter(expr.startDateExpr)),\r\n                endDate: getDate(createGetter(expr.endDateExpr)),\r\n                startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\r\n                endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\r\n                allDay: createGetter(expr.allDayExpr),\r\n                recurrenceRule: createGetter(expr.recurrenceRuleExpr)\r\n            })\r\n        })\r\n    }\r\n    _renderContent() {\r\n        this._renderContentImpl()\r\n    }\r\n    _updatePreparedItems(items) {\r\n        this.preparedItems = getPreparedDataItems(items, this._dataAccessors, this._getCurrentViewOption(\"cellDuration\"), this.timeZoneCalculator)\r\n    }\r\n    _dataSourceChangedHandler(result) {\r\n        if (this._readyToRenderAppointments) {\r\n            this._workSpaceRecalculation.done(function() {\r\n                this._updatePreparedItems(result);\r\n                this._renderAppointments();\r\n                this.getWorkSpace().onDataSourceChanged(this.filteredItems)\r\n            }.bind(this))\r\n        }\r\n    }\r\n    isVirtualScrolling() {\r\n        var _currentViewOptions$s;\r\n        var workspace = this.getWorkSpace();\r\n        if (workspace) {\r\n            return workspace.isVirtualScrolling()\r\n        }\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var scrolling = this.option(\"scrolling\");\r\n        return \"virtual\" === (null === scrolling || void 0 === scrolling ? void 0 : scrolling.mode) || \"virtual\" === (null === currentViewOptions || void 0 === currentViewOptions ? void 0 : null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode)\r\n    }\r\n    _filterAppointments() {\r\n        this.filteredItems = this.appointmentDataProvider.filter(this.preparedItems)\r\n    }\r\n    _renderAppointments() {\r\n        var workspace = this.getWorkSpace();\r\n        this._filterAppointments();\r\n        workspace.option(\"allDayExpanded\", this._isAllDayExpanded());\r\n        var viewModel = [];\r\n        if (this._isVisible()) {\r\n            viewModel = this._getAppointmentsToRepaint()\r\n        }\r\n        if (this.option(\"isRenovatedAppointments\")) {\r\n            renderAppointments({\r\n                instance: this,\r\n                $dateTable: this.getWorkSpace()._getDateTable(),\r\n                viewModel: viewModel\r\n            })\r\n        } else {\r\n            this._appointments.option(\"items\", viewModel)\r\n        }\r\n        this.appointmentDataProvider.cleanState()\r\n    }\r\n    _getAppointmentsToRepaint() {\r\n        var layoutManager = this.getLayoutManager();\r\n        var appointmentsMap = layoutManager.createAppointmentsMap(this.filteredItems);\r\n        if (this.option(\"isRenovatedAppointments\")) {\r\n            var appointmentTemplate = this.option(\"appointmentTemplate\") !== DEFAULT_APPOINTMENT_TEMPLATE_NAME ? this.option(\"appointmentTemplate\") : void 0;\r\n            return {\r\n                appointments: appointmentsMap,\r\n                appointmentTemplate: appointmentTemplate\r\n            }\r\n        }\r\n        return layoutManager.getRepaintedAppointments(appointmentsMap, this.getAppointmentsInstance().option(\"items\"))\r\n    }\r\n    _initExpressions(fields) {\r\n        this._dataAccessors = utils.dataAccessors.create(fields, this._dataAccessors, config().forceIsoDateParsing, this.option(\"dateSerializationFormat\"));\r\n        this._dataAccessors.resources = createExpressions(this.option(\"resources\"))\r\n    }\r\n    _updateExpression(name, value) {\r\n        var exprObj = {};\r\n        exprObj[name.replace(\"Expr\", \"\")] = value;\r\n        this._initExpressions(exprObj)\r\n    }\r\n    getResourceDataAccessors() {\r\n        return this._dataAccessors.resources\r\n    }\r\n    _initEditing() {\r\n        var editing = this.option(\"editing\");\r\n        this._editing = {\r\n            allowAdding: !!editing,\r\n            allowUpdating: !!editing,\r\n            allowDeleting: !!editing,\r\n            allowResizing: !!editing,\r\n            allowDragging: !!editing\r\n        };\r\n        if (isObject(editing)) {\r\n            this._editing = extend(this._editing, editing)\r\n        }\r\n        this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\r\n        this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\r\n        this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly())\r\n    }\r\n    _isReadOnly() {\r\n        var result = true;\r\n        var editing = this._editing;\r\n        for (var prop in editing) {\r\n            if (Object.prototype.hasOwnProperty.call(editing, prop)) {\r\n                result = result && !editing[prop]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _dispose() {\r\n        var _this$_recurrenceDial;\r\n        this._appointmentTooltip && this._appointmentTooltip.dispose();\r\n        null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\r\n        this.hideAppointmentPopup();\r\n        this.hideAppointmentTooltip();\r\n        this._asyncTemplatesTimers.forEach(clearTimeout);\r\n        this._asyncTemplatesTimers = [];\r\n        super._dispose()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\r\n            onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\r\n            onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\r\n            onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\r\n            onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\r\n            onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\r\n            onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\"),\r\n            onAppointmentTooltipShowing: this._createActionByOption(\"onAppointmentTooltipShowing\")\r\n        }\r\n    }\r\n    _getAppointmentRenderedAction() {\r\n        return this._createActionByOption(\"onAppointmentRendered\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _renderFocusTarget() {\r\n        return noop()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this._validateDayHours();\r\n        this._validateCellDuration();\r\n        this._renderMainContainer();\r\n        this._renderHeader();\r\n        this._layoutManager = new AppointmentLayoutManager(this);\r\n        this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\r\n        this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\r\n        this._appointmentTooltip = new(this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\r\n        this._createAppointmentPopupForm();\r\n        if (this._isDataSourceLoaded() || this._isDataSourceLoading()) {\r\n            this._initMarkupCore(this.option(\"loadedResources\"));\r\n            this._dataSourceChangedHandler(this._dataSource.items());\r\n            this._fireContentReadyAction()\r\n        } else {\r\n            var groups = this._getCurrentViewOption(\"groups\");\r\n            loadResources(groups, this.option(\"resources\"), this.option(\"resourceLoaderMap\")).done(resources => {\r\n                this.option(\"loadedResources\", resources);\r\n                this._initMarkupCore(resources);\r\n                this._reloadDataSource()\r\n            })\r\n        }\r\n    }\r\n    _createAppointmentPopupForm() {\r\n        var _this$_appointmentPop;\r\n        if (this._appointmentForm) {\r\n            var _this$_appointmentFor;\r\n            null === (_this$_appointmentFor = this._appointmentForm.form) || void 0 === _this$_appointmentFor ? void 0 : _this$_appointmentFor.dispose()\r\n        }\r\n        this._appointmentForm = this.createAppointmentForm();\r\n        null === (_this$_appointmentPop = this._appointmentPopup) || void 0 === _this$_appointmentPop ? void 0 : _this$_appointmentPop.dispose();\r\n        this._appointmentPopup = this.createAppointmentPopup(this._appointmentForm)\r\n    }\r\n    _renderMainContainer() {\r\n        this._mainContainer = $(\"<div>\").addClass(\"dx-scheduler-container\");\r\n        this.$element().append(this._mainContainer)\r\n    }\r\n    createAppointmentForm() {\r\n        var scheduler = {\r\n            createResourceEditorModel: () => _createResourceEditorModel(this.option(\"resources\"), this.option(\"loadedResources\")),\r\n            getDataAccessors: () => this._dataAccessors,\r\n            createComponent: (element, component, options) => this._createComponent(element, component, options),\r\n            getEditingConfig: () => this._editing,\r\n            getFirstDayOfWeek: () => this.option(\"firstDayOfWeek\"),\r\n            getStartDayHour: () => this.option(\"startDayHour\"),\r\n            getCalculatedEndDate: startDateWithStartHour => this._workSpace.calculateEndDate(startDateWithStartHour)\r\n        };\r\n        return new AppointmentForm(scheduler)\r\n    }\r\n    createAppointmentPopup(form) {\r\n        var scheduler = {\r\n            getElement: () => this.$element(),\r\n            createComponent: (element, component, options) => this._createComponent(element, component, options),\r\n            focus: () => this.focus(),\r\n            getResources: () => this.option(\"resources\"),\r\n            getEditingConfig: () => this._editing,\r\n            getTimeZoneCalculator: () => this.timeZoneCalculator,\r\n            getDataAccessors: () => this._dataAccessors,\r\n            getAppointmentFormOpening: () => this._actions.onAppointmentFormOpening,\r\n            processActionResult: (arg, canceled) => this._processActionResult(arg, canceled),\r\n            addAppointment: appointment => this.addAppointment(appointment),\r\n            updateAppointment: (sourceAppointment, updatedAppointment) => this.updateAppointment(sourceAppointment, updatedAppointment),\r\n            updateScrollPosition: (startDate, resourceItem, inAllDayRow) => {\r\n                this._workSpace.updateScrollPosition(startDate, resourceItem, inAllDayRow)\r\n            }\r\n        };\r\n        return new AppointmentPopup(scheduler, form)\r\n    }\r\n    _getAppointmentTooltipOptions() {\r\n        return {\r\n            createComponent: this._createComponent.bind(this),\r\n            container: this.$element(),\r\n            getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\r\n            addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\r\n            getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\r\n            showAppointmentPopup: this.showAppointmentPopup.bind(this),\r\n            checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\r\n            isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\r\n            createFormattedDateText: (appointment, targetedAppointment, format) => this.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format),\r\n            getAppointmentDisabled: appointment => createAppointmentAdapter(appointment, this._dataAccessors, this.timeZoneCalculator).disabled\r\n        }\r\n    }\r\n    checkAndDeleteAppointment(appointment, targetedAppointment) {\r\n        var targetedAdapter = createAppointmentAdapter(targetedAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        var deletingOptions = this.fireOnAppointmentDeleting(appointment, targetedAdapter);\r\n        if (!deletingOptions.cancel) {\r\n            this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {\r\n                this.processDeleteAppointment(appointment, deletingOptions)\r\n            }, true)\r\n        }\r\n    }\r\n    _getExtraAppointmentTooltipOptions() {\r\n        return {\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            editing: this.option(\"editing\"),\r\n            offset: this.option(\"_appointmentTooltipOffset\")\r\n        }\r\n    }\r\n    isAppointmentInAllDayPanel(appointmentData) {\r\n        var workSpace = this._workSpace;\r\n        var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\r\n        return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\")\r\n    }\r\n    _initMarkupCore(resources) {\r\n        this._readyToRenderAppointments = hasWindow();\r\n        this._workSpace && this._cleanWorkspace();\r\n        this._renderWorkSpace(resources);\r\n        this._appointments.option({\r\n            fixedContainer: this._workSpace.getFixedContainer(),\r\n            allDayContainer: this._workSpace.getAllDayContainer()\r\n        });\r\n        this._waitAsyncTemplate(() => {\r\n            var _this$_workSpaceRecal2;\r\n            return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve()\r\n        });\r\n        this.createAppointmentDataProvider();\r\n        this._filterAppointmentsByDate()\r\n    }\r\n    _isDataSourceLoaded() {\r\n        return this._dataSource && this._dataSource.isLoaded()\r\n    }\r\n    _render() {\r\n        var _this$getWorkSpace;\r\n        this._toggleSmallClass();\r\n        this._toggleAdaptiveClass();\r\n        null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.updateHeaderEmptyCellWidth();\r\n        super._render()\r\n    }\r\n    _renderHeader() {\r\n        if (0 !== this.option(\"toolbar\").length) {\r\n            var $header = $(\"<div>\").appendTo(this._mainContainer);\r\n            this._header = this._createComponent($header, SchedulerHeader, this._headerConfig())\r\n        }\r\n    }\r\n    _headerConfig() {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var countConfig = this._getViewCountConfig();\r\n        var result = extend({\r\n            firstDayOfWeek: this.getFirstDayOfWeek(),\r\n            currentView: this.option(\"currentView\"),\r\n            isAdaptive: this.option(\"adaptivityEnabled\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\r\n            customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\"),\r\n            agendaDuration: currentViewOptions.agendaDuration || DEFAULT_AGENDA_DURATION\r\n        }, currentViewOptions);\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.views = this.option(\"views\");\r\n        result.min = new Date(this._dateOption(\"min\"));\r\n        result.max = new Date(this._dateOption(\"max\"));\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.onCurrentViewChange = name => {\r\n            this.option(\"currentView\", name)\r\n        }, result.onCurrentDateChange = date => {\r\n            this.option(\"currentDate\", date)\r\n        };\r\n        result.items = this.option(\"toolbar\");\r\n        result.startViewDate = this.getStartViewDate();\r\n        result.todayDate = () => {\r\n            var result = this.timeZoneCalculator.createDate(new Date, {\r\n                path: \"toGrid\"\r\n            });\r\n            return result\r\n        };\r\n        return result\r\n    }\r\n    _appointmentsConfig() {\r\n        var config = {\r\n            getResources: () => this.option(\"resources\"),\r\n            getResourceDataAccessors: this.getResourceDataAccessors.bind(this),\r\n            getAgendaResourceProcessor: () => this.agendaResourceProcessor,\r\n            getAppointmentColor: this.createGetAppointmentColor(),\r\n            getAppointmentDataProvider: () => this.appointmentDataProvider,\r\n            dataAccessors: this._dataAccessors,\r\n            observer: this,\r\n            onItemRendered: this._getAppointmentRenderedAction(),\r\n            onItemClick: this._createActionByOption(\"onAppointmentClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\r\n            onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            allowDrag: this._allowDragging(),\r\n            allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\r\n            allowResize: this._allowResizing(),\r\n            allowAllDayResize: this._allowAllDayResizing(),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            currentView: this.currentView,\r\n            groups: this._getCurrentViewOption(\"groups\"),\r\n            isRenovatedAppointments: this.option(\"isRenovatedAppointments\"),\r\n            timeZoneCalculator: this.timeZoneCalculator,\r\n            getResizableStep: () => this._workSpace ? this._workSpace.positionHelper.getResizableStep() : 0,\r\n            getDOMElementsMetaData: () => {\r\n                var _this$_workSpace;\r\n                return null === (_this$_workSpace = this._workSpace) || void 0 === _this$_workSpace ? void 0 : _this$_workSpace.getDOMElementsMetaData()\r\n            },\r\n            getViewDataProvider: () => {\r\n                var _this$_workSpace2;\r\n                return null === (_this$_workSpace2 = this._workSpace) || void 0 === _this$_workSpace2 ? void 0 : _this$_workSpace2.viewDataProvider\r\n            },\r\n            isVerticalViewDirection: () => \"vertical\" === this.getRenderingStrategyInstance().getDirection(),\r\n            isVerticalGroupedWorkSpace: () => this._workSpace._isVerticalGroupedWorkSpace(),\r\n            isDateAndTimeView: () => _isDateAndTimeView(this._workSpace.type),\r\n            onContentReady: () => {\r\n                var _this$_workSpace3;\r\n                null === (_this$_workSpace3 = this._workSpace) || void 0 === _this$_workSpace3 ? void 0 : _this$_workSpace3.option(\"allDayExpanded\", this._isAllDayExpanded())\r\n            }\r\n        };\r\n        return config\r\n    }\r\n    getCollectorOffset() {\r\n        if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\r\n            return this.option(\"_collectorOffset\")\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n    getAppointmentDurationInMinutes() {\r\n        return this._getCurrentViewOption(\"cellDuration\")\r\n    }\r\n    _validateCellDuration() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var cellDuration = this._getCurrentViewOption(\"cellDuration\");\r\n        if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\r\n            errors.log(\"W1015\")\r\n        }\r\n    }\r\n    _getCurrentViewType() {\r\n        return this.currentViewType\r\n    }\r\n    _renderWorkSpace(groups) {\r\n        var _this$_header6;\r\n        this._readyToRenderAppointments && this._toggleSmallClass();\r\n        var $workSpace = $(\"<div>\").appendTo(this._mainContainer);\r\n        var countConfig = this._getViewCountConfig();\r\n        var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\r\n        var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\r\n        this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\r\n        this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\r\n        this._workSpace._attachTablesEvents();\r\n        this._workSpace.getWorkArea().append(this._appointments.$element());\r\n        this._recalculateWorkspace();\r\n        countConfig.startDate && (null === (_this$_header6 = this._header) || void 0 === _this$_header6 ? void 0 : _this$_header6.option(\"currentDate\", this._workSpace._getHeaderDate()));\r\n        this._appointments.option(\"_collectorOffset\", this.getCollectorOffset())\r\n    }\r\n    _getViewCountConfig() {\r\n        var currentView = this.option(\"currentView\");\r\n        var view = this._getViewByName(currentView);\r\n        var viewCount = view && view.intervalCount || 1;\r\n        var startDate = view && view.startDate || null;\r\n        return {\r\n            intervalCount: viewCount,\r\n            startDate: startDate\r\n        }\r\n    }\r\n    _getViewByName(name) {\r\n        var views = this.option(\"views\");\r\n        for (var i = 0; i < views.length; i++) {\r\n            if (views[i].name === name || views[i].type === name || views[i] === name) {\r\n                return views[i]\r\n            }\r\n        }\r\n    }\r\n    _recalculateWorkspace() {\r\n        this._workSpaceRecalculation = new Deferred;\r\n        this._waitAsyncTemplate(() => {\r\n            triggerResizeEvent(this._workSpace.$element());\r\n            this._workSpace._refreshDateTimeIndication()\r\n        })\r\n    }\r\n    _workSpaceConfig(groups, countConfig) {\r\n        var _currentViewOptions$s2;\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var scrolling = this.option(\"scrolling\");\r\n        var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.mode);\r\n        var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(item => {\r\n            var _currentViewOptions$s3;\r\n            return scrolling.orientation === item || (null === (_currentViewOptions$s3 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s3 ? void 0 : _currentViewOptions$s3.orientation) === item\r\n        }).length > 0);\r\n        var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed || isTimelineView(this.currentViewType);\r\n        var result = extend({\r\n            resources: this.option(\"resources\"),\r\n            loadedResources: this.option(\"loadedResources\"),\r\n            getFilteredItems: () => this.filteredItems,\r\n            getResourceDataAccessors: this.getResourceDataAccessors.bind(this),\r\n            noDataText: this.option(\"noDataText\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            startDayHour: this.option(\"startDayHour\"),\r\n            endDayHour: this.option(\"endDayHour\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            cellDuration: this.option(\"cellDuration\"),\r\n            showAllDayPanel: this.option(\"showAllDayPanel\"),\r\n            showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\r\n            indicatorTime: this.option(\"indicatorTime\"),\r\n            indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\r\n            shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\r\n            allDayExpanded: this._appointments.option(\"items\"),\r\n            crossScrollingEnabled: crossScrollingEnabled,\r\n            dataCellTemplate: this.option(\"dataCellTemplate\"),\r\n            timeCellTemplate: this.option(\"timeCellTemplate\"),\r\n            resourceCellTemplate: this.option(\"resourceCellTemplate\"),\r\n            dateCellTemplate: this.option(\"dateCellTemplate\"),\r\n            allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\r\n            selectedCellData: this.option(\"selectedCellData\"),\r\n            onSelectionChanged: args => {\r\n                this.option(\"selectedCellData\", args.selectedCellData)\r\n            },\r\n            groupByDate: this._getCurrentViewOption(\"groupByDate\"),\r\n            scrolling: scrolling,\r\n            draggingMode: this.option(\"_draggingMode\"),\r\n            timeZoneCalculator: this.timeZoneCalculator,\r\n            schedulerHeight: this.option(\"height\"),\r\n            schedulerWidth: this.option(\"width\"),\r\n            allDayPanelMode: this.option(\"allDayPanelMode\"),\r\n            onSelectedCellsClick: this.showAddAppointmentPopup.bind(this),\r\n            onRenderAppointments: this._renderAppointments.bind(this),\r\n            onShowAllDayPanel: value => this.option(\"showAllDayPanel\", value),\r\n            getHeaderHeight: () => utils.DOM.getHeaderHeight(this._header),\r\n            onScrollEnd: () => this._appointments.updateResizableArea(),\r\n            renovateRender: this._isRenovatedRender(isVirtualScrolling),\r\n            isRenovatedAppointments: this.option(\"isRenovatedAppointments\")\r\n        }, currentViewOptions);\r\n        result.observer = this;\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.startDate = countConfig.startDate;\r\n        result.groups = groups;\r\n        result.onCellClick = this._createActionByOption(\"onCellClick\");\r\n        result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.hoursInterval = result.cellDuration / 60;\r\n        result.allDayExpanded = false;\r\n        result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\r\n        result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\r\n        result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\r\n        result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\r\n        result.getAppointmentDataProvider = () => this.appointmentDataProvider;\r\n        return result\r\n    }\r\n    _isRenovatedRender(isVirtualScrolling) {\r\n        return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling\r\n    }\r\n    _waitAsyncTemplate(callback) {\r\n        if (this._options.silent(\"templatesRenderAsynchronously\")) {\r\n            var timer = setTimeout(() => {\r\n                callback();\r\n                clearTimeout(timer)\r\n            });\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback()\r\n        }\r\n    }\r\n    _getCurrentViewOptions() {\r\n        return this.currentView\r\n    }\r\n    _getCurrentViewOption(optionName) {\r\n        if (this.currentView && void 0 !== this.currentView[optionName]) {\r\n            return this.currentView[optionName]\r\n        }\r\n        return this.option(optionName)\r\n    }\r\n    _getAppointmentTemplate(optionName) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (currentViewOptions && currentViewOptions[optionName]) {\r\n            return this._getTemplate(currentViewOptions[optionName])\r\n        }\r\n        return this._getTemplateByOption(optionName)\r\n    }\r\n    _updateOption(viewName, optionName, value) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\r\n            this[\"_\" + viewName].option(optionName, value)\r\n        }\r\n    }\r\n    _refreshWorkSpace(groups) {\r\n        this._cleanWorkspace();\r\n        delete this._workSpace;\r\n        this._renderWorkSpace(groups);\r\n        if (this._readyToRenderAppointments) {\r\n            this._appointments.option({\r\n                fixedContainer: this._workSpace.getFixedContainer(),\r\n                allDayContainer: this._workSpace.getAllDayContainer()\r\n            });\r\n            this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve())\r\n        }\r\n    }\r\n    _cleanWorkspace() {\r\n        this._appointments.$element().detach();\r\n        this._workSpace._dispose();\r\n        this._workSpace.$element().remove();\r\n        this.option(\"selectedCellData\", [])\r\n    }\r\n    getWorkSpaceScrollable() {\r\n        return this._workSpace.getScrollable()\r\n    }\r\n    getWorkSpaceScrollableContainer() {\r\n        return this._workSpace.getScrollableContainer()\r\n    }\r\n    getWorkSpace() {\r\n        return this._workSpace\r\n    }\r\n    getHeader() {\r\n        return this._header\r\n    }\r\n    _cleanPopup() {\r\n        var _this$_appointmentPop2;\r\n        null === (_this$_appointmentPop2 = this._appointmentPopup) || void 0 === _this$_appointmentPop2 ? void 0 : _this$_appointmentPop2.dispose()\r\n    }\r\n    _checkRecurringAppointment(rawAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent, recurrenceEditMode) {\r\n        var recurrenceRule = ExpressionUtils.getField(this._dataAccessors, \"recurrenceRule\", rawAppointment);\r\n        if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\r\n            callback();\r\n            return\r\n        }\r\n        var editMode = recurrenceEditMode || this.option(\"recurrenceEditMode\");\r\n        switch (editMode) {\r\n            case \"series\":\r\n                callback();\r\n                break;\r\n            case \"occurrence\":\r\n                this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\r\n                break;\r\n            default:\r\n                if (dragEvent) {\r\n                    dragEvent.cancel = new Deferred\r\n                }\r\n                this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {\r\n                    editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\r\n                    editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(rawAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent)\r\n                }).fail(() => this._appointments.moveAppointmentBack(dragEvent))\r\n        }\r\n    }\r\n    _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\r\n        var appointment = excludeFromRecurrence(rawAppointment, exceptionDate, this._dataAccessors, this._timeZoneCalculator);\r\n        var singleRawAppointment = _extends({}, newRawAppointment);\r\n        delete singleRawAppointment[this._dataAccessors.expr.recurrenceExceptionExpr];\r\n        delete singleRawAppointment[this._dataAccessors.expr.recurrenceRuleExpr];\r\n        var keyPropertyName = this.appointmentDataProvider.keyName;\r\n        delete singleRawAppointment[keyPropertyName];\r\n        var canCreateNewAppointment = !isDeleted && !isPopupEditing;\r\n        if (canCreateNewAppointment) {\r\n            this.addAppointment(singleRawAppointment)\r\n        }\r\n        if (isPopupEditing) {\r\n            this._appointmentPopup.show(singleRawAppointment, {\r\n                isToolbarVisible: true,\r\n                action: ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES,\r\n                excludeInfo: {\r\n                    sourceAppointment: rawAppointment,\r\n                    updatedAppointment: appointment.source()\r\n                }\r\n            });\r\n            this._editAppointmentData = rawAppointment\r\n        } else {\r\n            this._updateAppointment(rawAppointment, appointment.source(), () => {\r\n                this._appointments.moveAppointmentBack(dragEvent)\r\n            }, dragEvent)\r\n        }\r\n    }\r\n    _createRecurrenceException(appointment, exceptionDate) {\r\n        var result = [];\r\n        if (appointment.recurrenceException) {\r\n            result.push(appointment.recurrenceException)\r\n        }\r\n        result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\r\n        return result.join()\r\n    }\r\n    _getSerializedDate(date, startDate, isAllDay) {\r\n        isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\r\n        return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT)\r\n    }\r\n    _showRecurrenceChangeConfirm(isDeleted) {\r\n        var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\r\n        var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\r\n        var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\r\n        this._recurrenceDialog = customDialog({\r\n            messageHtml: message,\r\n            showCloseButton: true,\r\n            showTitle: true,\r\n            buttons: [{\r\n                text: seriesText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.SERIES\r\n                }\r\n            }, {\r\n                text: occurrenceText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.OCCURENCE\r\n                }\r\n            }],\r\n            popupOptions: {\r\n                onHidden: e => {\r\n                    e.component.$element().remove()\r\n                },\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true\r\n            }\r\n        });\r\n        return this._recurrenceDialog.show()\r\n    }\r\n    _getUpdatedData(rawAppointment) {\r\n        var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {\r\n            path: \"fromGrid\"\r\n        }) : void 0;\r\n        var isValidDate = date => !isNaN(new Date(date).getTime());\r\n        var targetCell = this.getTargetCellData();\r\n        var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        var cellStartDate = getConvertedFromGrid(targetCell.startDate);\r\n        var cellEndDate = getConvertedFromGrid(targetCell.endDate);\r\n        var appointmentStartDate = new Date(appointment.startDate);\r\n        var appointmentEndDate = new Date(appointment.endDate);\r\n        var resultedStartDate = cellStartDate || appointmentStartDate;\r\n        if (!isValidDate(appointmentStartDate)) {\r\n            appointmentStartDate = resultedStartDate\r\n        }\r\n        if (!isValidDate(appointmentEndDate)) {\r\n            appointmentEndDate = cellEndDate\r\n        }\r\n        var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\r\n        var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\r\n        if (isKeepAppointmentHours) {\r\n            var {\r\n                trimTime: trimTime\r\n            } = dateUtils;\r\n            var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\r\n                path: \"toGrid\"\r\n            });\r\n            var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\r\n            resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\r\n            resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\r\n                path: \"fromGrid\"\r\n            })\r\n        }\r\n        var result = createAppointmentAdapter({}, this._dataAccessors, this.timeZoneCalculator);\r\n        if (void 0 !== targetCell.allDay) {\r\n            result.allDay = targetCell.allDay\r\n        }\r\n        result.startDate = resultedStartDate;\r\n        var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\r\n        if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\r\n            resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate)\r\n        }\r\n        if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\r\n            var dateCopy = new Date(resultedStartDate);\r\n            dateCopy.setHours(0);\r\n            resultedEndDate = new Date(dateCopy.getTime() + duration);\r\n            if (0 !== resultedEndDate.getHours()) {\r\n                resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"))\r\n            }\r\n        }\r\n        var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\r\n        result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\r\n        var rawResult = result.source();\r\n        setResourceToAppointment(this.option(\"resources\"), this.getResourceDataAccessors(), rawResult, targetCell.groups);\r\n        return rawResult\r\n    }\r\n    getTargetedAppointment(appointment, element) {\r\n        var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n        var info = utils.dataAccessors.getAppointmentInfo(element);\r\n        var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\r\n        var adapter = createAppointmentAdapter(appointment, this._dataAccessors, this.timeZoneCalculator);\r\n        var targetedAdapter = adapter.clone();\r\n        if (this._isAgenda() && adapter.isRecurrent) {\r\n            var agendaSettings = settings.agendaSettings;\r\n            targetedAdapter.startDate = ExpressionUtils.getField(this._dataAccessors, \"startDate\", agendaSettings);\r\n            targetedAdapter.endDate = ExpressionUtils.getField(this._dataAccessors, \"endDate\", agendaSettings)\r\n        } else if (settings) {\r\n            targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\r\n            targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate\r\n        }\r\n        var rawTargetedAppointment = targetedAdapter.source();\r\n        if (element) {\r\n            this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex)\r\n        }\r\n        if (info) {\r\n            rawTargetedAppointment.displayStartDate = new Date(info.appointment.startDate);\r\n            rawTargetedAppointment.displayEndDate = new Date(info.appointment.endDate)\r\n        }\r\n        return rawTargetedAppointment\r\n    }\r\n    subscribe(subject, action) {\r\n        this._subscribes[subject] = subscribes[subject] = action\r\n    }\r\n    fire(subject) {\r\n        var callback = this._subscribes[subject];\r\n        var args = Array.prototype.slice.call(arguments);\r\n        if (!isFunction(callback)) {\r\n            throw errors.Error(\"E1031\", subject)\r\n        }\r\n        return callback.apply(this, args.slice(1))\r\n    }\r\n    getTargetCellData() {\r\n        return this._workSpace.getDataByDroppableCell()\r\n    }\r\n    _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\r\n        var updatingOptions = {\r\n            newData: rawAppointment,\r\n            oldData: extend({}, target),\r\n            cancel: false\r\n        };\r\n        var performFailAction = function(err) {\r\n            if (onUpdatePrevented) {\r\n                onUpdatePrevented.call(this)\r\n            }\r\n            if (err && \"Error\" === err.name) {\r\n                throw err\r\n            }\r\n        }.bind(this);\r\n        this._actions[StoreEventNames.UPDATING](updatingOptions);\r\n        if (dragEvent && !isDeferred(dragEvent.cancel)) {\r\n            dragEvent.cancel = new Deferred\r\n        }\r\n        return this._processActionResult(updatingOptions, (function(canceled) {\r\n            var deferred = new Deferred;\r\n            if (!canceled) {\r\n                this._expandAllDayPanel(rawAppointment);\r\n                try {\r\n                    deferred = this.appointmentDataProvider.update(target, rawAppointment).done(() => {\r\n                        dragEvent && dragEvent.cancel.resolve(false)\r\n                    }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction())\r\n                } catch (err) {\r\n                    performFailAction(err);\r\n                    deferred.resolve()\r\n                }\r\n            } else {\r\n                performFailAction();\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        }))\r\n    }\r\n    _processActionResult(actionOptions, callback) {\r\n        var deferred = new Deferred;\r\n        var resolveCallback = callbackResult => {\r\n            when(fromPromise(callbackResult)).always(deferred.resolve)\r\n        };\r\n        if (isPromise(actionOptions.cancel)) {\r\n            when(fromPromise(actionOptions.cancel)).always(cancel => {\r\n                if (!isDefined(cancel)) {\r\n                    cancel = \"rejected\" === actionOptions.cancel.state()\r\n                }\r\n                resolveCallback(callback.call(this, cancel))\r\n            })\r\n        } else {\r\n            resolveCallback(callback.call(this, actionOptions.cancel))\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _expandAllDayPanel(appointment) {\r\n        if (!this._isAllDayExpanded() && this.appointmentTakesAllDay(appointment)) {\r\n            this._workSpace.option(\"allDayExpanded\", true)\r\n        }\r\n    }\r\n    _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\r\n        var args = {\r\n            appointmentData: appointment || storeAppointment\r\n        };\r\n        if (storeAppointment instanceof Error) {\r\n            args.error = storeAppointment\r\n        } else {\r\n            this._appointmentPopup.visible && this._appointmentPopup.hide()\r\n        }\r\n        this._actions[handlerName](args);\r\n        this._fireContentReadyAction()\r\n    }\r\n    getAppointmentsInstance() {\r\n        return this._appointments\r\n    }\r\n    getLayoutManager() {\r\n        return this._layoutManager\r\n    }\r\n    getRenderingStrategyInstance() {\r\n        return this.getLayoutManager().getRenderingStrategyInstance()\r\n    }\r\n    getActions() {\r\n        return this._actions\r\n    }\r\n    appointmentTakesAllDay(rawAppointment) {\r\n        var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        return getAppointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"), this._getCurrentViewOption(\"allDayPanelMode\"))\r\n    }\r\n    dayHasAppointment(day, rawAppointment, trimTime) {\r\n        var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        var startDate = new Date(appointment.startDate);\r\n        var endDate = new Date(appointment.endDate);\r\n        startDate = getConvertedToTimeZone(startDate);\r\n        endDate = getConvertedToTimeZone(endDate);\r\n        if (day.getTime() === endDate.getTime()) {\r\n            return startDate.getTime() === endDate.getTime()\r\n        }\r\n        if (trimTime) {\r\n            day = dateUtils.trimTime(day);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            endDate = dateUtils.trimTime(endDate)\r\n        }\r\n        var dayTimeStamp = day.getTime();\r\n        var startDateTimeStamp = startDate.getTime();\r\n        var endDateTimeStamp = endDate.getTime();\r\n        return startDateTimeStamp <= dayTimeStamp && dayTimeStamp <= endDateTimeStamp\r\n    }\r\n    setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (null !== groups && void 0 !== groups && groups.length) {\r\n            var resourcesSetter = this.getResourceDataAccessors().setter;\r\n            var workSpace = this._workSpace;\r\n            var getGroups;\r\n            var setResourceCallback;\r\n            if (this._isAgenda()) {\r\n                getGroups = function() {\r\n                    var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\r\n                    return getCellGroups(apptSettings[0].groupIndex, this.getWorkSpace().option(\"groups\"))\r\n                };\r\n                setResourceCallback = function(_, group) {\r\n                    resourcesSetter[group.name](rawAppointment, group.id)\r\n                }\r\n            } else {\r\n                getGroups = function() {\r\n                    var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\r\n                    return workSpace.getCellDataByCoordinates({\r\n                        left: setting.left,\r\n                        top: setting.top\r\n                    }).groups\r\n                };\r\n                setResourceCallback = function(field, value) {\r\n                    resourcesSetter[field](rawAppointment, value)\r\n                }\r\n            }\r\n            each(getGroups.call(this), setResourceCallback)\r\n        }\r\n    }\r\n    getStartViewDate() {\r\n        var _this$_workSpace4;\r\n        return null === (_this$_workSpace4 = this._workSpace) || void 0 === _this$_workSpace4 ? void 0 : _this$_workSpace4.getStartViewDate()\r\n    }\r\n    getEndViewDate() {\r\n        return this._workSpace.getEndViewDate()\r\n    }\r\n    showAddAppointmentPopup(cellData, cellGroups) {\r\n        var appointmentAdapter = createAppointmentAdapter({}, this._dataAccessors, this.timeZoneCalculator);\r\n        appointmentAdapter.allDay = cellData.allDay;\r\n        appointmentAdapter.startDate = this.timeZoneCalculator.createDate(cellData.startDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        appointmentAdapter.endDate = this.timeZoneCalculator.createDate(cellData.endDate, {\r\n            path: \"fromGrid\"\r\n        });\r\n        var resultAppointment = extend(appointmentAdapter.source(), cellGroups);\r\n        this.showAppointmentPopup(resultAppointment, true)\r\n    }\r\n    showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\r\n        var newRawTargetedAppointment = _extends({}, rawTargetedAppointment);\r\n        if (newRawTargetedAppointment) {\r\n            delete newRawTargetedAppointment.displayStartDate;\r\n            delete newRawTargetedAppointment.displayEndDate\r\n        }\r\n        var appointment = createAppointmentAdapter(newRawTargetedAppointment || rawAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        var newTargetedAppointment = extend({}, rawAppointment, newRawTargetedAppointment);\r\n        var isCreateAppointment = null !== createNewAppointment && void 0 !== createNewAppointment ? createNewAppointment : isEmptyObject(rawAppointment);\r\n        if (isEmptyObject(rawAppointment)) {\r\n            rawAppointment = this.createPopupAppointment()\r\n        }\r\n        if (isCreateAppointment) {\r\n            delete this._editAppointmentData;\r\n            this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, {\r\n                isToolbarVisible: true,\r\n                action: ACTION_TO_APPOINTMENT.CREATE\r\n            })\r\n        } else {\r\n            this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {\r\n                this._editAppointmentData = rawAppointment;\r\n                this._appointmentPopup.show(rawAppointment, {\r\n                    isToolbarVisible: this._editing.allowUpdating,\r\n                    action: ACTION_TO_APPOINTMENT.UPDATE\r\n                })\r\n            }, false, true)\r\n        }\r\n    }\r\n    createPopupAppointment() {\r\n        var result = {};\r\n        var toMs = dateUtils.dateToMilliseconds;\r\n        var startDate = new Date(this.option(\"currentDate\"));\r\n        var endDate = new Date(startDate.getTime() + this.option(\"cellDuration\") * toMs(\"minute\"));\r\n        ExpressionUtils.setField(this._dataAccessors, \"startDate\", result, startDate);\r\n        ExpressionUtils.setField(this._dataAccessors, \"endDate\", result, endDate);\r\n        return result\r\n    }\r\n    hideAppointmentPopup(saveChanges) {\r\n        var _this$_appointmentPop3;\r\n        if (null !== (_this$_appointmentPop3 = this._appointmentPopup) && void 0 !== _this$_appointmentPop3 && _this$_appointmentPop3.visible) {\r\n            saveChanges && this._appointmentPopup.saveChangesAsync();\r\n            this._appointmentPopup.hide()\r\n        }\r\n    }\r\n    showAppointmentTooltip(appointment, element, targetedAppointment) {\r\n        if (appointment) {\r\n            var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n            var appointmentConfig = {\r\n                itemData: targetedAppointment || appointment,\r\n                groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex,\r\n                groups: this.option(\"groups\")\r\n            };\r\n            var _getAppointmentColor = this.createGetAppointmentColor();\r\n            var deferredColor = _getAppointmentColor(appointmentConfig);\r\n            var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\r\n            this.showAppointmentTooltipCore(element, [info])\r\n        }\r\n    }\r\n    createGetAppointmentColor() {\r\n        return appointmentConfig => {\r\n            var resourceConfig = {\r\n                resources: this.option(\"resources\"),\r\n                dataAccessors: this.getResourceDataAccessors(),\r\n                loadedResources: this.option(\"loadedResources\"),\r\n                resourceLoaderMap: this.option(\"resourceLoaderMap\")\r\n            };\r\n            return getAppointmentColor(resourceConfig, appointmentConfig)\r\n        }\r\n    }\r\n    showAppointmentTooltipCore(target, data, options) {\r\n        var arg = {\r\n            cancel: false,\r\n            appointments: data.map(item => {\r\n                var result = {\r\n                    appointmentData: item.appointment,\r\n                    currentAppointmentData: _extends({}, item.targetedAppointment),\r\n                    color: item.color\r\n                };\r\n                if (item.settings.info) {\r\n                    var {\r\n                        startDate: startDate,\r\n                        endDate: endDate\r\n                    } = item.settings.info.appointment;\r\n                    result.currentAppointmentData.displayStartDate = startDate;\r\n                    result.currentAppointmentData.displayEndDate = endDate\r\n                }\r\n                return result\r\n            }),\r\n            targetElement: target\r\n        };\r\n        this._createActionByOption(\"onAppointmentTooltipShowing\")(arg);\r\n        if (this._appointmentTooltip.isAlreadyShown(target)) {\r\n            this.hideAppointmentTooltip()\r\n        } else {\r\n            this._processActionResult(arg, canceled => {\r\n                !canceled && this._appointmentTooltip.show(target, data, _extends({}, this._getExtraAppointmentTooltipOptions(), options))\r\n            })\r\n        }\r\n    }\r\n    hideAppointmentTooltip() {\r\n        this._appointmentTooltip && this._appointmentTooltip.hide()\r\n    }\r\n    scrollToTime(hours, minutes, date) {\r\n        errors.log(\"W0002\", \"dxScheduler\", \"scrollToTime\", \"21.1\", 'Use the \"scrollTo\" method instead');\r\n        this._workSpace.scrollToTime(hours, minutes, date)\r\n    }\r\n    scrollTo(date, groups, allDay) {\r\n        this._workSpace.scrollTo(date, groups, allDay)\r\n    }\r\n    _isHorizontalVirtualScrolling() {\r\n        var scrolling = this.option(\"scrolling\");\r\n        var {\r\n            orientation: orientation,\r\n            mode: mode\r\n        } = scrolling;\r\n        var isVirtualScrolling = \"virtual\" === mode;\r\n        return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation)\r\n    }\r\n    addAppointment(rawAppointment) {\r\n        var appointment = createAppointmentAdapter(rawAppointment, this._dataAccessors, this.timeZoneCalculator);\r\n        appointment.text = appointment.text || \"\";\r\n        var serializedAppointment = appointment.source(true);\r\n        var addingOptions = {\r\n            appointmentData: serializedAppointment,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.ADDING](addingOptions);\r\n        return this._processActionResult(addingOptions, canceled => {\r\n            if (canceled) {\r\n                return (new Deferred).resolve()\r\n            }\r\n            this._expandAllDayPanel(serializedAppointment);\r\n            return this.appointmentDataProvider.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment))\r\n        })\r\n    }\r\n    updateAppointment(target, appointment) {\r\n        return this._updateAppointment(target, appointment)\r\n    }\r\n    deleteAppointment(rawAppointment) {\r\n        var deletingOptions = this.fireOnAppointmentDeleting(rawAppointment);\r\n        this.processDeleteAppointment(rawAppointment, deletingOptions)\r\n    }\r\n    fireOnAppointmentDeleting(rawAppointment, targetedAppointmentData) {\r\n        var deletingOptions = {\r\n            appointmentData: rawAppointment,\r\n            targetedAppointmentData: targetedAppointmentData,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.DELETING](deletingOptions);\r\n        return deletingOptions\r\n    }\r\n    processDeleteAppointment(rawAppointment, deletingOptions) {\r\n        this._processActionResult(deletingOptions, (function(canceled) {\r\n            if (!canceled) {\r\n                this.appointmentDataProvider.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment))\r\n            }\r\n        }))\r\n    }\r\n    deleteRecurrence(appointment, date, recurrenceEditMode) {\r\n        this._checkRecurringAppointment(appointment, {}, date, () => {\r\n            this.processDeleteAppointment(appointment, {\r\n                cancel: false\r\n            })\r\n        }, true, false, null, recurrenceEditMode)\r\n    }\r\n    focus() {\r\n        if (this._editAppointmentData) {\r\n            this._appointments.focus()\r\n        } else {\r\n            this._workSpace.focus()\r\n        }\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    _validateDayHours() {\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        validateDayHours(startDayHour, endDayHour)\r\n    }\r\n    _getDragBehavior() {\r\n        return this._workSpace.dragBehavior\r\n    }\r\n}\r\nScheduler.include(DataHelperMixin);\r\nregisterComponent(\"dxScheduler\", Scheduler);\r\nexport default Scheduler;\r\n"]},"metadata":{},"sourceType":"module"}