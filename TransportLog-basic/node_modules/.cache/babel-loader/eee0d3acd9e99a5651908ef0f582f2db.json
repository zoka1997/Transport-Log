{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { setOuterWidth, getOuterWidth, setOuterHeight, getOuterHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport modules from \"./ui.grid_core.modules\";\nimport { name as clickEventName } from \"../../events/click\";\nimport pointerEvents from \"../../events/pointer\";\nimport positionUtils from \"../../animation/position\";\nimport { addNamespace, normalizeKeyName } from \"../../events/utils/index\";\nimport browser from \"../../core/utils/browser\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\nvar CONTENT_CLASS = \"content\";\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\nvar ROW_CLASS = \"dx-row\";\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\nvar DX_HIDDEN = \"dx-hidden\";\nvar EditorFactory = modules.ViewController.inherit({\n  _getFocusedElement: function ($dataGridElement) {\n    var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\n    var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\n    var $focusedElement = $dataGridElement.find(focusedElementSelector);\n    return this.elementIsInsideGrid($focusedElement) && $focusedElement;\n  },\n  _getFocusCellSelector: function () {\n    return \".dx-row > td\";\n  },\n  _updateFocusCore: function () {\n    var $dataGridElement = this.component && this.component.$element();\n    var $focusCell;\n    var hideBorders;\n\n    if ($dataGridElement) {\n      var $focus = this._getFocusedElement($dataGridElement);\n\n      if ($focus && $focus.length) {\n        if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\n          $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\n          hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\n          $focus = $focusCell;\n        }\n\n        if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\n          this.focus($focus, hideBorders);\n          return;\n        }\n      }\n    }\n\n    this.loseFocus();\n  },\n  _updateFocus: function (e) {\n    var that = this;\n    var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\n    that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\n    clearTimeout(that._updateFocusTimeoutID);\n    that._updateFocusTimeoutID = setTimeout(function () {\n      delete that._updateFocusTimeoutID;\n\n      if (!that._isFocusOverlay) {\n        that._updateFocusCore();\n      }\n\n      that._isFocusOverlay = false;\n    });\n  },\n  _updateFocusOverlaySize: function ($element, position) {\n    $element.hide();\n    var location = positionUtils.calculate($element, extend({\n      collision: \"fit\"\n    }, position));\n\n    if (location.h.oversize > 0) {\n      setOuterWidth($element, getOuterWidth($element) - location.h.oversize);\n    }\n\n    if (location.v.oversize > 0) {\n      setOuterHeight($element, getOuterHeight($element) - location.v.oversize);\n    }\n\n    $element.show();\n  },\n  callbackNames: function () {\n    return [\"focused\"];\n  },\n  focus: function ($element, hideBorder) {\n    var that = this;\n\n    if (void 0 === $element) {\n      return that._$focusedElement;\n    } else if ($element) {\n      if (!$element.is(that._$focusedElement)) {\n        that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\n      }\n\n      that._$focusedElement = $element;\n      clearTimeout(that._focusTimeoutID);\n      that._focusTimeoutID = setTimeout(function () {\n        delete that._focusTimeoutID;\n        that.renderFocusOverlay($element, hideBorder);\n        $element.addClass(FOCUSED_ELEMENT_CLASS);\n        that.focused.fire($element);\n      });\n    }\n  },\n  refocus: function () {\n    var $focus = this.focus();\n    this.focus($focus);\n  },\n  renderFocusOverlay: function ($element, hideBorder) {\n    if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\n      return;\n    }\n\n    if (!this._$focusOverlay) {\n      this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\n    }\n\n    if (hideBorder) {\n      this._$focusOverlay.addClass(DX_HIDDEN);\n    } else if ($element.length) {\n      var align = browser.mozilla ? \"right bottom\" : \"left top\";\n      var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\n      var elemCoord = getBoundingRect($element.get(0));\n\n      this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\n\n      setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\n      setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\n      var focusOverlayPosition = {\n        precise: true,\n        my: align,\n        at: align,\n        of: $element,\n        boundary: $content.length && $content\n      };\n\n      this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\n\n      positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\n\n      this._$focusOverlay.css(\"visibility\", \"visible\");\n    }\n  },\n  resize: function () {\n    var $focusedElement = this._$focusedElement;\n\n    if ($focusedElement) {\n      this.focus($focusedElement);\n    }\n  },\n  loseFocus: function () {\n    this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\n    this._$focusedElement = null;\n    this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN);\n  },\n  init: function () {\n    this.createAction(\"onEditorPreparing\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    this.createAction(\"onEditorPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\n    eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\n\n    this._attachContainerEventHandlers();\n  },\n  _attachContainerEventHandlers: function () {\n    var that = this;\n    var $container = that.component && that.component.$element();\n\n    if ($container) {\n      eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), function (e) {\n        if (\"tab\" === normalizeKeyName(e)) {\n          that._updateFocusHandler(e);\n        }\n      });\n    }\n  },\n  dispose: function () {\n    clearTimeout(this._focusTimeoutID);\n    clearTimeout(this._updateFocusTimeoutID);\n    eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\n  }\n}).include(EditorFactoryMixin);\nexport var editorFactoryModule = {\n  defaultOptions: function () {\n    return {};\n  },\n  controllers: {\n    editorFactory: EditorFactory\n  }\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js"],"names":["setOuterWidth","getOuterWidth","setOuterHeight","getOuterHeight","$","domAdapter","eventsEngine","modules","name","clickEventName","pointerEvents","positionUtils","addNamespace","normalizeKeyName","browser","extend","getBoundingRect","EditorFactoryMixin","gridCoreUtils","EDITOR_INLINE_BLOCK","CELL_FOCUS_DISABLED_CLASS","FOCUS_OVERLAY_CLASS","CONTENT_CLASS","FOCUSED_ELEMENT_CLASS","ROW_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","down","join","DX_HIDDEN","EditorFactory","ViewController","inherit","_getFocusedElement","$dataGridElement","rowSelector","option","focusedElementSelector","concat","$focusedElement","find","elementIsInsideGrid","_getFocusCellSelector","_updateFocusCore","component","$element","$focusCell","hideBorders","$focus","length","hasClass","closest","get","focus","loseFocus","_updateFocus","e","that","isFocusOverlay","event","target","addWidgetPrefix","_isFocusOverlay","clearTimeout","_updateFocusTimeoutID","setTimeout","_updateFocusOverlaySize","position","hide","location","calculate","collision","h","oversize","v","show","callbackNames","hideBorder","_$focusedElement","is","removeClass","_focusTimeoutID","renderFocusOverlay","addClass","focused","fire","refocus","isElementInCurrentGrid","_$focusOverlay","align","mozilla","$content","elemCoord","appendTo","bottom","top","right","left","focusOverlayPosition","precise","my","at","of","boundary","setup","css","resize","init","createAction","excludeValidators","category","_updateFocusHandler","bind","on","getDocument","_attachContainerEventHandlers","$container","dispose","off","include","editorFactoryModule","defaultOptions","controllers","editorFactory"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        var $focusedElement = $dataGridElement.find(focusedElementSelector);\r\n        return this.elementIsInsideGrid($focusedElement) && $focusedElement\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            var $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus && $focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}