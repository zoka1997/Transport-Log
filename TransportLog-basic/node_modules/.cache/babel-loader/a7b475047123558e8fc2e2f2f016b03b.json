{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../widget/ui.errors\";\nimport CheckBox from \"../check_box\";\nimport RadioButton from \"../radio_group/radio_button\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport { register as registerDecorator } from \"./ui.list.edit.decorator_registry\";\nimport EditDecorator from \"./ui.list.edit.decorator\";\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar CLICK_EVENT_NAME = addNamespace(clickEventName, \"dxListEditDecorator\");\nregisterDecorator(\"selection\", \"default\", EditDecorator.inherit({\n  _init: function () {\n    this.callBase.apply(this, arguments);\n\n    var selectionMode = this._list.option(\"selectionMode\");\n\n    this._singleStrategy = \"single\" === selectionMode;\n    this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\n    this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\n    this._controlWidget = this._singleStrategy ? RadioButton : CheckBox;\n\n    this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS);\n  },\n  beforeBag: function (config) {\n    var $itemElement = config.$itemElement;\n    var $container = config.$container.addClass(this._containerClass);\n    var $control = $(\"<div>\").addClass(this._controlClass).appendTo($container);\n    new this._controlWidget($control, extend(this._commonOptions(), {\n      value: this._isSelected($itemElement),\n      focusStateEnabled: false,\n      hoverStateEnabled: false,\n      onValueChanged: function (e) {\n        e.event && this._list._saveSelectionChangeEvent(e.event);\n\n        this._processCheckedState($itemElement, e.value);\n\n        e.event && e.event.stopPropagation();\n      }.bind(this)\n    }));\n  },\n  modifyElement: function (config) {\n    this.callBase.apply(this, arguments);\n    var $itemElement = config.$itemElement;\n\n    var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\n\n    eventsEngine.on($itemElement, \"stateChanged\", function (e, state) {\n      control.option(\"value\", state);\n    }.bind(this));\n  },\n  _updateSelectAllState: function () {\n    if (!this._$selectAll) {\n      return;\n    }\n\n    this._selectAllCheckBox.option(\"value\", this._list.isSelectAll());\n  },\n  afterRender: function () {\n    if (\"all\" !== this._list.option(\"selectionMode\")) {\n      return;\n    }\n\n    if (!this._$selectAll) {\n      this._renderSelectAll();\n    } else {\n      this._updateSelectAllState();\n    }\n  },\n  handleKeyboardEvents: function (currentFocusedIndex, moveFocusUp) {\n    var moveFocusDown = !moveFocusUp;\n    var list = this._list;\n    var $selectAll = this._$selectAll;\n\n    var lastItemIndex = list._getLastItemIndex();\n\n    var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\n    var hasSelectAllItem = !!$selectAll;\n\n    if (hasSelectAllItem && isFocusOutOfList) {\n      list.option(\"focusedElement\", $selectAll);\n      list.scrollToItem(list.option(\"focusedElement\"));\n      return true;\n    }\n\n    return false;\n  },\n  handleEnterPressing: function (e) {\n    if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\n      e.target = this._$selectAll.get(0);\n\n      this._list._saveSelectionChangeEvent(e);\n\n      this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n\n      return true;\n    }\n  },\n  _renderSelectAll: function () {\n    var $selectAll = this._$selectAll = $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\n    var list = this._list;\n\n    var downArrowHandler = list._supportedKeys().downArrow.bind(list);\n\n    this._selectAllCheckBox = list._createComponent($(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), CheckBox, {\n      focusStateEnabled: false,\n      hoverStateEnabled: false\n    });\n\n    this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\n\n    $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\n\n    this._list.itemsContainer().prepend($selectAll);\n\n    this._updateSelectAllState();\n\n    this._attachSelectAllHandler();\n  },\n  _attachSelectAllHandler: function () {\n    this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\n\n    eventsEngine.off(this._$selectAll, CLICK_EVENT_NAME);\n    eventsEngine.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this));\n  },\n  _selectAllHandler: function (e) {\n    e.event && e.event.stopPropagation();\n\n    var isSelectedAll = this._selectAllCheckBox.option(\"value\");\n\n    e.event && this._list._saveSelectionChangeEvent(e.event);\n\n    if (true === isSelectedAll) {\n      this._selectAllItems();\n    } else if (false === isSelectedAll) {\n      this._unselectAllItems();\n    }\n\n    this._list._createActionByOption(\"onSelectAllValueChanged\")({\n      value: isSelectedAll\n    });\n  },\n  _checkSelectAllCapability: function () {\n    var list = this._list;\n    var dataSource = list.getDataSource();\n\n    if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\n      errors.log(\"W1010\");\n      return false;\n    }\n\n    return true;\n  },\n  _selectAllItems: function () {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _unselectAllItems: function () {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _selectAllClickHandler: function (e) {\n    this._list._saveSelectionChangeEvent(e);\n\n    this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n  },\n  _isSelected: function ($itemElement) {\n    return this._list.isItemSelected($itemElement);\n  },\n  _processCheckedState: function ($itemElement, checked) {\n    if (checked) {\n      this._list.selectItem($itemElement);\n    } else {\n      this._list.unselectItem($itemElement);\n    }\n  },\n  dispose: function () {\n    this._disposeSelectAll();\n\n    this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\n\n    this.callBase.apply(this, arguments);\n  },\n  _disposeSelectAll: function () {\n    if (this._$selectAll) {\n      this._$selectAll.remove();\n\n      this._$selectAll = null;\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/list/ui.list.edit.decorator.selection.js"],"names":["$","eventsEngine","name","clickEventName","extend","errors","CheckBox","RadioButton","addNamespace","register","registerDecorator","EditDecorator","SELECT_DECORATOR_ENABLED_CLASS","SELECT_DECORATOR_SELECT_ALL_CLASS","SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS","SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS","SELECT_CHECKBOX_CONTAINER_CLASS","SELECT_CHECKBOX_CLASS","SELECT_RADIO_BUTTON_CONTAINER_CLASS","SELECT_RADIO_BUTTON_CLASS","FOCUSED_STATE_CLASS","CLICK_EVENT_NAME","inherit","_init","callBase","apply","arguments","selectionMode","_list","option","_singleStrategy","_containerClass","_controlClass","_controlWidget","$element","addClass","beforeBag","config","$itemElement","$container","$control","appendTo","_commonOptions","value","_isSelected","focusStateEnabled","hoverStateEnabled","onValueChanged","e","event","_saveSelectionChangeEvent","_processCheckedState","stopPropagation","bind","modifyElement","control","getInstance","find","on","state","_updateSelectAllState","_$selectAll","_selectAllCheckBox","isSelectAll","afterRender","_renderSelectAll","handleKeyboardEvents","currentFocusedIndex","moveFocusUp","moveFocusDown","list","$selectAll","lastItemIndex","_getLastItemIndex","isFocusOutOfList","hasSelectAllItem","scrollToItem","handleEnterPressing","hasClass","target","get","downArrowHandler","_supportedKeys","downArrow","_createComponent","registerKeyHandler","text","itemsContainer","prepend","_attachSelectAllHandler","_selectAllHandler","off","_selectAllClickHandler","isSelectedAll","_selectAllItems","_unselectAllItems","_createActionByOption","_checkSelectAllCapability","dataSource","getDataSource","group","log","_selection","selectAll","deselectAll","isItemSelected","checked","selectItem","unselectItem","dispose","_disposeSelectAll","removeClass","remove"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport CheckBox from \"../check_box\";\r\nimport RadioButton from \"../radio_group/radio_button\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    register as registerDecorator\r\n} from \"./ui.list.edit.decorator_registry\";\r\nimport EditDecorator from \"./ui.list.edit.decorator\";\r\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\r\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\r\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\r\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\r\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar CLICK_EVENT_NAME = addNamespace(clickEventName, \"dxListEditDecorator\");\r\nregisterDecorator(\"selection\", \"default\", EditDecorator.inherit({\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var selectionMode = this._list.option(\"selectionMode\");\r\n        this._singleStrategy = \"single\" === selectionMode;\r\n        this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\r\n        this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\r\n        this._controlWidget = this._singleStrategy ? RadioButton : CheckBox;\r\n        this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS)\r\n    },\r\n    beforeBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container.addClass(this._containerClass);\r\n        var $control = $(\"<div>\").addClass(this._controlClass).appendTo($container);\r\n        new this._controlWidget($control, extend(this._commonOptions(), {\r\n            value: this._isSelected($itemElement),\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            onValueChanged: function(e) {\r\n                e.event && this._list._saveSelectionChangeEvent(e.event);\r\n                this._processCheckedState($itemElement, e.value);\r\n                e.event && e.event.stopPropagation()\r\n            }.bind(this)\r\n        }))\r\n    },\r\n    modifyElement: function(config) {\r\n        this.callBase.apply(this, arguments);\r\n        var $itemElement = config.$itemElement;\r\n        var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\r\n        eventsEngine.on($itemElement, \"stateChanged\", function(e, state) {\r\n            control.option(\"value\", state)\r\n        }.bind(this))\r\n    },\r\n    _updateSelectAllState: function() {\r\n        if (!this._$selectAll) {\r\n            return\r\n        }\r\n        this._selectAllCheckBox.option(\"value\", this._list.isSelectAll())\r\n    },\r\n    afterRender: function() {\r\n        if (\"all\" !== this._list.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        if (!this._$selectAll) {\r\n            this._renderSelectAll()\r\n        } else {\r\n            this._updateSelectAllState()\r\n        }\r\n    },\r\n    handleKeyboardEvents: function(currentFocusedIndex, moveFocusUp) {\r\n        var moveFocusDown = !moveFocusUp;\r\n        var list = this._list;\r\n        var $selectAll = this._$selectAll;\r\n        var lastItemIndex = list._getLastItemIndex();\r\n        var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\r\n        var hasSelectAllItem = !!$selectAll;\r\n        if (hasSelectAllItem && isFocusOutOfList) {\r\n            list.option(\"focusedElement\", $selectAll);\r\n            list.scrollToItem(list.option(\"focusedElement\"));\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    handleEnterPressing: function(e) {\r\n        if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\r\n            e.target = this._$selectAll.get(0);\r\n            this._list._saveSelectionChangeEvent(e);\r\n            this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\r\n            return true\r\n        }\r\n    },\r\n    _renderSelectAll: function() {\r\n        var $selectAll = this._$selectAll = $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\r\n        var list = this._list;\r\n        var downArrowHandler = list._supportedKeys().downArrow.bind(list);\r\n        this._selectAllCheckBox = list._createComponent($(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), CheckBox, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false\r\n        });\r\n        this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\r\n        $(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\r\n        this._list.itemsContainer().prepend($selectAll);\r\n        this._updateSelectAllState();\r\n        this._attachSelectAllHandler()\r\n    },\r\n    _attachSelectAllHandler: function() {\r\n        this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\r\n        eventsEngine.off(this._$selectAll, CLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this))\r\n    },\r\n    _selectAllHandler: function(e) {\r\n        e.event && e.event.stopPropagation();\r\n        var isSelectedAll = this._selectAllCheckBox.option(\"value\");\r\n        e.event && this._list._saveSelectionChangeEvent(e.event);\r\n        if (true === isSelectedAll) {\r\n            this._selectAllItems()\r\n        } else if (false === isSelectedAll) {\r\n            this._unselectAllItems()\r\n        }\r\n        this._list._createActionByOption(\"onSelectAllValueChanged\")({\r\n            value: isSelectedAll\r\n        })\r\n    },\r\n    _checkSelectAllCapability: function() {\r\n        var list = this._list;\r\n        var dataSource = list.getDataSource();\r\n        if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\r\n            errors.log(\"W1010\");\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _selectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _unselectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _selectAllClickHandler: function(e) {\r\n        this._list._saveSelectionChangeEvent(e);\r\n        this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"))\r\n    },\r\n    _isSelected: function($itemElement) {\r\n        return this._list.isItemSelected($itemElement)\r\n    },\r\n    _processCheckedState: function($itemElement, checked) {\r\n        if (checked) {\r\n            this._list.selectItem($itemElement)\r\n        } else {\r\n            this._list.unselectItem($itemElement)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._disposeSelectAll();\r\n        this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _disposeSelectAll: function() {\r\n        if (this._$selectAll) {\r\n            this._$selectAll.remove();\r\n            this._$selectAll = null\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}