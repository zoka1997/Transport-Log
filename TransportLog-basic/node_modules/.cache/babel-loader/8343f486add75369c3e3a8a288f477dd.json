{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { fileSaver } from \"./exporter/file_saver\";\nimport { ExcelCreator, getData as getExcelData } from \"./exporter/excel_creator\";\nimport { imageCreator, testFormats, getData as getImageData } from \"./exporter/image_creator\";\nimport { svgCreator, getData as getSvgData } from \"./exporter/svg_creator\";\nimport { isFunction as _isFunction, isBoolean } from \"./core/utils/type\";\nimport { Deferred } from \"./core/utils/deferred\";\nimport formatConverter from \"./exporter/excel_format_converter\";\nimport { getData } from \"./exporter/pdf_creator\";\n\nfunction _export(data, options, getData) {\n  if (!data) {\n    return new Deferred().resolve();\n  }\n\n  var exportingAction = options.exportingAction;\n  var exportedAction = options.exportedAction;\n  var fileSavingAction = options.fileSavingAction;\n  var eventArgs = {\n    fileName: options.fileName,\n    format: options.format,\n    cancel: false\n  };\n\n  if (isBoolean(options.selectedRowsOnly)) {\n    eventArgs.selectedRowsOnly = options.selectedRowsOnly;\n  }\n\n  _isFunction(exportingAction) && exportingAction(eventArgs);\n\n  if (!eventArgs.cancel) {\n    return getData(data, options).then(blob => {\n      _isFunction(exportedAction) && exportedAction();\n\n      if (_isFunction(fileSavingAction)) {\n        eventArgs.data = blob;\n        fileSavingAction(eventArgs);\n      }\n\n      if (!eventArgs.cancel) {\n        var format = \"xlsx\" === options.format ? \"EXCEL\" : options.format;\n        fileSaver.saveAs(eventArgs.fileName, format, blob, options.proxyUrl, options.forceProxy);\n      }\n    });\n  }\n\n  return new Deferred().resolve();\n}\n\nexport { _export as export, fileSaver };\nexport var excel = {\n  creator: ExcelCreator,\n  getData: getExcelData,\n  formatConverter: formatConverter\n};\nexport var image = {\n  creator: imageCreator,\n  getData: getImageData,\n  testFormats: testFormats\n};\nexport var pdf = {\n  getData: getData\n};\nexport var svg = {\n  creator: svgCreator,\n  getData: getSvgData\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/exporter.js"],"names":["fileSaver","ExcelCreator","getData","getExcelData","imageCreator","testFormats","getImageData","svgCreator","getSvgData","isFunction","_isFunction","isBoolean","Deferred","formatConverter","_export","data","options","resolve","exportingAction","exportedAction","fileSavingAction","eventArgs","fileName","format","cancel","selectedRowsOnly","then","blob","saveAs","proxyUrl","forceProxy","export","excel","creator","image","pdf","svg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,SADJ,QAEO,uBAFP;AAGA,SACIC,YADJ,EAEIC,OAAO,IAAIC,YAFf,QAGO,0BAHP;AAIA,SACIC,YADJ,EAEIC,WAFJ,EAGIH,OAAO,IAAII,YAHf,QAIO,0BAJP;AAKA,SACIC,UADJ,EAEIL,OAAO,IAAIM,UAFf,QAGO,wBAHP;AAIA,SACIC,UAAU,IAAIC,WADlB,EAEIC,SAFJ,QAGO,mBAHP;AAIA,SACIC,QADJ,QAEO,uBAFP;AAGA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SACIX,OADJ,QAEO,wBAFP;;AAIA,SAASY,OAAT,CAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCd,OAAhC,EAAyC;AACrC,MAAI,CAACa,IAAL,EAAW;AACP,WAAQ,IAAIH,QAAJ,EAAD,CAAeK,OAAf,EAAP;AACH;;AACD,MAAIC,eAAe,GAAGF,OAAO,CAACE,eAA9B;AACA,MAAIC,cAAc,GAAGH,OAAO,CAACG,cAA7B;AACA,MAAIC,gBAAgB,GAAGJ,OAAO,CAACI,gBAA/B;AACA,MAAIC,SAAS,GAAG;AACZC,IAAAA,QAAQ,EAAEN,OAAO,CAACM,QADN;AAEZC,IAAAA,MAAM,EAAEP,OAAO,CAACO,MAFJ;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAAhB;;AAKA,MAAIb,SAAS,CAACK,OAAO,CAACS,gBAAT,CAAb,EAAyC;AACrCJ,IAAAA,SAAS,CAACI,gBAAV,GAA6BT,OAAO,CAACS,gBAArC;AACH;;AACDf,EAAAA,WAAW,CAACQ,eAAD,CAAX,IAAgCA,eAAe,CAACG,SAAD,CAA/C;;AACA,MAAI,CAACA,SAAS,CAACG,MAAf,EAAuB;AACnB,WAAOtB,OAAO,CAACa,IAAD,EAAOC,OAAP,CAAP,CAAuBU,IAAvB,CAA4BC,IAAI,IAAI;AACvCjB,MAAAA,WAAW,CAACS,cAAD,CAAX,IAA+BA,cAAc,EAA7C;;AACA,UAAIT,WAAW,CAACU,gBAAD,CAAf,EAAmC;AAC/BC,QAAAA,SAAS,CAACN,IAAV,GAAiBY,IAAjB;AACAP,QAAAA,gBAAgB,CAACC,SAAD,CAAhB;AACH;;AACD,UAAI,CAACA,SAAS,CAACG,MAAf,EAAuB;AACnB,YAAID,MAAM,GAAG,WAAWP,OAAO,CAACO,MAAnB,GAA4B,OAA5B,GAAsCP,OAAO,CAACO,MAA3D;AACAvB,QAAAA,SAAS,CAAC4B,MAAV,CAAiBP,SAAS,CAACC,QAA3B,EAAqCC,MAArC,EAA6CI,IAA7C,EAAmDX,OAAO,CAACa,QAA3D,EAAqEb,OAAO,CAACc,UAA7E;AACH;AACJ,KAVM,CAAP;AAWH;;AACD,SAAQ,IAAIlB,QAAJ,EAAD,CAAeK,OAAf,EAAP;AACH;;AACD,SACIH,OAAO,IACPiB,MAFJ,EAEY/B,SAFZ;AAIA,OAAO,IAAIgC,KAAK,GAAG;AACfC,EAAAA,OAAO,EAAEhC,YADM;AAEfC,EAAAA,OAAO,EAAEC,YAFM;AAGfU,EAAAA,eAAe,EAAEA;AAHF,CAAZ;AAKP,OAAO,IAAIqB,KAAK,GAAG;AACfD,EAAAA,OAAO,EAAE7B,YADM;AAEfF,EAAAA,OAAO,EAAEI,YAFM;AAGfD,EAAAA,WAAW,EAAEA;AAHE,CAAZ;AAKP,OAAO,IAAI8B,GAAG,GAAG;AACbjC,EAAAA,OAAO,EAAEA;AADI,CAAV;AAGP,OAAO,IAAIkC,GAAG,GAAG;AACbH,EAAAA,OAAO,EAAE1B,UADI;AAEbL,EAAAA,OAAO,EAAEM;AAFI,CAAV","sourcesContent":["/**\r\n * DevExtreme (esm/exporter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    fileSaver\r\n} from \"./exporter/file_saver\";\r\nimport {\r\n    ExcelCreator,\r\n    getData as getExcelData\r\n} from \"./exporter/excel_creator\";\r\nimport {\r\n    imageCreator,\r\n    testFormats,\r\n    getData as getImageData\r\n} from \"./exporter/image_creator\";\r\nimport {\r\n    svgCreator,\r\n    getData as getSvgData\r\n} from \"./exporter/svg_creator\";\r\nimport {\r\n    isFunction as _isFunction,\r\n    isBoolean\r\n} from \"./core/utils/type\";\r\nimport {\r\n    Deferred\r\n} from \"./core/utils/deferred\";\r\nimport formatConverter from \"./exporter/excel_format_converter\";\r\nimport {\r\n    getData\r\n} from \"./exporter/pdf_creator\";\r\n\r\nfunction _export(data, options, getData) {\r\n    if (!data) {\r\n        return (new Deferred).resolve()\r\n    }\r\n    var exportingAction = options.exportingAction;\r\n    var exportedAction = options.exportedAction;\r\n    var fileSavingAction = options.fileSavingAction;\r\n    var eventArgs = {\r\n        fileName: options.fileName,\r\n        format: options.format,\r\n        cancel: false\r\n    };\r\n    if (isBoolean(options.selectedRowsOnly)) {\r\n        eventArgs.selectedRowsOnly = options.selectedRowsOnly\r\n    }\r\n    _isFunction(exportingAction) && exportingAction(eventArgs);\r\n    if (!eventArgs.cancel) {\r\n        return getData(data, options).then(blob => {\r\n            _isFunction(exportedAction) && exportedAction();\r\n            if (_isFunction(fileSavingAction)) {\r\n                eventArgs.data = blob;\r\n                fileSavingAction(eventArgs)\r\n            }\r\n            if (!eventArgs.cancel) {\r\n                var format = \"xlsx\" === options.format ? \"EXCEL\" : options.format;\r\n                fileSaver.saveAs(eventArgs.fileName, format, blob, options.proxyUrl, options.forceProxy)\r\n            }\r\n        })\r\n    }\r\n    return (new Deferred).resolve()\r\n}\r\nexport {\r\n    _export as\r\n    export, fileSaver\r\n};\r\nexport var excel = {\r\n    creator: ExcelCreator,\r\n    getData: getExcelData,\r\n    formatConverter: formatConverter\r\n};\r\nexport var image = {\r\n    creator: imageCreator,\r\n    getData: getImageData,\r\n    testFormats: testFormats\r\n};\r\nexport var pdf = {\r\n    getData: getData\r\n};\r\nexport var svg = {\r\n    creator: svgCreator,\r\n    getData: getSvgData\r\n};\r\n"]},"metadata":{},"sourceType":"module"}