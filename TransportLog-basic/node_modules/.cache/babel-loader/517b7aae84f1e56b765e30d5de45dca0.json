{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getOuterHeight, setHeight, setWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { each } from \"../../core/utils/iterator\";\nimport { APPOINTMENT_SETTINGS_KEY } from \"./constants\";\nimport { getPublicElement } from \"../../core/element\";\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nexport var utils = {\n  dataAccessors: {\n    getAppointmentSettings: element => $(element).data(APPOINTMENT_SETTINGS_KEY),\n    getAppointmentInfo: element => {\n      var settings = utils.dataAccessors.getAppointmentSettings(element);\n      return null === settings || void 0 === settings ? void 0 : settings.info;\n    },\n    create: (fields, currentDataAccessors, forceIsoDateParsing, dateSerializationFormat) => {\n      var dataAccessors = currentDataAccessors ? _extends({}, currentDataAccessors) : {\n        getter: {},\n        setter: {},\n        expr: {}\n      };\n      each(fields, (name, expr) => {\n        if (expr) {\n          var getter = compileGetter(expr);\n          var setter = compileSetter(expr);\n          var dateGetter;\n          var dateSetter;\n          var serializationFormat;\n\n          if (field = name, \"startDate\" === field || \"endDate\" === field) {\n            dateGetter = object => {\n              var value = getter(object);\n\n              if (forceIsoDateParsing) {\n                value = dateSerialization.deserializeDate(value);\n              }\n\n              return value;\n            };\n\n            dateSetter = (object, value) => {\n              if (dateSerializationFormat) {\n                serializationFormat = dateSerializationFormat;\n              } else if (forceIsoDateParsing && !serializationFormat) {\n                var oldValue = getter(object);\n                serializationFormat = dateSerialization.getDateSerializationFormat(oldValue);\n              }\n\n              var newValue = dateSerialization.serializeDate(value, serializationFormat);\n              setter(object, newValue);\n            };\n          }\n\n          dataAccessors.getter[name] = dateGetter || getter;\n          dataAccessors.setter[name] = dateSetter || setter;\n          dataAccessors.expr[\"\".concat(name, \"Expr\")] = expr;\n        } else {\n          delete dataAccessors.getter[name];\n          delete dataAccessors.setter[name];\n          delete dataAccessors.expr[\"\".concat(name, \"Expr\")];\n        }\n\n        var field;\n      });\n      return dataAccessors;\n    }\n  },\n  DOM: {\n    getHeaderHeight: header => header ? header._$element && parseInt(getOuterHeight(header._$element), 10) : 0\n  },\n  renovation: {\n    renderComponent: (widget, parentElement, componentClass, componentName, viewModel) => {\n      var component = widget[componentName];\n\n      if (!component) {\n        var container = getPublicElement(parentElement);\n        component = widget._createComponent(container, componentClass, viewModel);\n        widget[componentName] = component;\n      } else {\n        var $element = component.$element();\n        var elementStyle = $element.get(0).style;\n        var height = elementStyle.height;\n        var width = elementStyle.width;\n        component.option(viewModel);\n\n        if (height) {\n          setHeight($element, height);\n        }\n\n        if (width) {\n          setWidth($element, width);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/utils.js"],"names":["_extends","getOuterHeight","setHeight","setWidth","$","each","APPOINTMENT_SETTINGS_KEY","getPublicElement","compileGetter","compileSetter","dateSerialization","utils","dataAccessors","getAppointmentSettings","element","data","getAppointmentInfo","settings","info","create","fields","currentDataAccessors","forceIsoDateParsing","dateSerializationFormat","getter","setter","expr","name","dateGetter","dateSetter","serializationFormat","field","object","value","deserializeDate","oldValue","getDateSerializationFormat","newValue","serializeDate","concat","DOM","getHeaderHeight","header","_$element","parseInt","renovation","renderComponent","widget","parentElement","componentClass","componentName","viewModel","component","container","_createComponent","$element","elementStyle","get","style","height","width","option"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getOuterHeight,\r\n    setHeight,\r\n    setWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    APPOINTMENT_SETTINGS_KEY\r\n} from \"./constants\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nexport var utils = {\r\n    dataAccessors: {\r\n        getAppointmentSettings: element => $(element).data(APPOINTMENT_SETTINGS_KEY),\r\n        getAppointmentInfo: element => {\r\n            var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n            return null === settings || void 0 === settings ? void 0 : settings.info\r\n        },\r\n        create: (fields, currentDataAccessors, forceIsoDateParsing, dateSerializationFormat) => {\r\n            var dataAccessors = currentDataAccessors ? _extends({}, currentDataAccessors) : {\r\n                getter: {},\r\n                setter: {},\r\n                expr: {}\r\n            };\r\n            each(fields, (name, expr) => {\r\n                if (expr) {\r\n                    var getter = compileGetter(expr);\r\n                    var setter = compileSetter(expr);\r\n                    var dateGetter;\r\n                    var dateSetter;\r\n                    var serializationFormat;\r\n                    if (field = name, \"startDate\" === field || \"endDate\" === field) {\r\n                        dateGetter = object => {\r\n                            var value = getter(object);\r\n                            if (forceIsoDateParsing) {\r\n                                value = dateSerialization.deserializeDate(value)\r\n                            }\r\n                            return value\r\n                        };\r\n                        dateSetter = (object, value) => {\r\n                            if (dateSerializationFormat) {\r\n                                serializationFormat = dateSerializationFormat\r\n                            } else if (forceIsoDateParsing && !serializationFormat) {\r\n                                var oldValue = getter(object);\r\n                                serializationFormat = dateSerialization.getDateSerializationFormat(oldValue)\r\n                            }\r\n                            var newValue = dateSerialization.serializeDate(value, serializationFormat);\r\n                            setter(object, newValue)\r\n                        }\r\n                    }\r\n                    dataAccessors.getter[name] = dateGetter || getter;\r\n                    dataAccessors.setter[name] = dateSetter || setter;\r\n                    dataAccessors.expr[\"\".concat(name, \"Expr\")] = expr\r\n                } else {\r\n                    delete dataAccessors.getter[name];\r\n                    delete dataAccessors.setter[name];\r\n                    delete dataAccessors.expr[\"\".concat(name, \"Expr\")]\r\n                }\r\n                var field\r\n            });\r\n            return dataAccessors\r\n        }\r\n    },\r\n    DOM: {\r\n        getHeaderHeight: header => header ? header._$element && parseInt(getOuterHeight(header._$element), 10) : 0\r\n    },\r\n    renovation: {\r\n        renderComponent: (widget, parentElement, componentClass, componentName, viewModel) => {\r\n            var component = widget[componentName];\r\n            if (!component) {\r\n                var container = getPublicElement(parentElement);\r\n                component = widget._createComponent(container, componentClass, viewModel);\r\n                widget[componentName] = component\r\n            } else {\r\n                var $element = component.$element();\r\n                var elementStyle = $element.get(0).style;\r\n                var height = elementStyle.height;\r\n                var width = elementStyle.width;\r\n                component.option(viewModel);\r\n                if (height) {\r\n                    setHeight($element, height)\r\n                }\r\n                if (width) {\r\n                    setWidth($element, width)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}