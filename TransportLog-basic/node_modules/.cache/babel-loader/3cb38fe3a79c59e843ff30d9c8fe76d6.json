{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { addToStyles } from \"../../workspaces/utils\";\nimport { getAppointmentColor } from \"../../resources/utils\";\nexport var getOverflowIndicatorStyles = viewModel => {\n  var {\n    geometry: {\n      height: height,\n      left: left,\n      top: top,\n      width: width\n    }\n  } = viewModel;\n  var result = addToStyles([{\n    attr: \"left\",\n    value: \"\".concat(left, \"px\")\n  }, {\n    attr: \"top\",\n    value: \"\".concat(top, \"px\")\n  }, {\n    attr: \"width\",\n    value: \"\".concat(width, \"px\")\n  }, {\n    attr: \"height\",\n    value: \"\".concat(height, \"px\")\n  }, {\n    attr: \"boxShadow\",\n    value: \"inset \".concat(width, \"px 0 0 0 rgba(0, 0, 0, 0.3)\")\n  }]);\n  return result;\n};\nexport var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;\nexport var getIndicatorColor = (appointmentContext, viewModel, groups) => {\n  var _viewModel$groupIndex;\n\n  var groupIndex = null !== (_viewModel$groupIndex = viewModel.groupIndex) && void 0 !== _viewModel$groupIndex ? _viewModel$groupIndex : 0;\n  var {\n    appointment: appointment\n  } = viewModel.items.settings[0];\n  return getAppointmentColor({\n    resources: appointmentContext.resources,\n    resourceLoaderMap: appointmentContext.resourceLoaderMap,\n    resourcesDataAccessors: appointmentContext.dataAccessors.resources,\n    loadedResources: appointmentContext.loadedResources\n  }, {\n    itemData: appointment,\n    groupIndex: groupIndex,\n    groups: groups\n  });\n};","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js"],"names":["addToStyles","getAppointmentColor","getOverflowIndicatorStyles","viewModel","geometry","height","left","top","width","result","attr","value","concat","getOverflowIndicatorColor","color","colors","length","filter","item","getIndicatorColor","appointmentContext","groups","_viewModel$groupIndex","groupIndex","appointment","items","settings","resources","resourceLoaderMap","resourcesDataAccessors","dataAccessors","loadedResources","itemData"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,WADJ,QAEO,wBAFP;AAGA,SACIC,mBADJ,QAEO,uBAFP;AAGA,OAAO,IAAIC,0BAA0B,GAAGC,SAAS,IAAI;AACjD,MAAI;AACAC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,MAAM,EAAEA,MADF;AAENC,MAAAA,IAAI,EAAEA,IAFA;AAGNC,MAAAA,GAAG,EAAEA,GAHC;AAINC,MAAAA,KAAK,EAAEA;AAJD;AADV,MAOAL,SAPJ;AAQA,MAAIM,MAAM,GAAGT,WAAW,CAAC,CAAC;AACtBU,IAAAA,IAAI,EAAE,MADgB;AAEtBC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUN,IAAV,EAAgB,IAAhB;AAFe,GAAD,EAGtB;AACCI,IAAAA,IAAI,EAAE,KADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUL,GAAV,EAAe,IAAf;AAFR,GAHsB,EAMtB;AACCG,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUJ,KAAV,EAAiB,IAAjB;AAFR,GANsB,EAStB;AACCE,IAAAA,IAAI,EAAE,QADP;AAECC,IAAAA,KAAK,EAAE,GAAGC,MAAH,CAAUP,MAAV,EAAkB,IAAlB;AAFR,GATsB,EAYtB;AACCK,IAAAA,IAAI,EAAE,WADP;AAECC,IAAAA,KAAK,EAAE,SAASC,MAAT,CAAgBJ,KAAhB,EAAuB,6BAAvB;AAFR,GAZsB,CAAD,CAAxB;AAgBA,SAAOC,MAAP;AACH,CA1BM;AA2BP,OAAO,IAAII,yBAAyB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAACA,MAAM,CAACC,MAAR,IAAkB,MAAMD,MAAM,CAACE,MAAP,CAAcC,IAAI,IAAIA,IAAI,KAAKJ,KAA/B,EAAsCE,MAA9D,GAAuEF,KAAvE,GAA+E,KAAK,CAAvI;AACP,OAAO,IAAIK,iBAAiB,GAAG,CAACC,kBAAD,EAAqBjB,SAArB,EAAgCkB,MAAhC,KAA2C;AACtE,MAAIC,qBAAJ;;AACA,MAAIC,UAAU,GAAG,UAAUD,qBAAqB,GAAGnB,SAAS,CAACoB,UAA5C,KAA2D,KAAK,CAAL,KAAWD,qBAAtE,GAA8FA,qBAA9F,GAAsH,CAAvI;AACA,MAAI;AACAE,IAAAA,WAAW,EAAEA;AADb,MAEArB,SAAS,CAACsB,KAAV,CAAgBC,QAAhB,CAAyB,CAAzB,CAFJ;AAGA,SAAOzB,mBAAmB,CAAC;AACvB0B,IAAAA,SAAS,EAAEP,kBAAkB,CAACO,SADP;AAEvBC,IAAAA,iBAAiB,EAAER,kBAAkB,CAACQ,iBAFf;AAGvBC,IAAAA,sBAAsB,EAAET,kBAAkB,CAACU,aAAnB,CAAiCH,SAHlC;AAIvBI,IAAAA,eAAe,EAAEX,kBAAkB,CAACW;AAJb,GAAD,EAKvB;AACCC,IAAAA,QAAQ,EAAER,WADX;AAECD,IAAAA,UAAU,EAAEA,UAFb;AAGCF,IAAAA,MAAM,EAAEA;AAHT,GALuB,CAA1B;AAUH,CAhBM","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    addToStyles\r\n} from \"../../workspaces/utils\";\r\nimport {\r\n    getAppointmentColor\r\n} from \"../../resources/utils\";\r\nexport var getOverflowIndicatorStyles = viewModel => {\r\n    var {\r\n        geometry: {\r\n            height: height,\r\n            left: left,\r\n            top: top,\r\n            width: width\r\n        }\r\n    } = viewModel;\r\n    var result = addToStyles([{\r\n        attr: \"left\",\r\n        value: \"\".concat(left, \"px\")\r\n    }, {\r\n        attr: \"top\",\r\n        value: \"\".concat(top, \"px\")\r\n    }, {\r\n        attr: \"width\",\r\n        value: \"\".concat(width, \"px\")\r\n    }, {\r\n        attr: \"height\",\r\n        value: \"\".concat(height, \"px\")\r\n    }, {\r\n        attr: \"boxShadow\",\r\n        value: \"inset \".concat(width, \"px 0 0 0 rgba(0, 0, 0, 0.3)\")\r\n    }]);\r\n    return result\r\n};\r\nexport var getOverflowIndicatorColor = (color, colors) => !colors.length || 0 === colors.filter(item => item !== color).length ? color : void 0;\r\nexport var getIndicatorColor = (appointmentContext, viewModel, groups) => {\r\n    var _viewModel$groupIndex;\r\n    var groupIndex = null !== (_viewModel$groupIndex = viewModel.groupIndex) && void 0 !== _viewModel$groupIndex ? _viewModel$groupIndex : 0;\r\n    var {\r\n        appointment: appointment\r\n    } = viewModel.items.settings[0];\r\n    return getAppointmentColor({\r\n        resources: appointmentContext.resources,\r\n        resourceLoaderMap: appointmentContext.resourceLoaderMap,\r\n        resourcesDataAccessors: appointmentContext.dataAccessors.resources,\r\n        loadedResources: appointmentContext.loadedResources\r\n    }, {\r\n        itemData: appointment,\r\n        groupIndex: groupIndex,\r\n        groups: groups\r\n    })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}