{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport dataGridCore from \"./ui.data_grid.core\";\nimport { GroupingHelper as GroupingHelperCore, createOffsetFilter } from \"./ui.data_grid.grouping.core\";\nimport { createGroupFilter } from \"./ui.data_grid.utils\";\nimport errors from \"../widget/ui.errors\";\nimport { errors as dataErrors } from \"../../data/errors\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\n\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\n  groupIndex = groupIndex || 0;\n\n  if (pageSize > 1 && groupSize > 0) {\n    var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\n    pageOffset += groupSize - groupIndex - 2;\n\n    if (pageOffset < 0) {\n      pageOffset += pageSize;\n    }\n\n    return Math.floor(pageOffset / (pageSize - groupIndex - 1));\n  }\n\n  return 0;\n}\n\nexport var GroupingHelper = GroupingHelperCore.inherit(function () {\n  var foreachExpandedGroups = function (that, callback, updateGroups) {\n    return that.foreachGroups(function (groupInfo, parents) {\n      if (groupInfo.isExpanded) {\n        return callback(groupInfo, parents);\n      }\n    }, true, false, updateGroups, updateGroups);\n  };\n\n  var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\n    var isExpanded;\n    expandedInfo.items = expandedInfo.items || [];\n    expandedInfo.paths = expandedInfo.paths || [];\n    expandedInfo.count = expandedInfo.count || 0;\n    expandedInfo.lastCount = expandedInfo.lastCount || 0;\n\n    if (!groupsCount) {\n      return;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (void 0 !== item.items) {\n        path.push(item.key);\n\n        if (isCustomLoading) {\n          isExpanded = true;\n        } else {\n          var groupInfo = that.findGroupInfo(path);\n          isExpanded = groupInfo && groupInfo.isExpanded;\n        }\n\n        if (!isExpanded) {\n          item.collapsedItems = item.items;\n          item.items = null;\n        } else if (item.items) {\n          processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded);\n        } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\n          expandedInfo.items.push(item);\n          expandedInfo.paths.push(path.slice(0));\n          expandedInfo.count += expandedInfo.lastCount;\n          expandedInfo.lastCount = item.count;\n        }\n\n        path.pop();\n      }\n    }\n  };\n\n  var updateGroupInfoItem = function (that, item, isLastGroupLevel, path, offset) {\n    var groupInfo = that.findGroupInfo(path);\n    var count;\n\n    if (!groupInfo) {\n      if (isLastGroupLevel) {\n        count = item.count > 0 ? item.count : item.items.length;\n      }\n\n      that.addGroupInfo({\n        isExpanded: that._isGroupExpanded(path.length - 1),\n        path: path.slice(0),\n        offset: offset,\n        count: count || 0\n      });\n    } else {\n      if (isLastGroupLevel) {\n        groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0;\n      } else {\n        item.count = groupInfo.count || item.count;\n      }\n\n      groupInfo.offset = offset;\n    }\n  };\n\n  var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\n    var groupCount = options.group ? options.group.length : 0;\n    var isLastGroupLevel = groupCount === loadedGroupCount;\n    var remotePaging = options.remoteOperations.paging;\n    var offset = 0;\n    var totalCount = 0;\n    var count;\n    groupIndex = groupIndex || 0;\n    path = path || [];\n\n    if (remotePaging && !parentIndex) {\n      offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0;\n    }\n\n    if (groupIndex >= loadedGroupCount) {\n      return items.length;\n    }\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (item) {\n        path.push(item.key);\n\n        if (!item.count && !item.items || void 0 === item.items) {\n          return -1;\n        }\n\n        updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\n        count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\n\n        if (count < 0) {\n          return -1;\n        }\n\n        totalCount += count;\n        path.pop();\n      }\n    }\n\n    return totalCount;\n  };\n\n  var isGroupExpanded = function (groups, groupIndex) {\n    return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded;\n  };\n\n  var getTotalOffset = function (groupInfos, pageSize, offset) {\n    var groupSize;\n    var totalOffset = offset;\n\n    for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\n      groupSize = groupInfos[groupIndex].offset + 1;\n\n      if (groupIndex > 0) {\n        groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\n\n        if (pageSize) {\n          groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex;\n        }\n      }\n\n      totalOffset += groupSize;\n    }\n\n    return totalOffset;\n  };\n\n  function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\n    var item = expandedInfo.items[expandedItemIndex];\n    var skip = options.skips && options.skips[groupLevel];\n    var take = options.takes && options.takes[groupLevel];\n    var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\n    var isFirstExpandedItem = 0 === expandedItemIndex;\n    var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\n    var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\n\n    if (isFirstExpandedItem && void 0 !== skip) {\n      item.isContinuation = true;\n    }\n\n    if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\n      item.isContinuationOnNextPage = true;\n    }\n  }\n\n  function isDataDeferred(data) {\n    return !Array.isArray(data);\n  }\n\n  function makeDataDeferred(options) {\n    if (!isDataDeferred(options.data)) {\n      options.data = new Deferred();\n    }\n  }\n\n  function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\n    if (!options.isCustomLoading) {\n      expandedInfo = {};\n      processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\n      !function (options, expandedInfo, currentGroupCount) {\n        var currentGroupIndex = currentGroupCount - 1;\n        var groupCount = options.group ? options.group.length : 0;\n        expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\n\n        if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\n          if (groupCount === currentGroupCount) {\n            expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0;\n          } else {\n            expandedInfo.take = 0;\n          }\n\n          expandedInfo.take += options.takes[currentGroupIndex];\n        }\n      }(options, expandedInfo, loadedGroupCount);\n    }\n\n    var groupCount = options.group ? options.group.length : 0;\n\n    if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\n      makeDataDeferred(options);\n      !function (that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\n        var groups = options.group || [];\n        var currentGroup = groups[groupLevel + 1];\n        var deferreds = [];\n        each(expandedInfo.paths, function (expandedItemIndex) {\n          var loadOptions = {\n            requireTotalCount: false,\n            requireGroupCount: true,\n            group: [currentGroup],\n            groupSummary: options.storeLoadOptions.groupSummary,\n            filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\n              filter: options.storeLoadOptions.filter,\n              group: groups\n            }),\n            select: options.storeLoadOptions.select\n          };\n\n          if (0 === expandedItemIndex) {\n            loadOptions.skip = expandedInfo.skip || 0;\n          }\n\n          if (expandedItemIndex === expandedInfo.paths.length - 1) {\n            loadOptions.take = expandedInfo.take;\n          }\n\n          var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\n          when(loadResult).done(function (data) {\n            var item = expandedInfo.items[expandedItemIndex];\n            applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\n            item.items = data;\n          });\n          deferreds.push(loadResult);\n        });\n        when.apply(null, deferreds).done(function () {\n          updateGroupInfos(that, options, data, loadedGroupCount + 1);\n          loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data);\n        });\n      }(that, options, expandedInfo, loadedGroupCount, groupLevel, data);\n    } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\n      makeDataDeferred(options);\n      !function (that, options, expandedInfo, data) {\n        var expandedFilters = [];\n        var groups = options.group || [];\n        each(expandedInfo.paths, function (_, expandedPath) {\n          expandedFilters.push(createGroupFilter(expandedPath, {\n            group: options.isCustomLoading ? options.storeLoadOptions.group : groups\n          }));\n        });\n        var filter = options.storeLoadOptions.filter;\n\n        if (!options.storeLoadOptions.isLoadingAll) {\n          filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")]);\n        }\n\n        var loadOptions = extend({}, options.storeLoadOptions, {\n          requireTotalCount: false,\n          requireGroupCount: false,\n          group: null,\n          sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\n          filter: filter\n        });\n\n        var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\n\n        if (!isPagingLocal) {\n          loadOptions.skip = expandedInfo.skip;\n          loadOptions.take = expandedInfo.take;\n        }\n\n        when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done(function (items, extra) {\n          if (isPagingLocal) {\n            items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\n            items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\n            items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items;\n          }\n\n          each(expandedInfo.items, function (index, item) {\n            var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\n            var expandedItems = items.splice(0, itemCount);\n            applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\n            item.items = expandedItems;\n          });\n          options.data.resolve(data);\n        }).fail(options.data.reject);\n      }(that, options, expandedInfo, data);\n    } else if (isDataDeferred(options.data)) {\n      options.data.resolve(data);\n    }\n  }\n\n  var loadGroupTotalCount = function (dataSource, options) {\n    var d = new Deferred();\n    var isGrouping = !!(options.group && options.group.length);\n    var loadOptions = extend({\n      skip: 0,\n      take: 1,\n      requireGroupCount: isGrouping,\n      requireTotalCount: !isGrouping\n    }, options, {\n      group: isGrouping ? options.group : null\n    });\n    dataSource.load(loadOptions).done(function (data, extra) {\n      var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\n\n      if (!isFinite(count)) {\n        d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\n        return;\n      }\n\n      d.resolve(count);\n    }).fail(d.reject.bind(d));\n    return d;\n  };\n\n  return {\n    updateTotalItemsCount: function (options) {\n      var totalItemsCount = 0;\n      var totalCount = options.extra && options.extra.totalCount || 0;\n      var groupCount = options.extra && options.extra.groupCount || 0;\n\n      var pageSize = this._dataSource.pageSize();\n\n      var isVirtualPaging = this._isVirtualPaging();\n\n      foreachExpandedGroups(this, function (groupInfo) {\n        groupInfo.childrenTotalCount = 0;\n      });\n      foreachExpandedGroups(this, function (groupInfo, parents) {\n        var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\n        var count = groupInfo.count + groupInfo.childrenTotalCount;\n\n        if (!isVirtualPaging) {\n          count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1);\n        }\n\n        if (parents[parents.length - 2]) {\n          parents[parents.length - 2].childrenTotalCount += count;\n        } else {\n          totalItemsCount += count;\n        }\n      });\n      this.callBase(totalItemsCount - totalCount + groupCount);\n    },\n    _isGroupExpanded: function (groupIndex) {\n      var groups = this._dataSource.group();\n\n      return isGroupExpanded(groups, groupIndex);\n    },\n    _updatePagingOptions: function (options, callback) {\n      var isVirtualPaging = this._isVirtualPaging();\n\n      var pageSize = this._dataSource.pageSize();\n\n      var skips = [];\n      var takes = [];\n      var skipChildrenTotalCount = 0;\n      var childrenTotalCount = 0;\n\n      if (options.take) {\n        foreachExpandedGroups(this, function (groupInfo) {\n          groupInfo.childrenTotalCount = 0;\n          groupInfo.skipChildrenTotalCount = 0;\n        });\n        foreachExpandedGroups(this, function (groupInfo, parents) {\n          var take;\n          var takeCorrection = 0;\n          var parentTakeCorrection = 0;\n          var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\n          var continuationGroupCount = 0;\n          var skipContinuationGroupCount = 0;\n          var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\n          var childrenGroupInfoCount = groupInfoCount;\n          callback && callback(groupInfo, totalOffset);\n          var skip = options.skip - totalOffset;\n\n          if (totalOffset <= options.skip + options.take && groupInfoCount) {\n            take = options.take;\n\n            if (!isVirtualPaging) {\n              continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\n              groupInfoCount += continuationGroupCount * parents.length;\n              childrenGroupInfoCount += continuationGroupCount;\n\n              if (pageSize && skip >= 0) {\n                takeCorrection = parents.length;\n                parentTakeCorrection = parents.length - 1;\n                skipContinuationGroupCount = Math.floor(skip / pageSize);\n              }\n            }\n\n            if (skip >= 0) {\n              if (totalOffset + groupInfoCount > options.skip) {\n                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount);\n              }\n\n              if (totalOffset + groupInfoCount >= options.skip + take) {\n                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount);\n              }\n            } else if (totalOffset + groupInfoCount >= options.skip + take) {\n              takes.unshift(take + skip - groupInfo.childrenTotalCount);\n            }\n          }\n\n          if (totalOffset <= options.skip) {\n            if (parents[parents.length - 2]) {\n              parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection);\n            } else {\n              skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1);\n            }\n          }\n\n          if (totalOffset <= options.skip + take) {\n            groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\n\n            if (parents[parents.length - 2]) {\n              parents[parents.length - 2].childrenTotalCount += groupInfoCount;\n            } else {\n              childrenTotalCount += groupInfoCount;\n            }\n          }\n        });\n        options.skip -= skipChildrenTotalCount;\n        options.take -= childrenTotalCount - skipChildrenTotalCount;\n      }\n\n      options.skips = skips;\n      options.takes = takes;\n    },\n    changeRowExpand: function (path) {\n      var groupInfo = this.findGroupInfo(path);\n      var dataSource = this._dataSource;\n      var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\n      var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\n\n      if (groupInfo) {\n        groupInfo.isExpanded = !groupInfo.isExpanded;\n\n        if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\n          return loadGroupTotalCount(dataSource, {\n            filter: createGroupFilter(path, {\n              filter: dataSource.lastLoadOptions().filter,\n              group: dataSource.group()\n            }),\n            group: [groups[path.length]],\n            select: dataSource.select()\n          }).done(function (groupCount) {\n            groupInfo.count = groupCount;\n          });\n        }\n\n        return new Deferred().resolve();\n      }\n\n      return new Deferred().reject();\n    },\n    handleDataLoading: function (options) {\n      var storeLoadOptions = options.storeLoadOptions;\n      var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\n\n      if (options.isCustomLoading || !groups.length) {\n        return;\n      }\n\n      if (options.remoteOperations.grouping) {\n        var remotePaging = this._dataSource.remoteOperations().paging;\n\n        storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\n        storeLoadOptions.group.forEach(function (group, index) {\n          var isLastGroup = index === storeLoadOptions.group.length - 1;\n          group.isExpanded = !remotePaging || !isLastGroup;\n        });\n      }\n\n      options.group = options.group || groups;\n\n      if (options.remoteOperations.paging) {\n        options.skip = storeLoadOptions.skip;\n        options.take = storeLoadOptions.take;\n        storeLoadOptions.requireGroupCount = true;\n        storeLoadOptions.group = groups.slice(0, 1);\n\n        this._updatePagingOptions(options);\n\n        storeLoadOptions.skip = options.skip;\n        storeLoadOptions.take = options.take;\n      } else {\n        options.skip = options.loadOptions.skip;\n        options.take = options.loadOptions.take;\n\n        this._updatePagingOptions(options);\n      }\n    },\n    handleDataLoadedCore: function (options, callBase) {\n      var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\n      var groupCount = options.group ? options.group.length : 0;\n      var totalCount;\n      var expandedInfo = {};\n\n      if (options.isCustomLoading) {\n        callBase(options);\n        processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll);\n      } else {\n        if (!options.remoteOperations.paging) {\n          this.foreachGroups(function (groupInfo) {\n            groupInfo.count = 0;\n          });\n        }\n\n        totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\n\n        if (totalCount < 0) {\n          options.data = new Deferred().reject(errors.Error(\"E1037\"));\n          return;\n        }\n\n        if (!options.remoteOperations.paging) {\n          if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\n            options.extra.totalCount = totalCount;\n            options.extra.groupCount = options.data.length;\n          }\n        }\n\n        if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\n          options.data = new Deferred().reject(dataErrors.Error(\"E4022\"));\n          return;\n        }\n\n        this.updateTotalItemsCount(options);\n\n        if (!options.remoteOperations.paging) {\n          this._updatePagingOptions(options);\n        }\n\n        callBase(options);\n\n        if (!options.remoteOperations.paging) {\n          this._processPaging(options, loadedGroupCount);\n        }\n      }\n\n      loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data);\n    },\n    _processSkips: function (items, skips, groupCount) {\n      if (!groupCount) {\n        return;\n      }\n\n      var firstItem = items[0];\n      var skip = skips[0];\n      var children = firstItem && firstItem.items;\n\n      if (void 0 !== skip) {\n        firstItem.isContinuation = true;\n\n        if (children) {\n          firstItem.items = children.slice(skip);\n\n          this._processSkips(firstItem.items, skips.slice(1), groupCount - 1);\n        }\n      }\n    },\n    _processTakes: function (items, skips, takes, groupCount, parents) {\n      if (!groupCount || !items) {\n        return;\n      }\n\n      parents = parents || [];\n      var lastItem = items[items.length - 1];\n      var children = lastItem && lastItem.items;\n      var take = takes[0];\n      var skip = skips[0];\n\n      if (lastItem) {\n        var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\n\n        if (void 0 !== take && maxTakeCount > take) {\n          lastItem.isContinuationOnNextPage = true;\n          parents.forEach(function (parent) {\n            parent.isContinuationOnNextPage = true;\n          });\n\n          if (children) {\n            children = children.slice(0, take);\n            lastItem.items = children;\n          }\n        }\n\n        parents.push(lastItem);\n\n        this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents);\n      }\n    },\n    _processPaging: function (options, groupCount) {\n      this._processSkips(options.data, options.skips, groupCount);\n\n      this._processTakes(options.data, options.skips, options.takes, groupCount);\n    },\n    isLastLevelGroupItemsPagingLocal: function () {\n      return false;\n    },\n    sortLastLevelGroupItems: function (items) {\n      return items;\n    },\n    refresh: function (options, operationTypes) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var storeLoadOptions = options.storeLoadOptions;\n      var group = options.group || options.storeLoadOptions.group;\n      var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\n      var isExpanded;\n      var groupIndex;\n\n      function handleGroup(groupInfo, parents) {\n        if (parents.length === groupIndex + 1) {\n          groupInfo.isExpanded = isExpanded;\n        }\n      }\n\n      for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\n        isExpanded = isGroupExpanded(group, groupIndex);\n\n        if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\n          that.foreachGroups(handleGroup);\n        }\n      }\n\n      that.callBase.apply(this, arguments);\n\n      if (group && options.remoteOperations.paging && operationTypes.reload) {\n        return foreachExpandedGroups(that, function (groupInfo) {\n          var groupCountQuery = loadGroupTotalCount(dataSource, {\n            filter: createGroupFilter(groupInfo.path, {\n              filter: storeLoadOptions.filter,\n              group: group\n            }),\n            group: group.slice(groupInfo.path.length),\n            select: storeLoadOptions.select\n          });\n          var groupOffsetQuery = loadGroupTotalCount(dataSource, {\n            filter: createOffsetFilter(groupInfo.path, {\n              filter: storeLoadOptions.filter,\n              group: group\n            }, true),\n            group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\n            select: storeLoadOptions.select\n          });\n          return when(groupOffsetQuery, groupCountQuery).done(function (offset, count) {\n            offset = parseInt(offset.length ? offset[0] : offset);\n            count = parseInt(count.length ? count[0] : count);\n            groupInfo.offset = offset;\n\n            if (groupInfo.count !== count) {\n              groupInfo.count = count;\n              that.updateTotalItemsCount(options);\n            }\n          });\n        }, true);\n      }\n    }\n  };\n}());","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js"],"names":["extend","each","dataGridCore","GroupingHelper","GroupingHelperCore","createOffsetFilter","createGroupFilter","errors","dataErrors","when","Deferred","getContinuationGroupCount","groupOffset","pageSize","groupSize","groupIndex","pageOffset","Math","floor","inherit","foreachExpandedGroups","that","callback","updateGroups","foreachGroups","groupInfo","parents","isExpanded","processGroupItems","items","groupsCount","expandedInfo","path","isCustomLoading","isLastGroupExpanded","paths","count","lastCount","i","length","item","push","key","findGroupInfo","collapsedItems","slice","pop","updateGroupInfoItem","isLastGroupLevel","offset","addGroupInfo","_isGroupExpanded","updateGroupInfos","options","loadedGroupCount","parentIndex","groupCount","group","remotePaging","remoteOperations","paging","totalCount","skip","skips","isGroupExpanded","groups","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","take","takes","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isContinuation","isContinuationOnNextPage","isDataDeferred","data","Array","isArray","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","deferreds","loadOptions","requireTotalCount","requireGroupCount","groupSummary","storeLoadOptions","filter","select","loadResult","_dataSource","loadFromStore","done","apply","expandedFilters","_","expandedPath","isLoadingAll","combineFilters","sort","concat","normalizeSortingInfo","isPagingLocal","isLastLevelGroupItemsPagingLocal","extra","sortLastLevelGroupItems","index","itemCount","expandedItems","splice","resolve","fail","reject","loadGroupTotalCount","dataSource","d","isGrouping","load","isFinite","Error","bind","updateTotalItemsCount","totalItemsCount","isVirtualPaging","_isVirtualPaging","callBase","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","unshift","min","changeRowExpand","remoteGroupPaging","groupPaging","lastLoadOptions","handleDataLoading","grouping","forEach","isLastGroup","handleDataLoadedCore","_processPaging","_processSkips","firstItem","children","_processTakes","lastItem","maxTakeCount","parent","refresh","operationTypes","oldGroups","_group","handleGroup","arguments","reload","groupCountQuery","groupOffsetQuery","parseInt"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}