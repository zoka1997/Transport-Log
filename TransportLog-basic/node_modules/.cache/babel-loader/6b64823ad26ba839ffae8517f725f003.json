{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"splitText\", \"text\"];\nimport { createVNode, createFragment } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      splitText: splitText,\n      text: text\n    },\n    textParts: textParts\n  } = _ref;\n  return createFragment(splitText ? textParts.map(part => createVNode(1, \"span\", \"dx-scheduler-header-panel-cell-date\", part, 0)) : text, 0);\n};\nexport var DateHeaderTextProps = {\n  text: \"\",\n  splitText: false\n};\nexport class DateHeaderText extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.__getterCache = {};\n  }\n\n  get textParts() {\n    if (void 0 !== this.__getterCache.textParts) {\n      return this.__getterCache.textParts;\n    }\n\n    return this.__getterCache.textParts = (() => {\n      var {\n        text: text\n      } = this.props;\n      return text ? text.split(\" \") : [\"\"];\n    })();\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  componentWillUpdate(nextProps, nextState, context) {\n    if (this.props.text !== nextProps.text) {\n      this.__getterCache.textParts = void 0;\n    }\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      textParts: this.textParts,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nDateHeaderText.defaultProps = DateHeaderTextProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","createFragment","Fragment","BaseInfernoComponent","viewFunction","_ref","props","splitText","text","textParts","map","part","DateHeaderTextProps","DateHeaderText","constructor","state","__getterCache","split","restAttributes","_this$props","restProps","componentWillUpdate","nextProps","nextState","context","render","defaultProps"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAIC,SAAS,GAAG,CAAC,WAAD,EAAc,MAAd,CAAhB;AACA,SACIC,WADJ,EAEIC,cAFJ,QAGO,SAHP;AAIA,SACIC,QADJ,QAEO,SAFP;AAGA,SACIC,oBADJ,QAEO,6BAFP;AAGA,OAAO,IAAIC,YAAY,GAAGC,IAAI,IAAI;AAC9B,MAAI;AACAC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,IAAI,EAAEA;AAFH,KADP;AAKAC,IAAAA,SAAS,EAAEA;AALX,MAMAJ,IANJ;AAOA,SAAOJ,cAAc,CAACM,SAAS,GAAGE,SAAS,CAACC,GAAV,CAAcC,IAAI,IAAIX,WAAW,CAAC,CAAD,EAAI,MAAJ,EAAY,qCAAZ,EAAmDW,IAAnD,EAAyD,CAAzD,CAAjC,CAAH,GAAmGH,IAA7G,EAAmH,CAAnH,CAArB;AACH,CATM;AAUP,OAAO,IAAII,mBAAmB,GAAG;AAC7BJ,EAAAA,IAAI,EAAE,EADuB;AAE7BD,EAAAA,SAAS,EAAE;AAFkB,CAA1B;AAIP,OAAO,MAAMM,cAAN,SAA6BV,oBAA7B,CAAkD;AACrDW,EAAAA,WAAW,CAACR,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKS,KAAL,GAAa,EAAb;AACA,SAAKC,aAAL,GAAqB,EAArB;AACH;;AACY,MAATP,SAAS,GAAG;AACZ,QAAI,KAAK,CAAL,KAAW,KAAKO,aAAL,CAAmBP,SAAlC,EAA6C;AACzC,aAAO,KAAKO,aAAL,CAAmBP,SAA1B;AACH;;AACD,WAAO,KAAKO,aAAL,CAAmBP,SAAnB,GAA+B,CAAC,MAAM;AACzC,UAAI;AACAD,QAAAA,IAAI,EAAEA;AADN,UAEA,KAAKF,KAFT;AAGA,aAAOE,IAAI,GAAGA,IAAI,CAACS,KAAL,CAAW,GAAX,CAAH,GAAqB,CAAC,EAAD,CAAhC;AACH,KALqC,GAAtC;AAMH;;AACiB,MAAdC,cAAc,GAAG;AACjB,QAAIC,WAAW,GAAG,KAAKb,KAAvB;AAAA,QACIc,SAAS,GAAGtB,6BAA6B,CAACqB,WAAD,EAAcpB,SAAd,CAD7C;;AAEA,WAAOqB,SAAP;AACH;;AACDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,OAAvB,EAAgC;AAC/C,QAAI,KAAKlB,KAAL,CAAWE,IAAX,KAAoBc,SAAS,CAACd,IAAlC,EAAwC;AACpC,WAAKQ,aAAL,CAAmBP,SAAnB,GAA+B,KAAK,CAApC;AACH;AACJ;;AACDgB,EAAAA,MAAM,GAAG;AACL,QAAInB,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAOF,YAAY,CAAC;AAChBE,MAAAA,KAAK,EAAET,QAAQ,CAAC,EAAD,EAAKS,KAAL,CADC;AAEhBG,MAAAA,SAAS,EAAE,KAAKA,SAFA;AAGhBS,MAAAA,cAAc,EAAE,KAAKA;AAHL,KAAD,CAAnB;AAKH;;AAlCoD;AAoCzDL,cAAc,CAACa,YAAf,GAA8Bd,mBAA9B","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/date_header/dateHeaderText.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"splitText\", \"text\"];\r\nimport {\r\n    createVNode,\r\n    createFragment\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            splitText: splitText,\r\n            text: text\r\n        },\r\n        textParts: textParts\r\n    } = _ref;\r\n    return createFragment(splitText ? textParts.map(part => createVNode(1, \"span\", \"dx-scheduler-header-panel-cell-date\", part, 0)) : text, 0)\r\n};\r\nexport var DateHeaderTextProps = {\r\n    text: \"\",\r\n    splitText: false\r\n};\r\nexport class DateHeaderText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {}\r\n    }\r\n    get textParts() {\r\n        if (void 0 !== this.__getterCache.textParts) {\r\n            return this.__getterCache.textParts\r\n        }\r\n        return this.__getterCache.textParts = (() => {\r\n            var {\r\n                text: text\r\n            } = this.props;\r\n            return text ? text.split(\" \") : [\"\"]\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.text !== nextProps.text) {\r\n            this.__getterCache.textParts = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            textParts: this.textParts,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nDateHeaderText.defaultProps = DateHeaderTextProps;\r\n"]},"metadata":{},"sourceType":"module"}