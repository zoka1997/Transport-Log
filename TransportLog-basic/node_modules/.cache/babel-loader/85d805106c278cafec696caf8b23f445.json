{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { ViewDataGenerator } from \"./view_data_generator\";\nimport { calculateCellIndex } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { calculateStartViewDate } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\nimport { setOptionHour } from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport dateUtils from \"../../../../core/utils/date\";\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\nexport class ViewDataGeneratorTimelineMonth extends ViewDataGenerator {\n  _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\n    return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount);\n  }\n\n  calculateEndDate(startDate, interval, endDayHour) {\n    return setOptionHour(startDate, endDayHour);\n  }\n\n  getInterval() {\n    return DAY_IN_MILLISECONDS;\n  }\n\n  _calculateStartViewDate(options) {\n    return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount);\n  }\n\n  getCellCount(options) {\n    var {\n      intervalCount: intervalCount,\n      currentDate: currentDate\n    } = options;\n    var cellCount = 0;\n\n    for (var i = 1; i <= intervalCount; i++) {\n      cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate();\n    }\n\n    return cellCount;\n  }\n\n  setHiddenInterval() {\n    this.hiddenInterval = 0;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js"],"names":["ViewDataGenerator","calculateCellIndex","calculateStartViewDate","setOptionHour","dateUtils","DAY_IN_MILLISECONDS","dateToMilliseconds","ViewDataGeneratorTimelineMonth","_calculateCellIndex","rowIndex","columnIndex","rowCount","columnCount","calculateEndDate","startDate","interval","endDayHour","getInterval","_calculateStartViewDate","options","currentDate","startDayHour","intervalCount","getCellCount","cellCount","i","Date","getFullYear","getMonth","getDate","setHiddenInterval","hiddenInterval"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,iBADJ,QAEO,uBAFP;AAGA,SACIC,kBADJ,QAEO,0EAFP;AAGA,SACIC,sBADJ,QAEO,mFAFP;AAGA,SACIC,aADJ,QAEO,yEAFP;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,IAAIC,mBAAmB,GAAGD,SAAS,CAACE,kBAAV,CAA6B,KAA7B,CAA1B;AACA,OAAO,MAAMC,8BAAN,SAA6CP,iBAA7C,CAA+D;AAClEQ,EAAAA,mBAAmB,CAACC,QAAD,EAAWC,WAAX,EAAwBC,QAAxB,EAAkCC,WAAlC,EAA+C;AAC9D,WAAOX,kBAAkB,CAACQ,QAAD,EAAWC,WAAX,EAAwBC,QAAxB,EAAkCC,WAAlC,CAAzB;AACH;;AACDC,EAAAA,gBAAgB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,UAAtB,EAAkC;AAC9C,WAAOb,aAAa,CAACW,SAAD,EAAYE,UAAZ,CAApB;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,WAAOZ,mBAAP;AACH;;AACDa,EAAAA,uBAAuB,CAACC,OAAD,EAAU;AAC7B,WAAOjB,sBAAsB,CAACiB,OAAO,CAACC,WAAT,EAAsBD,OAAO,CAACE,YAA9B,EAA4CF,OAAO,CAACL,SAApD,EAA+DK,OAAO,CAACG,aAAvE,CAA7B;AACH;;AACDC,EAAAA,YAAY,CAACJ,OAAD,EAAU;AAClB,QAAI;AACAG,MAAAA,aAAa,EAAEA,aADf;AAEAF,MAAAA,WAAW,EAAEA;AAFb,QAGAD,OAHJ;AAIA,QAAIK,SAAS,GAAG,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,aAArB,EAAoCG,CAAC,EAArC,EAAyC;AACrCD,MAAAA,SAAS,IAAI,IAAIE,IAAJ,CAASN,WAAW,CAACO,WAAZ,EAAT,EAAoCP,WAAW,CAACQ,QAAZ,KAAyBH,CAA7D,EAAgE,CAAhE,EAAmEI,OAAnE,EAAb;AACH;;AACD,WAAOL,SAAP;AACH;;AACDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL,GAAsB,CAAtB;AACH;;AA1BiE","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/view_model/view_data_generator_timeline_month.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    ViewDataGenerator\r\n} from \"./view_data_generator\";\r\nimport {\r\n    calculateCellIndex\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\r\nimport {\r\n    calculateStartViewDate\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/timeline_month\";\r\nimport {\r\n    setOptionHour\r\n} from \"../../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nvar DAY_IN_MILLISECONDS = dateUtils.dateToMilliseconds(\"day\");\r\nexport class ViewDataGeneratorTimelineMonth extends ViewDataGenerator {\r\n    _calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount) {\r\n        return calculateCellIndex(rowIndex, columnIndex, rowCount, columnCount)\r\n    }\r\n    calculateEndDate(startDate, interval, endDayHour) {\r\n        return setOptionHour(startDate, endDayHour)\r\n    }\r\n    getInterval() {\r\n        return DAY_IN_MILLISECONDS\r\n    }\r\n    _calculateStartViewDate(options) {\r\n        return calculateStartViewDate(options.currentDate, options.startDayHour, options.startDate, options.intervalCount)\r\n    }\r\n    getCellCount(options) {\r\n        var {\r\n            intervalCount: intervalCount,\r\n            currentDate: currentDate\r\n        } = options;\r\n        var cellCount = 0;\r\n        for (var i = 1; i <= intervalCount; i++) {\r\n            cellCount += new Date(currentDate.getFullYear(), currentDate.getMonth() + i, 0).getDate()\r\n        }\r\n        return cellCount\r\n    }\r\n    setHiddenInterval() {\r\n        this.hiddenInterval = 0\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}