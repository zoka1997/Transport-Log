{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/array_query.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../core/class\";\nimport { isFunction, isDefined } from \"../core/utils/type\";\nimport { each, map } from \"../core/utils/iterator\";\nimport { compileGetter, toComparable } from \"../core/utils/data\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { errors, handleError as handleDataError } from \"./errors\";\nimport { aggregators, isGroupCriterion, isUnaryOperation, normalizeBinaryCriterion, isConjunctiveOperator as isConjunctiveOperatorChecker } from \"./utils\";\nvar Iterator = Class.inherit({\n  toArray: function () {\n    var result = [];\n    this.reset();\n\n    while (this.next()) {\n      result.push(this.current());\n    }\n\n    return result;\n  },\n  countable: function () {\n    return false;\n  }\n});\nvar ArrayIterator = Iterator.inherit({\n  ctor: function (array) {\n    this.array = array;\n    this.index = -1;\n  },\n  next: function () {\n    if (this.index + 1 < this.array.length) {\n      this.index++;\n      return true;\n    }\n\n    return false;\n  },\n  current: function () {\n    return this.array[this.index];\n  },\n  reset: function () {\n    this.index = -1;\n  },\n  toArray: function () {\n    return this.array.slice(0);\n  },\n  countable: function () {\n    return true;\n  },\n  count: function () {\n    return this.array.length;\n  }\n});\nvar WrappedIterator = Iterator.inherit({\n  ctor: function (iter) {\n    this.iter = iter;\n  },\n  next: function () {\n    return this.iter.next();\n  },\n  current: function () {\n    return this.iter.current();\n  },\n  reset: function () {\n    return this.iter.reset();\n  }\n});\nvar MapIterator = WrappedIterator.inherit({\n  ctor: function (iter, mapper) {\n    this.callBase(iter);\n    this.index = -1;\n    this.mapper = mapper;\n  },\n  current: function () {\n    return this.mapper(this.callBase(), this.index);\n  },\n  next: function () {\n    var hasNext = this.callBase();\n\n    if (hasNext) {\n      this.index++;\n    }\n\n    return hasNext;\n  }\n});\n\nvar defaultCompare = function (xValue, yValue) {\n  xValue = toComparable(xValue);\n  yValue = toComparable(yValue);\n\n  if (null === xValue && null !== yValue) {\n    return -1;\n  }\n\n  if (null !== xValue && null === yValue) {\n    return 1;\n  }\n\n  if (void 0 === xValue && void 0 !== yValue) {\n    return 1;\n  }\n\n  if (void 0 !== xValue && void 0 === yValue) {\n    return -1;\n  }\n\n  if (xValue < yValue) {\n    return -1;\n  }\n\n  if (xValue > yValue) {\n    return 1;\n  }\n\n  return 0;\n};\n\nvar SortIterator = Iterator.inherit({\n  ctor: function (iter, getter, desc, compare) {\n    if (!(iter instanceof MapIterator)) {\n      iter = new MapIterator(iter, this._wrap);\n    }\n\n    this.iter = iter;\n    this.rules = [{\n      getter: getter,\n      desc: desc,\n      compare: compare\n    }];\n  },\n  thenBy: function (getter, desc, compare) {\n    var result = new SortIterator(this.sortedIter || this.iter, getter, desc, compare);\n\n    if (!this.sortedIter) {\n      result.rules = this.rules.concat(result.rules);\n    }\n\n    return result;\n  },\n  next: function () {\n    this._ensureSorted();\n\n    return this.sortedIter.next();\n  },\n  current: function () {\n    this._ensureSorted();\n\n    return this.sortedIter.current();\n  },\n  reset: function () {\n    delete this.sortedIter;\n  },\n  countable: function () {\n    return this.sortedIter || this.iter.countable();\n  },\n  count: function () {\n    if (this.sortedIter) {\n      return this.sortedIter.count();\n    }\n\n    return this.iter.count();\n  },\n  _ensureSorted: function () {\n    var that = this;\n\n    if (that.sortedIter) {\n      return;\n    }\n\n    each(that.rules, function () {\n      this.getter = compileGetter(this.getter);\n    });\n    that.sortedIter = new MapIterator(new ArrayIterator(this.iter.toArray().sort(function (x, y) {\n      return that._compare(x, y);\n    })), that._unwrap);\n  },\n  _wrap: function (record, index) {\n    return {\n      index: index,\n      value: record\n    };\n  },\n  _unwrap: function (wrappedItem) {\n    return wrappedItem.value;\n  },\n  _compare: function (x, y) {\n    var xIndex = x.index;\n    var yIndex = y.index;\n    x = x.value;\n    y = y.value;\n\n    if (x === y) {\n      return xIndex - yIndex;\n    }\n\n    for (var i = 0, rulesCount = this.rules.length; i < rulesCount; i++) {\n      var rule = this.rules[i];\n      var xValue = rule.getter(x);\n      var yValue = rule.getter(y);\n      var compare = rule.compare || defaultCompare;\n      var compareResult = compare(xValue, yValue);\n\n      if (compareResult) {\n        return rule.desc ? -compareResult : compareResult;\n      }\n    }\n\n    return xIndex - yIndex;\n  }\n});\n\nvar compileCriteria = function () {\n  var toString = function (value) {\n    return isDefined(value) ? value.toString() : \"\";\n  };\n\n  function compileEquals(getter, value, negate) {\n    return function (obj) {\n      obj = toComparable(getter(obj));\n      var result = function (value) {\n        return \"\" === value || 0 === value || false === value;\n      }(value) ? obj === value : obj == value;\n\n      if (negate) {\n        result = !result;\n      }\n\n      return result;\n    };\n  }\n\n  return function (crit) {\n    if (isFunction(crit)) {\n      return crit;\n    }\n\n    if (isGroupCriterion(crit)) {\n      return function (crit) {\n        var ops = [];\n        var isConjunctiveOperator = false;\n        var isConjunctiveNextOperator = false;\n        each(crit, function () {\n          if (Array.isArray(this) || isFunction(this)) {\n            if (ops.length > 1 && isConjunctiveOperator !== isConjunctiveNextOperator) {\n              throw new errors.Error(\"E4019\");\n            }\n\n            ops.push(compileCriteria(this));\n            isConjunctiveOperator = isConjunctiveNextOperator;\n            isConjunctiveNextOperator = true;\n          } else {\n            isConjunctiveNextOperator = isConjunctiveOperatorChecker(this);\n          }\n        });\n        return function (d) {\n          var result = isConjunctiveOperator;\n\n          for (var i = 0; i < ops.length; i++) {\n            if (ops[i](d) !== isConjunctiveOperator) {\n              result = !isConjunctiveOperator;\n              break;\n            }\n          }\n\n          return result;\n        };\n      }(crit);\n    }\n\n    if (isUnaryOperation(crit)) {\n      return function (crit) {\n        var op = crit[0];\n        var criteria = compileCriteria(crit[1]);\n\n        if (\"!\" === op) {\n          return function (obj) {\n            return !criteria(obj);\n          };\n        }\n\n        throw errors.Error(\"E4003\", op);\n      }(crit);\n    }\n\n    return function (crit) {\n      crit = normalizeBinaryCriterion(crit);\n      var getter = compileGetter(crit[0]);\n      var op = crit[1];\n      var value = crit[2];\n      value = toComparable(value);\n\n      var compare = (obj, operatorFn) => {\n        obj = toComparable(getter(obj));\n        return (null == value || null == obj) && value !== obj ? false : operatorFn(obj, value);\n      };\n\n      switch (op.toLowerCase()) {\n        case \"=\":\n          return compileEquals(getter, value);\n\n        case \"<>\":\n          return compileEquals(getter, value, true);\n\n        case \">\":\n          return obj => compare(obj, (a, b) => a > b);\n\n        case \"<\":\n          return obj => compare(obj, (a, b) => a < b);\n\n        case \">=\":\n          return obj => compare(obj, (a, b) => a >= b);\n\n        case \"<=\":\n          return obj => compare(obj, (a, b) => a <= b);\n\n        case \"startswith\":\n          return function (obj) {\n            return 0 === toComparable(toString(getter(obj))).indexOf(value);\n          };\n\n        case \"endswith\":\n          return function (obj) {\n            var getterValue = toComparable(toString(getter(obj)));\n            var searchValue = toString(value);\n\n            if (getterValue.length < searchValue.length) {\n              return false;\n            }\n\n            var index = getterValue.lastIndexOf(value);\n            return -1 !== index && index === getterValue.length - value.length;\n          };\n\n        case \"contains\":\n          return function (obj) {\n            return toComparable(toString(getter(obj))).indexOf(value) > -1;\n          };\n\n        case \"notcontains\":\n          return function (obj) {\n            return -1 === toComparable(toString(getter(obj))).indexOf(value);\n          };\n      }\n\n      throw errors.Error(\"E4003\", op);\n    }(crit);\n  };\n}();\n\nvar FilterIterator = WrappedIterator.inherit({\n  ctor: function (iter, criteria) {\n    this.callBase(iter);\n    this.criteria = compileCriteria(criteria);\n  },\n  next: function () {\n    while (this.iter.next()) {\n      if (this.criteria(this.current())) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});\nvar GroupIterator = Iterator.inherit({\n  ctor: function (iter, getter) {\n    this.iter = iter;\n    this.getter = getter;\n  },\n  next: function () {\n    this._ensureGrouped();\n\n    return this.groupedIter.next();\n  },\n  current: function () {\n    this._ensureGrouped();\n\n    return this.groupedIter.current();\n  },\n  reset: function () {\n    delete this.groupedIter;\n  },\n  countable: function () {\n    return !!this.groupedIter;\n  },\n  count: function () {\n    return this.groupedIter.count();\n  },\n  _ensureGrouped: function () {\n    if (this.groupedIter) {\n      return;\n    }\n\n    var hash = {};\n    var keys = [];\n    var iter = this.iter;\n    var getter = compileGetter(this.getter);\n    iter.reset();\n\n    while (iter.next()) {\n      var current = iter.current();\n      var key = getter(current);\n\n      if (key in hash) {\n        hash[key].push(current);\n      } else {\n        hash[key] = [current];\n        keys.push(key);\n      }\n    }\n\n    this.groupedIter = new ArrayIterator(map(keys, function (key) {\n      return {\n        key: key,\n        items: hash[key]\n      };\n    }));\n  }\n});\nvar SelectIterator = WrappedIterator.inherit({\n  ctor: function (iter, getter) {\n    this.callBase(iter);\n    this.getter = compileGetter(getter);\n  },\n  current: function () {\n    return this.getter(this.callBase());\n  },\n  countable: function () {\n    return this.iter.countable();\n  },\n  count: function () {\n    return this.iter.count();\n  }\n});\nvar SliceIterator = WrappedIterator.inherit({\n  ctor: function (iter, skip, take) {\n    this.callBase(iter);\n    this.skip = Math.max(0, skip);\n    this.take = Math.max(0, take);\n    this.pos = 0;\n  },\n  next: function () {\n    if (this.pos >= this.skip + this.take) {\n      return false;\n    }\n\n    while (this.pos < this.skip && this.iter.next()) {\n      this.pos++;\n    }\n\n    this.pos++;\n    return this.iter.next();\n  },\n  reset: function () {\n    this.callBase();\n    this.pos = 0;\n  },\n  countable: function () {\n    return this.iter.countable();\n  },\n  count: function () {\n    return Math.min(this.iter.count() - this.skip, this.take);\n  }\n});\n\nvar arrayQueryImpl = function arrayQueryImpl(iter, queryOptions) {\n  queryOptions = queryOptions || {};\n\n  if (!(iter instanceof Iterator)) {\n    iter = new ArrayIterator(iter);\n  }\n\n  var handleError = function (error) {\n    var handler = queryOptions.errorHandler;\n\n    if (handler) {\n      handler(error);\n    }\n\n    handleDataError(error);\n  };\n\n  var aggregateCore = function (aggregator) {\n    var d = new Deferred().fail(handleError);\n    var seed;\n    var step = aggregator.step;\n    var finalize = aggregator.finalize;\n\n    try {\n      iter.reset();\n\n      if (\"seed\" in aggregator) {\n        seed = aggregator.seed;\n      } else {\n        seed = iter.next() ? iter.current() : NaN;\n      }\n\n      var accumulator = seed;\n\n      while (iter.next()) {\n        accumulator = step(accumulator, iter.current());\n      }\n\n      d.resolve(finalize ? finalize(accumulator) : accumulator);\n    } catch (x) {\n      d.reject(x);\n    }\n\n    return d.promise();\n  };\n\n  var standardAggregate = function (name) {\n    return aggregateCore(aggregators[name]);\n  };\n\n  var select = function (getter) {\n    if (!isFunction(getter) && !Array.isArray(getter)) {\n      getter = [].slice.call(arguments);\n    }\n\n    return chainQuery(new SelectIterator(iter, getter));\n  };\n\n  var selectProp = function (name) {\n    return select(compileGetter(name));\n  };\n\n  function chainQuery(iter) {\n    return arrayQueryImpl(iter, queryOptions);\n  }\n\n  return {\n    toArray: function () {\n      return iter.toArray();\n    },\n    enumerate: function () {\n      var d = new Deferred().fail(handleError);\n\n      try {\n        d.resolve(iter.toArray());\n      } catch (x) {\n        d.reject(x);\n      }\n\n      return d.promise();\n    },\n    sortBy: function (getter, desc, compare) {\n      return chainQuery(new SortIterator(iter, getter, desc, compare));\n    },\n    thenBy: function (getter, desc, compare) {\n      if (iter instanceof SortIterator) {\n        return chainQuery(iter.thenBy(getter, desc, compare));\n      }\n\n      throw errors.Error(\"E4004\");\n    },\n    filter: function (criteria) {\n      if (!Array.isArray(criteria)) {\n        criteria = [].slice.call(arguments);\n      }\n\n      return chainQuery(new FilterIterator(iter, criteria));\n    },\n    slice: function (skip, take) {\n      if (void 0 === take) {\n        take = Number.MAX_VALUE;\n      }\n\n      return chainQuery(new SliceIterator(iter, skip, take));\n    },\n    select: select,\n    groupBy: function (getter) {\n      return chainQuery(new GroupIterator(iter, getter));\n    },\n    aggregate: function (seed, step, finalize) {\n      if (arguments.length < 2) {\n        return aggregateCore({\n          step: arguments[0]\n        });\n      }\n\n      return aggregateCore({\n        seed: seed,\n        step: step,\n        finalize: finalize\n      });\n    },\n    count: function () {\n      if (iter.countable()) {\n        var d = new Deferred().fail(handleError);\n\n        try {\n          d.resolve(iter.count());\n        } catch (x) {\n          d.reject(x);\n        }\n\n        return d.promise();\n      }\n\n      return standardAggregate(\"count\");\n    },\n    sum: function (getter) {\n      if (getter) {\n        return selectProp(getter).sum();\n      }\n\n      return standardAggregate(\"sum\");\n    },\n    min: function (getter) {\n      if (getter) {\n        return selectProp(getter).min();\n      }\n\n      return standardAggregate(\"min\");\n    },\n    max: function (getter) {\n      if (getter) {\n        return selectProp(getter).max();\n      }\n\n      return standardAggregate(\"max\");\n    },\n    avg: function (getter) {\n      if (getter) {\n        return selectProp(getter).avg();\n      }\n\n      return standardAggregate(\"avg\");\n    }\n  };\n};\n\nexport default arrayQueryImpl;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/data/array_query.js"],"names":["Class","isFunction","isDefined","each","map","compileGetter","toComparable","Deferred","errors","handleError","handleDataError","aggregators","isGroupCriterion","isUnaryOperation","normalizeBinaryCriterion","isConjunctiveOperator","isConjunctiveOperatorChecker","Iterator","inherit","toArray","result","reset","next","push","current","countable","ArrayIterator","ctor","array","index","length","slice","count","WrappedIterator","iter","MapIterator","mapper","callBase","hasNext","defaultCompare","xValue","yValue","SortIterator","getter","desc","compare","_wrap","rules","thenBy","sortedIter","concat","_ensureSorted","that","sort","x","y","_compare","_unwrap","record","value","wrappedItem","xIndex","yIndex","i","rulesCount","rule","compareResult","compileCriteria","toString","compileEquals","negate","obj","crit","ops","isConjunctiveNextOperator","Array","isArray","Error","d","op","criteria","operatorFn","toLowerCase","a","b","indexOf","getterValue","searchValue","lastIndexOf","FilterIterator","GroupIterator","_ensureGrouped","groupedIter","hash","keys","key","items","SelectIterator","SliceIterator","skip","take","Math","max","pos","min","arrayQueryImpl","queryOptions","error","handler","errorHandler","aggregateCore","aggregator","fail","seed","step","finalize","NaN","accumulator","resolve","reject","promise","standardAggregate","name","select","call","arguments","chainQuery","selectProp","enumerate","sortBy","filter","Number","MAX_VALUE","groupBy","aggregate","sum","avg"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SACIC,UADJ,EAEIC,SAFJ,QAGO,oBAHP;AAIA,SACIC,IADJ,EAEIC,GAFJ,QAGO,wBAHP;AAIA,SACIC,aADJ,EAEIC,YAFJ,QAGO,oBAHP;AAIA,SACIC,QADJ,QAEO,wBAFP;AAGA,SACIC,MADJ,EAEIC,WAAW,IAAIC,eAFnB,QAGO,UAHP;AAIA,SACIC,WADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,wBAJJ,EAKIC,qBAAqB,IAAIC,4BAL7B,QAMO,SANP;AAOA,IAAIC,QAAQ,GAAGjB,KAAK,CAACkB,OAAN,CAAc;AACzBC,EAAAA,OAAO,EAAE,YAAW;AAChB,QAAIC,MAAM,GAAG,EAAb;AACA,SAAKC,KAAL;;AACA,WAAO,KAAKC,IAAL,EAAP,EAAoB;AAChBF,MAAAA,MAAM,CAACG,IAAP,CAAY,KAAKC,OAAL,EAAZ;AACH;;AACD,WAAOJ,MAAP;AACH,GARwB;AASzBK,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAP;AACH;AAXwB,CAAd,CAAf;AAaA,IAAIC,aAAa,GAAGT,QAAQ,CAACC,OAAT,CAAiB;AACjCS,EAAAA,IAAI,EAAE,UAASC,KAAT,EAAgB;AAClB,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,CAAC,CAAd;AACH,GAJgC;AAKjCP,EAAAA,IAAI,EAAE,YAAW;AACb,QAAI,KAAKO,KAAL,GAAa,CAAb,GAAiB,KAAKD,KAAL,CAAWE,MAAhC,EAAwC;AACpC,WAAKD,KAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAXgC;AAYjCL,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,KAAKI,KAAL,CAAW,KAAKC,KAAhB,CAAP;AACH,GAdgC;AAejCR,EAAAA,KAAK,EAAE,YAAW;AACd,SAAKQ,KAAL,GAAa,CAAC,CAAd;AACH,GAjBgC;AAkBjCV,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,KAAKS,KAAL,CAAWG,KAAX,CAAiB,CAAjB,CAAP;AACH,GApBgC;AAqBjCN,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,IAAP;AACH,GAvBgC;AAwBjCO,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAKJ,KAAL,CAAWE,MAAlB;AACH;AA1BgC,CAAjB,CAApB;AA4BA,IAAIG,eAAe,GAAGhB,QAAQ,CAACC,OAAT,CAAiB;AACnCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAe;AACjB,SAAKA,IAAL,GAAYA,IAAZ;AACH,GAHkC;AAInCZ,EAAAA,IAAI,EAAE,YAAW;AACb,WAAO,KAAKY,IAAL,CAAUZ,IAAV,EAAP;AACH,GANkC;AAOnCE,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,KAAKU,IAAL,CAAUV,OAAV,EAAP;AACH,GATkC;AAUnCH,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAKa,IAAL,CAAUb,KAAV,EAAP;AACH;AAZkC,CAAjB,CAAtB;AAcA,IAAIc,WAAW,GAAGF,eAAe,CAACf,OAAhB,CAAwB;AACtCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAeE,MAAf,EAAuB;AACzB,SAAKC,QAAL,CAAcH,IAAd;AACA,SAAKL,KAAL,GAAa,CAAC,CAAd;AACA,SAAKO,MAAL,GAAcA,MAAd;AACH,GALqC;AAMtCZ,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,KAAKY,MAAL,CAAY,KAAKC,QAAL,EAAZ,EAA6B,KAAKR,KAAlC,CAAP;AACH,GARqC;AAStCP,EAAAA,IAAI,EAAE,YAAW;AACb,QAAIgB,OAAO,GAAG,KAAKD,QAAL,EAAd;;AACA,QAAIC,OAAJ,EAAa;AACT,WAAKT,KAAL;AACH;;AACD,WAAOS,OAAP;AACH;AAfqC,CAAxB,CAAlB;;AAiBA,IAAIC,cAAc,GAAG,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AAC1CD,EAAAA,MAAM,GAAGlC,YAAY,CAACkC,MAAD,CAArB;AACAC,EAAAA,MAAM,GAAGnC,YAAY,CAACmC,MAAD,CAArB;;AACA,MAAI,SAASD,MAAT,IAAmB,SAASC,MAAhC,EAAwC;AACpC,WAAO,CAAC,CAAR;AACH;;AACD,MAAI,SAASD,MAAT,IAAmB,SAASC,MAAhC,EAAwC;AACpC,WAAO,CAAP;AACH;;AACD,MAAI,KAAK,CAAL,KAAWD,MAAX,IAAqB,KAAK,CAAL,KAAWC,MAApC,EAA4C;AACxC,WAAO,CAAP;AACH;;AACD,MAAI,KAAK,CAAL,KAAWD,MAAX,IAAqB,KAAK,CAAL,KAAWC,MAApC,EAA4C;AACxC,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,MAAM,GAAGC,MAAb,EAAqB;AACjB,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,MAAM,GAAGC,MAAb,EAAqB;AACjB,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH,CAtBD;;AAuBA,IAAIC,YAAY,GAAGzB,QAAQ,CAACC,OAAT,CAAiB;AAChCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAeS,MAAf,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsC;AACxC,QAAI,EAAEX,IAAI,YAAYC,WAAlB,CAAJ,EAAoC;AAChCD,MAAAA,IAAI,GAAG,IAAIC,WAAJ,CAAgBD,IAAhB,EAAsB,KAAKY,KAA3B,CAAP;AACH;;AACD,SAAKZ,IAAL,GAAYA,IAAZ;AACA,SAAKa,KAAL,GAAa,CAAC;AACVJ,MAAAA,MAAM,EAAEA,MADE;AAEVC,MAAAA,IAAI,EAAEA,IAFI;AAGVC,MAAAA,OAAO,EAAEA;AAHC,KAAD,CAAb;AAKH,GAX+B;AAYhCG,EAAAA,MAAM,EAAE,UAASL,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;AACpC,QAAIzB,MAAM,GAAG,IAAIsB,YAAJ,CAAiB,KAAKO,UAAL,IAAmB,KAAKf,IAAzC,EAA+CS,MAA/C,EAAuDC,IAAvD,EAA6DC,OAA7D,CAAb;;AACA,QAAI,CAAC,KAAKI,UAAV,EAAsB;AAClB7B,MAAAA,MAAM,CAAC2B,KAAP,GAAe,KAAKA,KAAL,CAAWG,MAAX,CAAkB9B,MAAM,CAAC2B,KAAzB,CAAf;AACH;;AACD,WAAO3B,MAAP;AACH,GAlB+B;AAmBhCE,EAAAA,IAAI,EAAE,YAAW;AACb,SAAK6B,aAAL;;AACA,WAAO,KAAKF,UAAL,CAAgB3B,IAAhB,EAAP;AACH,GAtB+B;AAuBhCE,EAAAA,OAAO,EAAE,YAAW;AAChB,SAAK2B,aAAL;;AACA,WAAO,KAAKF,UAAL,CAAgBzB,OAAhB,EAAP;AACH,GA1B+B;AA2BhCH,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAK4B,UAAZ;AACH,GA7B+B;AA8BhCxB,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAKwB,UAAL,IAAmB,KAAKf,IAAL,CAAUT,SAAV,EAA1B;AACH,GAhC+B;AAiChCO,EAAAA,KAAK,EAAE,YAAW;AACd,QAAI,KAAKiB,UAAT,EAAqB;AACjB,aAAO,KAAKA,UAAL,CAAgBjB,KAAhB,EAAP;AACH;;AACD,WAAO,KAAKE,IAAL,CAAUF,KAAV,EAAP;AACH,GAtC+B;AAuChCmB,EAAAA,aAAa,EAAE,YAAW;AACtB,QAAIC,IAAI,GAAG,IAAX;;AACA,QAAIA,IAAI,CAACH,UAAT,EAAqB;AACjB;AACH;;AACD9C,IAAAA,IAAI,CAACiD,IAAI,CAACL,KAAN,EAAc,YAAW;AACzB,WAAKJ,MAAL,GAActC,aAAa,CAAC,KAAKsC,MAAN,CAA3B;AACH,KAFG,CAAJ;AAGAS,IAAAA,IAAI,CAACH,UAAL,GAAkB,IAAId,WAAJ,CAAgB,IAAIT,aAAJ,CAAkB,KAAKQ,IAAL,CAAUf,OAAV,GAAoBkC,IAApB,CAA0B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACzF,aAAOH,IAAI,CAACI,QAAL,CAAcF,CAAd,EAAiBC,CAAjB,CAAP;AACH,KAFmD,CAAlB,CAAhB,EAEZH,IAAI,CAACK,OAFO,CAAlB;AAGH,GAlD+B;AAmDhCX,EAAAA,KAAK,EAAE,UAASY,MAAT,EAAiB7B,KAAjB,EAAwB;AAC3B,WAAO;AACHA,MAAAA,KAAK,EAAEA,KADJ;AAEH8B,MAAAA,KAAK,EAAED;AAFJ,KAAP;AAIH,GAxD+B;AAyDhCD,EAAAA,OAAO,EAAE,UAASG,WAAT,EAAsB;AAC3B,WAAOA,WAAW,CAACD,KAAnB;AACH,GA3D+B;AA4DhCH,EAAAA,QAAQ,EAAE,UAASF,CAAT,EAAYC,CAAZ,EAAe;AACrB,QAAIM,MAAM,GAAGP,CAAC,CAACzB,KAAf;AACA,QAAIiC,MAAM,GAAGP,CAAC,CAAC1B,KAAf;AACAyB,IAAAA,CAAC,GAAGA,CAAC,CAACK,KAAN;AACAJ,IAAAA,CAAC,GAAGA,CAAC,CAACI,KAAN;;AACA,QAAIL,CAAC,KAAKC,CAAV,EAAa;AACT,aAAOM,MAAM,GAAGC,MAAhB;AACH;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,UAAU,GAAG,KAAKjB,KAAL,CAAWjB,MAAxC,EAAgDiC,CAAC,GAAGC,UAApD,EAAgED,CAAC,EAAjE,EAAqE;AACjE,UAAIE,IAAI,GAAG,KAAKlB,KAAL,CAAWgB,CAAX,CAAX;AACA,UAAIvB,MAAM,GAAGyB,IAAI,CAACtB,MAAL,CAAYW,CAAZ,CAAb;AACA,UAAIb,MAAM,GAAGwB,IAAI,CAACtB,MAAL,CAAYY,CAAZ,CAAb;AACA,UAAIV,OAAO,GAAGoB,IAAI,CAACpB,OAAL,IAAgBN,cAA9B;AACA,UAAI2B,aAAa,GAAGrB,OAAO,CAACL,MAAD,EAASC,MAAT,CAA3B;;AACA,UAAIyB,aAAJ,EAAmB;AACf,eAAOD,IAAI,CAACrB,IAAL,GAAY,CAACsB,aAAb,GAA6BA,aAApC;AACH;AACJ;;AACD,WAAOL,MAAM,GAAGC,MAAhB;AACH;AA/E+B,CAAjB,CAAnB;;AAiFA,IAAIK,eAAe,GAAG,YAAW;AAC7B,MAAIC,QAAQ,GAAG,UAAST,KAAT,EAAgB;AAC3B,WAAOzD,SAAS,CAACyD,KAAD,CAAT,GAAmBA,KAAK,CAACS,QAAN,EAAnB,GAAsC,EAA7C;AACH,GAFD;;AAIA,WAASC,aAAT,CAAuB1B,MAAvB,EAA+BgB,KAA/B,EAAsCW,MAAtC,EAA8C;AAC1C,WAAO,UAASC,GAAT,EAAc;AACjBA,MAAAA,GAAG,GAAGjE,YAAY,CAACqC,MAAM,CAAC4B,GAAD,CAAP,CAAlB;AACA,UAAInD,MAAM,GAAG,UAASuC,KAAT,EAAgB;AACzB,eAAO,OAAOA,KAAP,IAAgB,MAAMA,KAAtB,IAA+B,UAAUA,KAAhD;AACH,OAFY,CAEXA,KAFW,IAEFY,GAAG,KAAKZ,KAFN,GAEcY,GAAG,IAAIZ,KAFlC;;AAGA,UAAIW,MAAJ,EAAY;AACRlD,QAAAA,MAAM,GAAG,CAACA,MAAV;AACH;;AACD,aAAOA,MAAP;AACH,KATD;AAUH;;AACD,SAAO,UAASoD,IAAT,EAAe;AAClB,QAAIvE,UAAU,CAACuE,IAAD,CAAd,EAAsB;AAClB,aAAOA,IAAP;AACH;;AACD,QAAI5D,gBAAgB,CAAC4D,IAAD,CAApB,EAA4B;AACxB,aAAO,UAASA,IAAT,EAAe;AAClB,YAAIC,GAAG,GAAG,EAAV;AACA,YAAI1D,qBAAqB,GAAG,KAA5B;AACA,YAAI2D,yBAAyB,GAAG,KAAhC;AACAvE,QAAAA,IAAI,CAACqE,IAAD,EAAQ,YAAW;AACnB,cAAIG,KAAK,CAACC,OAAN,CAAc,IAAd,KAAuB3E,UAAU,CAAC,IAAD,CAArC,EAA6C;AACzC,gBAAIwE,GAAG,CAAC3C,MAAJ,GAAa,CAAb,IAAkBf,qBAAqB,KAAK2D,yBAAhD,EAA2E;AACvE,oBAAM,IAAIlE,MAAM,CAACqE,KAAX,CAAiB,OAAjB,CAAN;AACH;;AACDJ,YAAAA,GAAG,CAAClD,IAAJ,CAAS4C,eAAe,CAAC,IAAD,CAAxB;AACApD,YAAAA,qBAAqB,GAAG2D,yBAAxB;AACAA,YAAAA,yBAAyB,GAAG,IAA5B;AACH,WAPD,MAOO;AACHA,YAAAA,yBAAyB,GAAG1D,4BAA4B,CAAC,IAAD,CAAxD;AACH;AACJ,SAXG,CAAJ;AAYA,eAAO,UAAS8D,CAAT,EAAY;AACf,cAAI1D,MAAM,GAAGL,qBAAb;;AACA,eAAK,IAAIgD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,GAAG,CAAC3C,MAAxB,EAAgCiC,CAAC,EAAjC,EAAqC;AACjC,gBAAIU,GAAG,CAACV,CAAD,CAAH,CAAOe,CAAP,MAAc/D,qBAAlB,EAAyC;AACrCK,cAAAA,MAAM,GAAG,CAACL,qBAAV;AACA;AACH;AACJ;;AACD,iBAAOK,MAAP;AACH,SATD;AAUH,OA1BM,CA0BLoD,IA1BK,CAAP;AA2BH;;AACD,QAAI3D,gBAAgB,CAAC2D,IAAD,CAApB,EAA4B;AACxB,aAAO,UAASA,IAAT,EAAe;AAClB,YAAIO,EAAE,GAAGP,IAAI,CAAC,CAAD,CAAb;AACA,YAAIQ,QAAQ,GAAGb,eAAe,CAACK,IAAI,CAAC,CAAD,CAAL,CAA9B;;AACA,YAAI,QAAQO,EAAZ,EAAgB;AACZ,iBAAO,UAASR,GAAT,EAAc;AACjB,mBAAO,CAACS,QAAQ,CAACT,GAAD,CAAhB;AACH,WAFD;AAGH;;AACD,cAAM/D,MAAM,CAACqE,KAAP,CAAa,OAAb,EAAsBE,EAAtB,CAAN;AACH,OATM,CASLP,IATK,CAAP;AAUH;;AACD,WAAO,UAASA,IAAT,EAAe;AAClBA,MAAAA,IAAI,GAAG1D,wBAAwB,CAAC0D,IAAD,CAA/B;AACA,UAAI7B,MAAM,GAAGtC,aAAa,CAACmE,IAAI,CAAC,CAAD,CAAL,CAA1B;AACA,UAAIO,EAAE,GAAGP,IAAI,CAAC,CAAD,CAAb;AACA,UAAIb,KAAK,GAAGa,IAAI,CAAC,CAAD,CAAhB;AACAb,MAAAA,KAAK,GAAGrD,YAAY,CAACqD,KAAD,CAApB;;AACA,UAAId,OAAO,GAAG,CAAC0B,GAAD,EAAMU,UAAN,KAAqB;AAC/BV,QAAAA,GAAG,GAAGjE,YAAY,CAACqC,MAAM,CAAC4B,GAAD,CAAP,CAAlB;AACA,eAAO,CAAC,QAAQZ,KAAR,IAAiB,QAAQY,GAA1B,KAAkCZ,KAAK,KAAKY,GAA5C,GAAkD,KAAlD,GAA0DU,UAAU,CAACV,GAAD,EAAMZ,KAAN,CAA3E;AACH,OAHD;;AAIA,cAAQoB,EAAE,CAACG,WAAH,EAAR;AACI,aAAK,GAAL;AACI,iBAAOb,aAAa,CAAC1B,MAAD,EAASgB,KAAT,CAApB;;AACJ,aAAK,IAAL;AACI,iBAAOU,aAAa,CAAC1B,MAAD,EAASgB,KAAT,EAAgB,IAAhB,CAApB;;AACJ,aAAK,GAAL;AACI,iBAAOY,GAAG,IAAI1B,OAAO,CAAC0B,GAAD,EAAM,CAACY,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAApB,CAArB;;AACJ,aAAK,GAAL;AACI,iBAAOb,GAAG,IAAI1B,OAAO,CAAC0B,GAAD,EAAM,CAACY,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAApB,CAArB;;AACJ,aAAK,IAAL;AACI,iBAAOb,GAAG,IAAI1B,OAAO,CAAC0B,GAAD,EAAM,CAACY,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CAArB,CAArB;;AACJ,aAAK,IAAL;AACI,iBAAOb,GAAG,IAAI1B,OAAO,CAAC0B,GAAD,EAAM,CAACY,CAAD,EAAIC,CAAJ,KAAUD,CAAC,IAAIC,CAArB,CAArB;;AACJ,aAAK,YAAL;AACI,iBAAO,UAASb,GAAT,EAAc;AACjB,mBAAO,MAAMjE,YAAY,CAAC8D,QAAQ,CAACzB,MAAM,CAAC4B,GAAD,CAAP,CAAT,CAAZ,CAAoCc,OAApC,CAA4C1B,KAA5C,CAAb;AACH,WAFD;;AAGJ,aAAK,UAAL;AACI,iBAAO,UAASY,GAAT,EAAc;AACjB,gBAAIe,WAAW,GAAGhF,YAAY,CAAC8D,QAAQ,CAACzB,MAAM,CAAC4B,GAAD,CAAP,CAAT,CAA9B;AACA,gBAAIgB,WAAW,GAAGnB,QAAQ,CAACT,KAAD,CAA1B;;AACA,gBAAI2B,WAAW,CAACxD,MAAZ,GAAqByD,WAAW,CAACzD,MAArC,EAA6C;AACzC,qBAAO,KAAP;AACH;;AACD,gBAAID,KAAK,GAAGyD,WAAW,CAACE,WAAZ,CAAwB7B,KAAxB,CAAZ;AACA,mBAAO,CAAC,CAAD,KAAO9B,KAAP,IAAgBA,KAAK,KAAKyD,WAAW,CAACxD,MAAZ,GAAqB6B,KAAK,CAAC7B,MAA5D;AACH,WARD;;AASJ,aAAK,UAAL;AACI,iBAAO,UAASyC,GAAT,EAAc;AACjB,mBAAOjE,YAAY,CAAC8D,QAAQ,CAACzB,MAAM,CAAC4B,GAAD,CAAP,CAAT,CAAZ,CAAoCc,OAApC,CAA4C1B,KAA5C,IAAqD,CAAC,CAA7D;AACH,WAFD;;AAGJ,aAAK,aAAL;AACI,iBAAO,UAASY,GAAT,EAAc;AACjB,mBAAO,CAAC,CAAD,KAAOjE,YAAY,CAAC8D,QAAQ,CAACzB,MAAM,CAAC4B,GAAD,CAAP,CAAT,CAAZ,CAAoCc,OAApC,CAA4C1B,KAA5C,CAAd;AACH,WAFD;AAhCR;;AAoCA,YAAMnD,MAAM,CAACqE,KAAP,CAAa,OAAb,EAAsBE,EAAtB,CAAN;AACH,KA/CM,CA+CLP,IA/CK,CAAP;AAgDH,GA7FD;AA8FH,CA/GqB,EAAtB;;AAgHA,IAAIiB,cAAc,GAAGxD,eAAe,CAACf,OAAhB,CAAwB;AACzCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAe8C,QAAf,EAAyB;AAC3B,SAAK3C,QAAL,CAAcH,IAAd;AACA,SAAK8C,QAAL,GAAgBb,eAAe,CAACa,QAAD,CAA/B;AACH,GAJwC;AAKzC1D,EAAAA,IAAI,EAAE,YAAW;AACb,WAAO,KAAKY,IAAL,CAAUZ,IAAV,EAAP,EAAyB;AACrB,UAAI,KAAK0D,QAAL,CAAc,KAAKxD,OAAL,EAAd,CAAJ,EAAmC;AAC/B,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;AAZwC,CAAxB,CAArB;AAcA,IAAIkE,aAAa,GAAGzE,QAAQ,CAACC,OAAT,CAAiB;AACjCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAeS,MAAf,EAAuB;AACzB,SAAKT,IAAL,GAAYA,IAAZ;AACA,SAAKS,MAAL,GAAcA,MAAd;AACH,GAJgC;AAKjCrB,EAAAA,IAAI,EAAE,YAAW;AACb,SAAKqE,cAAL;;AACA,WAAO,KAAKC,WAAL,CAAiBtE,IAAjB,EAAP;AACH,GARgC;AASjCE,EAAAA,OAAO,EAAE,YAAW;AAChB,SAAKmE,cAAL;;AACA,WAAO,KAAKC,WAAL,CAAiBpE,OAAjB,EAAP;AACH,GAZgC;AAajCH,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAKuE,WAAZ;AACH,GAfgC;AAgBjCnE,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,CAAC,CAAC,KAAKmE,WAAd;AACH,GAlBgC;AAmBjC5D,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAK4D,WAAL,CAAiB5D,KAAjB,EAAP;AACH,GArBgC;AAsBjC2D,EAAAA,cAAc,EAAE,YAAW;AACvB,QAAI,KAAKC,WAAT,EAAsB;AAClB;AACH;;AACD,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAI5D,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIS,MAAM,GAAGtC,aAAa,CAAC,KAAKsC,MAAN,CAA1B;AACAT,IAAAA,IAAI,CAACb,KAAL;;AACA,WAAOa,IAAI,CAACZ,IAAL,EAAP,EAAoB;AAChB,UAAIE,OAAO,GAAGU,IAAI,CAACV,OAAL,EAAd;AACA,UAAIuE,GAAG,GAAGpD,MAAM,CAACnB,OAAD,CAAhB;;AACA,UAAIuE,GAAG,IAAIF,IAAX,EAAiB;AACbA,QAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUxE,IAAV,CAAeC,OAAf;AACH,OAFD,MAEO;AACHqE,QAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,CAACvE,OAAD,CAAZ;AACAsE,QAAAA,IAAI,CAACvE,IAAL,CAAUwE,GAAV;AACH;AACJ;;AACD,SAAKH,WAAL,GAAmB,IAAIlE,aAAJ,CAAkBtB,GAAG,CAAC0F,IAAD,EAAQ,UAASC,GAAT,EAAc;AAC1D,aAAO;AACHA,QAAAA,GAAG,EAAEA,GADF;AAEHC,QAAAA,KAAK,EAAEH,IAAI,CAACE,GAAD;AAFR,OAAP;AAIH,KALuC,CAArB,CAAnB;AAMH;AA/CgC,CAAjB,CAApB;AAiDA,IAAIE,cAAc,GAAGhE,eAAe,CAACf,OAAhB,CAAwB;AACzCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAeS,MAAf,EAAuB;AACzB,SAAKN,QAAL,CAAcH,IAAd;AACA,SAAKS,MAAL,GAActC,aAAa,CAACsC,MAAD,CAA3B;AACH,GAJwC;AAKzCnB,EAAAA,OAAO,EAAE,YAAW;AAChB,WAAO,KAAKmB,MAAL,CAAY,KAAKN,QAAL,EAAZ,CAAP;AACH,GAPwC;AAQzCZ,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAKS,IAAL,CAAUT,SAAV,EAAP;AACH,GAVwC;AAWzCO,EAAAA,KAAK,EAAE,YAAW;AACd,WAAO,KAAKE,IAAL,CAAUF,KAAV,EAAP;AACH;AAbwC,CAAxB,CAArB;AAeA,IAAIkE,aAAa,GAAGjE,eAAe,CAACf,OAAhB,CAAwB;AACxCS,EAAAA,IAAI,EAAE,UAASO,IAAT,EAAeiE,IAAf,EAAqBC,IAArB,EAA2B;AAC7B,SAAK/D,QAAL,CAAcH,IAAd;AACA,SAAKiE,IAAL,GAAYE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAZ,CAAZ;AACA,SAAKC,IAAL,GAAYC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,IAAZ,CAAZ;AACA,SAAKG,GAAL,GAAW,CAAX;AACH,GANuC;AAOxCjF,EAAAA,IAAI,EAAE,YAAW;AACb,QAAI,KAAKiF,GAAL,IAAY,KAAKJ,IAAL,GAAY,KAAKC,IAAjC,EAAuC;AACnC,aAAO,KAAP;AACH;;AACD,WAAO,KAAKG,GAAL,GAAW,KAAKJ,IAAhB,IAAwB,KAAKjE,IAAL,CAAUZ,IAAV,EAA/B,EAAiD;AAC7C,WAAKiF,GAAL;AACH;;AACD,SAAKA,GAAL;AACA,WAAO,KAAKrE,IAAL,CAAUZ,IAAV,EAAP;AACH,GAhBuC;AAiBxCD,EAAAA,KAAK,EAAE,YAAW;AACd,SAAKgB,QAAL;AACA,SAAKkE,GAAL,GAAW,CAAX;AACH,GApBuC;AAqBxC9E,EAAAA,SAAS,EAAE,YAAW;AAClB,WAAO,KAAKS,IAAL,CAAUT,SAAV,EAAP;AACH,GAvBuC;AAwBxCO,EAAAA,KAAK,EAAE,YAAW;AACd,WAAOqE,IAAI,CAACG,GAAL,CAAS,KAAKtE,IAAL,CAAUF,KAAV,KAAoB,KAAKmE,IAAlC,EAAwC,KAAKC,IAA7C,CAAP;AACH;AA1BuC,CAAxB,CAApB;;AA4BA,IAAIK,cAAc,GAAG,SAASA,cAAT,CAAwBvE,IAAxB,EAA8BwE,YAA9B,EAA4C;AAC7DA,EAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B;;AACA,MAAI,EAAExE,IAAI,YAAYjB,QAAlB,CAAJ,EAAiC;AAC7BiB,IAAAA,IAAI,GAAG,IAAIR,aAAJ,CAAkBQ,IAAlB,CAAP;AACH;;AACD,MAAIzB,WAAW,GAAG,UAASkG,KAAT,EAAgB;AAC9B,QAAIC,OAAO,GAAGF,YAAY,CAACG,YAA3B;;AACA,QAAID,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACD,KAAD,CAAP;AACH;;AACDjG,IAAAA,eAAe,CAACiG,KAAD,CAAf;AACH,GAND;;AAOA,MAAIG,aAAa,GAAG,UAASC,UAAT,EAAqB;AACrC,QAAIjC,CAAC,GAAI,IAAIvE,QAAJ,EAAD,CAAeyG,IAAf,CAAoBvG,WAApB,CAAR;AACA,QAAIwG,IAAJ;AACA,QAAIC,IAAI,GAAGH,UAAU,CAACG,IAAtB;AACA,QAAIC,QAAQ,GAAGJ,UAAU,CAACI,QAA1B;;AACA,QAAI;AACAjF,MAAAA,IAAI,CAACb,KAAL;;AACA,UAAI,UAAU0F,UAAd,EAA0B;AACtBE,QAAAA,IAAI,GAAGF,UAAU,CAACE,IAAlB;AACH,OAFD,MAEO;AACHA,QAAAA,IAAI,GAAG/E,IAAI,CAACZ,IAAL,KAAcY,IAAI,CAACV,OAAL,EAAd,GAA+B4F,GAAtC;AACH;;AACD,UAAIC,WAAW,GAAGJ,IAAlB;;AACA,aAAO/E,IAAI,CAACZ,IAAL,EAAP,EAAoB;AAChB+F,QAAAA,WAAW,GAAGH,IAAI,CAACG,WAAD,EAAcnF,IAAI,CAACV,OAAL,EAAd,CAAlB;AACH;;AACDsD,MAAAA,CAAC,CAACwC,OAAF,CAAUH,QAAQ,GAAGA,QAAQ,CAACE,WAAD,CAAX,GAA2BA,WAA7C;AACH,KAZD,CAYE,OAAO/D,CAAP,EAAU;AACRwB,MAAAA,CAAC,CAACyC,MAAF,CAASjE,CAAT;AACH;;AACD,WAAOwB,CAAC,CAAC0C,OAAF,EAAP;AACH,GArBD;;AAsBA,MAAIC,iBAAiB,GAAG,UAASC,IAAT,EAAe;AACnC,WAAOZ,aAAa,CAACnG,WAAW,CAAC+G,IAAD,CAAZ,CAApB;AACH,GAFD;;AAGA,MAAIC,MAAM,GAAG,UAAShF,MAAT,EAAiB;AAC1B,QAAI,CAAC1C,UAAU,CAAC0C,MAAD,CAAX,IAAuB,CAACgC,KAAK,CAACC,OAAN,CAAcjC,MAAd,CAA5B,EAAmD;AAC/CA,MAAAA,MAAM,GAAG,GAAGZ,KAAH,CAAS6F,IAAT,CAAcC,SAAd,CAAT;AACH;;AACD,WAAOC,UAAU,CAAC,IAAI7B,cAAJ,CAAmB/D,IAAnB,EAAyBS,MAAzB,CAAD,CAAjB;AACH,GALD;;AAMA,MAAIoF,UAAU,GAAG,UAASL,IAAT,EAAe;AAC5B,WAAOC,MAAM,CAACtH,aAAa,CAACqH,IAAD,CAAd,CAAb;AACH,GAFD;;AAIA,WAASI,UAAT,CAAoB5F,IAApB,EAA0B;AACtB,WAAOuE,cAAc,CAACvE,IAAD,EAAOwE,YAAP,CAArB;AACH;;AACD,SAAO;AACHvF,IAAAA,OAAO,EAAE,YAAW;AAChB,aAAOe,IAAI,CAACf,OAAL,EAAP;AACH,KAHE;AAIH6G,IAAAA,SAAS,EAAE,YAAW;AAClB,UAAIlD,CAAC,GAAI,IAAIvE,QAAJ,EAAD,CAAeyG,IAAf,CAAoBvG,WAApB,CAAR;;AACA,UAAI;AACAqE,QAAAA,CAAC,CAACwC,OAAF,CAAUpF,IAAI,CAACf,OAAL,EAAV;AACH,OAFD,CAEE,OAAOmC,CAAP,EAAU;AACRwB,QAAAA,CAAC,CAACyC,MAAF,CAASjE,CAAT;AACH;;AACD,aAAOwB,CAAC,CAAC0C,OAAF,EAAP;AACH,KAZE;AAaHS,IAAAA,MAAM,EAAE,UAAStF,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;AACpC,aAAOiF,UAAU,CAAC,IAAIpF,YAAJ,CAAiBR,IAAjB,EAAuBS,MAAvB,EAA+BC,IAA/B,EAAqCC,OAArC,CAAD,CAAjB;AACH,KAfE;AAgBHG,IAAAA,MAAM,EAAE,UAASL,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;AACpC,UAAIX,IAAI,YAAYQ,YAApB,EAAkC;AAC9B,eAAOoF,UAAU,CAAC5F,IAAI,CAACc,MAAL,CAAYL,MAAZ,EAAoBC,IAApB,EAA0BC,OAA1B,CAAD,CAAjB;AACH;;AACD,YAAMrC,MAAM,CAACqE,KAAP,CAAa,OAAb,CAAN;AACH,KArBE;AAsBHqD,IAAAA,MAAM,EAAE,UAASlD,QAAT,EAAmB;AACvB,UAAI,CAACL,KAAK,CAACC,OAAN,CAAcI,QAAd,CAAL,EAA8B;AAC1BA,QAAAA,QAAQ,GAAG,GAAGjD,KAAH,CAAS6F,IAAT,CAAcC,SAAd,CAAX;AACH;;AACD,aAAOC,UAAU,CAAC,IAAIrC,cAAJ,CAAmBvD,IAAnB,EAAyB8C,QAAzB,CAAD,CAAjB;AACH,KA3BE;AA4BHjD,IAAAA,KAAK,EAAE,UAASoE,IAAT,EAAeC,IAAf,EAAqB;AACxB,UAAI,KAAK,CAAL,KAAWA,IAAf,EAAqB;AACjBA,QAAAA,IAAI,GAAG+B,MAAM,CAACC,SAAd;AACH;;AACD,aAAON,UAAU,CAAC,IAAI5B,aAAJ,CAAkBhE,IAAlB,EAAwBiE,IAAxB,EAA8BC,IAA9B,CAAD,CAAjB;AACH,KAjCE;AAkCHuB,IAAAA,MAAM,EAAEA,MAlCL;AAmCHU,IAAAA,OAAO,EAAE,UAAS1F,MAAT,EAAiB;AACtB,aAAOmF,UAAU,CAAC,IAAIpC,aAAJ,CAAkBxD,IAAlB,EAAwBS,MAAxB,CAAD,CAAjB;AACH,KArCE;AAsCH2F,IAAAA,SAAS,EAAE,UAASrB,IAAT,EAAeC,IAAf,EAAqBC,QAArB,EAA+B;AACtC,UAAIU,SAAS,CAAC/F,MAAV,GAAmB,CAAvB,EAA0B;AACtB,eAAOgF,aAAa,CAAC;AACjBI,UAAAA,IAAI,EAAEW,SAAS,CAAC,CAAD;AADE,SAAD,CAApB;AAGH;;AACD,aAAOf,aAAa,CAAC;AACjBG,QAAAA,IAAI,EAAEA,IADW;AAEjBC,QAAAA,IAAI,EAAEA,IAFW;AAGjBC,QAAAA,QAAQ,EAAEA;AAHO,OAAD,CAApB;AAKH,KAjDE;AAkDHnF,IAAAA,KAAK,EAAE,YAAW;AACd,UAAIE,IAAI,CAACT,SAAL,EAAJ,EAAsB;AAClB,YAAIqD,CAAC,GAAI,IAAIvE,QAAJ,EAAD,CAAeyG,IAAf,CAAoBvG,WAApB,CAAR;;AACA,YAAI;AACAqE,UAAAA,CAAC,CAACwC,OAAF,CAAUpF,IAAI,CAACF,KAAL,EAAV;AACH,SAFD,CAEE,OAAOsB,CAAP,EAAU;AACRwB,UAAAA,CAAC,CAACyC,MAAF,CAASjE,CAAT;AACH;;AACD,eAAOwB,CAAC,CAAC0C,OAAF,EAAP;AACH;;AACD,aAAOC,iBAAiB,CAAC,OAAD,CAAxB;AACH,KA7DE;AA8DHc,IAAAA,GAAG,EAAE,UAAS5F,MAAT,EAAiB;AAClB,UAAIA,MAAJ,EAAY;AACR,eAAOoF,UAAU,CAACpF,MAAD,CAAV,CAAmB4F,GAAnB,EAAP;AACH;;AACD,aAAOd,iBAAiB,CAAC,KAAD,CAAxB;AACH,KAnEE;AAoEHjB,IAAAA,GAAG,EAAE,UAAS7D,MAAT,EAAiB;AAClB,UAAIA,MAAJ,EAAY;AACR,eAAOoF,UAAU,CAACpF,MAAD,CAAV,CAAmB6D,GAAnB,EAAP;AACH;;AACD,aAAOiB,iBAAiB,CAAC,KAAD,CAAxB;AACH,KAzEE;AA0EHnB,IAAAA,GAAG,EAAE,UAAS3D,MAAT,EAAiB;AAClB,UAAIA,MAAJ,EAAY;AACR,eAAOoF,UAAU,CAACpF,MAAD,CAAV,CAAmB2D,GAAnB,EAAP;AACH;;AACD,aAAOmB,iBAAiB,CAAC,KAAD,CAAxB;AACH,KA/EE;AAgFHe,IAAAA,GAAG,EAAE,UAAS7F,MAAT,EAAiB;AAClB,UAAIA,MAAJ,EAAY;AACR,eAAOoF,UAAU,CAACpF,MAAD,CAAV,CAAmB6F,GAAnB,EAAP;AACH;;AACD,aAAOf,iBAAiB,CAAC,KAAD,CAAxB;AACH;AArFE,GAAP;AAuFH,CAzID;;AA0IA,eAAehB,cAAf","sourcesContent":["/**\r\n * DevExtreme (esm/data/array_query.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../core/class\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    compileGetter,\r\n    toComparable\r\n} from \"../core/utils/data\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    errors,\r\n    handleError as handleDataError\r\n} from \"./errors\";\r\nimport {\r\n    aggregators,\r\n    isGroupCriterion,\r\n    isUnaryOperation,\r\n    normalizeBinaryCriterion,\r\n    isConjunctiveOperator as isConjunctiveOperatorChecker\r\n} from \"./utils\";\r\nvar Iterator = Class.inherit({\r\n    toArray: function() {\r\n        var result = [];\r\n        this.reset();\r\n        while (this.next()) {\r\n            result.push(this.current())\r\n        }\r\n        return result\r\n    },\r\n    countable: function() {\r\n        return false\r\n    }\r\n});\r\nvar ArrayIterator = Iterator.inherit({\r\n    ctor: function(array) {\r\n        this.array = array;\r\n        this.index = -1\r\n    },\r\n    next: function() {\r\n        if (this.index + 1 < this.array.length) {\r\n            this.index++;\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    current: function() {\r\n        return this.array[this.index]\r\n    },\r\n    reset: function() {\r\n        this.index = -1\r\n    },\r\n    toArray: function() {\r\n        return this.array.slice(0)\r\n    },\r\n    countable: function() {\r\n        return true\r\n    },\r\n    count: function() {\r\n        return this.array.length\r\n    }\r\n});\r\nvar WrappedIterator = Iterator.inherit({\r\n    ctor: function(iter) {\r\n        this.iter = iter\r\n    },\r\n    next: function() {\r\n        return this.iter.next()\r\n    },\r\n    current: function() {\r\n        return this.iter.current()\r\n    },\r\n    reset: function() {\r\n        return this.iter.reset()\r\n    }\r\n});\r\nvar MapIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, mapper) {\r\n        this.callBase(iter);\r\n        this.index = -1;\r\n        this.mapper = mapper\r\n    },\r\n    current: function() {\r\n        return this.mapper(this.callBase(), this.index)\r\n    },\r\n    next: function() {\r\n        var hasNext = this.callBase();\r\n        if (hasNext) {\r\n            this.index++\r\n        }\r\n        return hasNext\r\n    }\r\n});\r\nvar defaultCompare = function(xValue, yValue) {\r\n    xValue = toComparable(xValue);\r\n    yValue = toComparable(yValue);\r\n    if (null === xValue && null !== yValue) {\r\n        return -1\r\n    }\r\n    if (null !== xValue && null === yValue) {\r\n        return 1\r\n    }\r\n    if (void 0 === xValue && void 0 !== yValue) {\r\n        return 1\r\n    }\r\n    if (void 0 !== xValue && void 0 === yValue) {\r\n        return -1\r\n    }\r\n    if (xValue < yValue) {\r\n        return -1\r\n    }\r\n    if (xValue > yValue) {\r\n        return 1\r\n    }\r\n    return 0\r\n};\r\nvar SortIterator = Iterator.inherit({\r\n    ctor: function(iter, getter, desc, compare) {\r\n        if (!(iter instanceof MapIterator)) {\r\n            iter = new MapIterator(iter, this._wrap)\r\n        }\r\n        this.iter = iter;\r\n        this.rules = [{\r\n            getter: getter,\r\n            desc: desc,\r\n            compare: compare\r\n        }]\r\n    },\r\n    thenBy: function(getter, desc, compare) {\r\n        var result = new SortIterator(this.sortedIter || this.iter, getter, desc, compare);\r\n        if (!this.sortedIter) {\r\n            result.rules = this.rules.concat(result.rules)\r\n        }\r\n        return result\r\n    },\r\n    next: function() {\r\n        this._ensureSorted();\r\n        return this.sortedIter.next()\r\n    },\r\n    current: function() {\r\n        this._ensureSorted();\r\n        return this.sortedIter.current()\r\n    },\r\n    reset: function() {\r\n        delete this.sortedIter\r\n    },\r\n    countable: function() {\r\n        return this.sortedIter || this.iter.countable()\r\n    },\r\n    count: function() {\r\n        if (this.sortedIter) {\r\n            return this.sortedIter.count()\r\n        }\r\n        return this.iter.count()\r\n    },\r\n    _ensureSorted: function() {\r\n        var that = this;\r\n        if (that.sortedIter) {\r\n            return\r\n        }\r\n        each(that.rules, (function() {\r\n            this.getter = compileGetter(this.getter)\r\n        }));\r\n        that.sortedIter = new MapIterator(new ArrayIterator(this.iter.toArray().sort((function(x, y) {\r\n            return that._compare(x, y)\r\n        }))), that._unwrap)\r\n    },\r\n    _wrap: function(record, index) {\r\n        return {\r\n            index: index,\r\n            value: record\r\n        }\r\n    },\r\n    _unwrap: function(wrappedItem) {\r\n        return wrappedItem.value\r\n    },\r\n    _compare: function(x, y) {\r\n        var xIndex = x.index;\r\n        var yIndex = y.index;\r\n        x = x.value;\r\n        y = y.value;\r\n        if (x === y) {\r\n            return xIndex - yIndex\r\n        }\r\n        for (var i = 0, rulesCount = this.rules.length; i < rulesCount; i++) {\r\n            var rule = this.rules[i];\r\n            var xValue = rule.getter(x);\r\n            var yValue = rule.getter(y);\r\n            var compare = rule.compare || defaultCompare;\r\n            var compareResult = compare(xValue, yValue);\r\n            if (compareResult) {\r\n                return rule.desc ? -compareResult : compareResult\r\n            }\r\n        }\r\n        return xIndex - yIndex\r\n    }\r\n});\r\nvar compileCriteria = function() {\r\n    var toString = function(value) {\r\n        return isDefined(value) ? value.toString() : \"\"\r\n    };\r\n\r\n    function compileEquals(getter, value, negate) {\r\n        return function(obj) {\r\n            obj = toComparable(getter(obj));\r\n            var result = function(value) {\r\n                return \"\" === value || 0 === value || false === value\r\n            }(value) ? obj === value : obj == value;\r\n            if (negate) {\r\n                result = !result\r\n            }\r\n            return result\r\n        }\r\n    }\r\n    return function(crit) {\r\n        if (isFunction(crit)) {\r\n            return crit\r\n        }\r\n        if (isGroupCriterion(crit)) {\r\n            return function(crit) {\r\n                var ops = [];\r\n                var isConjunctiveOperator = false;\r\n                var isConjunctiveNextOperator = false;\r\n                each(crit, (function() {\r\n                    if (Array.isArray(this) || isFunction(this)) {\r\n                        if (ops.length > 1 && isConjunctiveOperator !== isConjunctiveNextOperator) {\r\n                            throw new errors.Error(\"E4019\")\r\n                        }\r\n                        ops.push(compileCriteria(this));\r\n                        isConjunctiveOperator = isConjunctiveNextOperator;\r\n                        isConjunctiveNextOperator = true\r\n                    } else {\r\n                        isConjunctiveNextOperator = isConjunctiveOperatorChecker(this)\r\n                    }\r\n                }));\r\n                return function(d) {\r\n                    var result = isConjunctiveOperator;\r\n                    for (var i = 0; i < ops.length; i++) {\r\n                        if (ops[i](d) !== isConjunctiveOperator) {\r\n                            result = !isConjunctiveOperator;\r\n                            break\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            }(crit)\r\n        }\r\n        if (isUnaryOperation(crit)) {\r\n            return function(crit) {\r\n                var op = crit[0];\r\n                var criteria = compileCriteria(crit[1]);\r\n                if (\"!\" === op) {\r\n                    return function(obj) {\r\n                        return !criteria(obj)\r\n                    }\r\n                }\r\n                throw errors.Error(\"E4003\", op)\r\n            }(crit)\r\n        }\r\n        return function(crit) {\r\n            crit = normalizeBinaryCriterion(crit);\r\n            var getter = compileGetter(crit[0]);\r\n            var op = crit[1];\r\n            var value = crit[2];\r\n            value = toComparable(value);\r\n            var compare = (obj, operatorFn) => {\r\n                obj = toComparable(getter(obj));\r\n                return (null == value || null == obj) && value !== obj ? false : operatorFn(obj, value)\r\n            };\r\n            switch (op.toLowerCase()) {\r\n                case \"=\":\r\n                    return compileEquals(getter, value);\r\n                case \"<>\":\r\n                    return compileEquals(getter, value, true);\r\n                case \">\":\r\n                    return obj => compare(obj, (a, b) => a > b);\r\n                case \"<\":\r\n                    return obj => compare(obj, (a, b) => a < b);\r\n                case \">=\":\r\n                    return obj => compare(obj, (a, b) => a >= b);\r\n                case \"<=\":\r\n                    return obj => compare(obj, (a, b) => a <= b);\r\n                case \"startswith\":\r\n                    return function(obj) {\r\n                        return 0 === toComparable(toString(getter(obj))).indexOf(value)\r\n                    };\r\n                case \"endswith\":\r\n                    return function(obj) {\r\n                        var getterValue = toComparable(toString(getter(obj)));\r\n                        var searchValue = toString(value);\r\n                        if (getterValue.length < searchValue.length) {\r\n                            return false\r\n                        }\r\n                        var index = getterValue.lastIndexOf(value);\r\n                        return -1 !== index && index === getterValue.length - value.length\r\n                    };\r\n                case \"contains\":\r\n                    return function(obj) {\r\n                        return toComparable(toString(getter(obj))).indexOf(value) > -1\r\n                    };\r\n                case \"notcontains\":\r\n                    return function(obj) {\r\n                        return -1 === toComparable(toString(getter(obj))).indexOf(value)\r\n                    }\r\n            }\r\n            throw errors.Error(\"E4003\", op)\r\n        }(crit)\r\n    }\r\n}();\r\nvar FilterIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, criteria) {\r\n        this.callBase(iter);\r\n        this.criteria = compileCriteria(criteria)\r\n    },\r\n    next: function() {\r\n        while (this.iter.next()) {\r\n            if (this.criteria(this.current())) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n});\r\nvar GroupIterator = Iterator.inherit({\r\n    ctor: function(iter, getter) {\r\n        this.iter = iter;\r\n        this.getter = getter\r\n    },\r\n    next: function() {\r\n        this._ensureGrouped();\r\n        return this.groupedIter.next()\r\n    },\r\n    current: function() {\r\n        this._ensureGrouped();\r\n        return this.groupedIter.current()\r\n    },\r\n    reset: function() {\r\n        delete this.groupedIter\r\n    },\r\n    countable: function() {\r\n        return !!this.groupedIter\r\n    },\r\n    count: function() {\r\n        return this.groupedIter.count()\r\n    },\r\n    _ensureGrouped: function() {\r\n        if (this.groupedIter) {\r\n            return\r\n        }\r\n        var hash = {};\r\n        var keys = [];\r\n        var iter = this.iter;\r\n        var getter = compileGetter(this.getter);\r\n        iter.reset();\r\n        while (iter.next()) {\r\n            var current = iter.current();\r\n            var key = getter(current);\r\n            if (key in hash) {\r\n                hash[key].push(current)\r\n            } else {\r\n                hash[key] = [current];\r\n                keys.push(key)\r\n            }\r\n        }\r\n        this.groupedIter = new ArrayIterator(map(keys, (function(key) {\r\n            return {\r\n                key: key,\r\n                items: hash[key]\r\n            }\r\n        })))\r\n    }\r\n});\r\nvar SelectIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, getter) {\r\n        this.callBase(iter);\r\n        this.getter = compileGetter(getter)\r\n    },\r\n    current: function() {\r\n        return this.getter(this.callBase())\r\n    },\r\n    countable: function() {\r\n        return this.iter.countable()\r\n    },\r\n    count: function() {\r\n        return this.iter.count()\r\n    }\r\n});\r\nvar SliceIterator = WrappedIterator.inherit({\r\n    ctor: function(iter, skip, take) {\r\n        this.callBase(iter);\r\n        this.skip = Math.max(0, skip);\r\n        this.take = Math.max(0, take);\r\n        this.pos = 0\r\n    },\r\n    next: function() {\r\n        if (this.pos >= this.skip + this.take) {\r\n            return false\r\n        }\r\n        while (this.pos < this.skip && this.iter.next()) {\r\n            this.pos++\r\n        }\r\n        this.pos++;\r\n        return this.iter.next()\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this.pos = 0\r\n    },\r\n    countable: function() {\r\n        return this.iter.countable()\r\n    },\r\n    count: function() {\r\n        return Math.min(this.iter.count() - this.skip, this.take)\r\n    }\r\n});\r\nvar arrayQueryImpl = function arrayQueryImpl(iter, queryOptions) {\r\n    queryOptions = queryOptions || {};\r\n    if (!(iter instanceof Iterator)) {\r\n        iter = new ArrayIterator(iter)\r\n    }\r\n    var handleError = function(error) {\r\n        var handler = queryOptions.errorHandler;\r\n        if (handler) {\r\n            handler(error)\r\n        }\r\n        handleDataError(error)\r\n    };\r\n    var aggregateCore = function(aggregator) {\r\n        var d = (new Deferred).fail(handleError);\r\n        var seed;\r\n        var step = aggregator.step;\r\n        var finalize = aggregator.finalize;\r\n        try {\r\n            iter.reset();\r\n            if (\"seed\" in aggregator) {\r\n                seed = aggregator.seed\r\n            } else {\r\n                seed = iter.next() ? iter.current() : NaN\r\n            }\r\n            var accumulator = seed;\r\n            while (iter.next()) {\r\n                accumulator = step(accumulator, iter.current())\r\n            }\r\n            d.resolve(finalize ? finalize(accumulator) : accumulator)\r\n        } catch (x) {\r\n            d.reject(x)\r\n        }\r\n        return d.promise()\r\n    };\r\n    var standardAggregate = function(name) {\r\n        return aggregateCore(aggregators[name])\r\n    };\r\n    var select = function(getter) {\r\n        if (!isFunction(getter) && !Array.isArray(getter)) {\r\n            getter = [].slice.call(arguments)\r\n        }\r\n        return chainQuery(new SelectIterator(iter, getter))\r\n    };\r\n    var selectProp = function(name) {\r\n        return select(compileGetter(name))\r\n    };\r\n\r\n    function chainQuery(iter) {\r\n        return arrayQueryImpl(iter, queryOptions)\r\n    }\r\n    return {\r\n        toArray: function() {\r\n            return iter.toArray()\r\n        },\r\n        enumerate: function() {\r\n            var d = (new Deferred).fail(handleError);\r\n            try {\r\n                d.resolve(iter.toArray())\r\n            } catch (x) {\r\n                d.reject(x)\r\n            }\r\n            return d.promise()\r\n        },\r\n        sortBy: function(getter, desc, compare) {\r\n            return chainQuery(new SortIterator(iter, getter, desc, compare))\r\n        },\r\n        thenBy: function(getter, desc, compare) {\r\n            if (iter instanceof SortIterator) {\r\n                return chainQuery(iter.thenBy(getter, desc, compare))\r\n            }\r\n            throw errors.Error(\"E4004\")\r\n        },\r\n        filter: function(criteria) {\r\n            if (!Array.isArray(criteria)) {\r\n                criteria = [].slice.call(arguments)\r\n            }\r\n            return chainQuery(new FilterIterator(iter, criteria))\r\n        },\r\n        slice: function(skip, take) {\r\n            if (void 0 === take) {\r\n                take = Number.MAX_VALUE\r\n            }\r\n            return chainQuery(new SliceIterator(iter, skip, take))\r\n        },\r\n        select: select,\r\n        groupBy: function(getter) {\r\n            return chainQuery(new GroupIterator(iter, getter))\r\n        },\r\n        aggregate: function(seed, step, finalize) {\r\n            if (arguments.length < 2) {\r\n                return aggregateCore({\r\n                    step: arguments[0]\r\n                })\r\n            }\r\n            return aggregateCore({\r\n                seed: seed,\r\n                step: step,\r\n                finalize: finalize\r\n            })\r\n        },\r\n        count: function() {\r\n            if (iter.countable()) {\r\n                var d = (new Deferred).fail(handleError);\r\n                try {\r\n                    d.resolve(iter.count())\r\n                } catch (x) {\r\n                    d.reject(x)\r\n                }\r\n                return d.promise()\r\n            }\r\n            return standardAggregate(\"count\")\r\n        },\r\n        sum: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).sum()\r\n            }\r\n            return standardAggregate(\"sum\")\r\n        },\r\n        min: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).min()\r\n            }\r\n            return standardAggregate(\"min\")\r\n        },\r\n        max: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).max()\r\n            }\r\n            return standardAggregate(\"max\")\r\n        },\r\n        avg: function(getter) {\r\n            if (getter) {\r\n                return selectProp(getter).avg()\r\n            }\r\n            return standardAggregate(\"avg\")\r\n        }\r\n    }\r\n};\r\nexport default arrayQueryImpl;\r\n"]},"metadata":{},"sourceType":"module"}