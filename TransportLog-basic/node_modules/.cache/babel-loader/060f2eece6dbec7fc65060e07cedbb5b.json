{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { noop } from \"../../core/utils/common\";\nimport { getPublicElement } from \"../../core/element\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isPlainObject, isObject, isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getElementMaxHeightByWindow } from \"../overlay/utils\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nimport { end as hoverEventEnd } from \"../../events/hover\";\nimport MenuBase from \"../context_menu/ui.menu_base\";\nimport Overlay from \"../overlay/ui.overlay\";\nimport Submenu from \"./ui.submenu\";\nimport Button from \"../button\";\nimport TreeView from \"../tree_view\";\nvar DX_MENU_CLASS = \"dx-menu\";\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\nvar FOCUS_UP = \"up\";\nvar FOCUS_DOWN = \"down\";\nvar FOCUS_LEFT = \"left\";\nvar FOCUS_RIGHT = \"right\";\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\nvar NEXTITEM_OPERATION = \"nextItem\";\nvar PREVITEM_OPERATION = \"prevItem\";\nvar DEFAULT_DELAY = {\n  show: 50,\n  hide: 300\n};\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\n\nclass Menu extends MenuBase {\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      orientation: \"horizontal\",\n      submenuDirection: \"auto\",\n      showFirstSubmenuMode: {\n        name: \"onClick\",\n        delay: {\n          show: 50,\n          hide: 300\n        }\n      },\n      hideSubmenuOnMouseLeave: false,\n      onSubmenuShowing: null,\n      onSubmenuShown: null,\n      onSubmenuHiding: null,\n      onSubmenuHidden: null,\n      adaptivityEnabled: false\n    });\n  }\n\n  _setOptionsByReference() {\n    super._setOptionsByReference();\n\n    extend(this._optionsByReference, {\n      animation: true,\n      selectedItem: true\n    });\n  }\n\n  _itemElements() {\n    var rootMenuElements = super._itemElements();\n\n    var submenuElements = this._submenuItemElements();\n\n    return rootMenuElements.add(submenuElements);\n  }\n\n  _submenuItemElements() {\n    var elements = [];\n    var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\n    var currentSubmenu = this._submenus.length && this._submenus[0];\n\n    if (currentSubmenu && currentSubmenu.itemsContainer()) {\n      elements = currentSubmenu.itemsContainer().find(itemSelector);\n    }\n\n    return elements;\n  }\n\n  _focusTarget() {\n    return this.$element();\n  }\n\n  _isMenuHorizontal() {\n    return \"horizontal\" === this.option(\"orientation\");\n  }\n\n  _moveFocus(location) {\n    var $items = this._getAvailableItems();\n\n    var isMenuHorizontal = this._isMenuHorizontal();\n\n    var $activeItem = this._getActiveItem(true);\n\n    var argument;\n    var operation;\n    var navigationAction;\n    var $newTarget;\n\n    switch (location) {\n      case FOCUS_UP:\n        operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\n        argument = isMenuHorizontal ? $activeItem : $items;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n\n      case FOCUS_DOWN:\n        operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\n        argument = isMenuHorizontal ? $activeItem : $items;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n\n      case FOCUS_RIGHT:\n        operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\n        argument = isMenuHorizontal ? $items : $activeItem;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n\n      case FOCUS_LEFT:\n        operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\n        argument = isMenuHorizontal ? $items : $activeItem;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n\n      default:\n        return super._moveFocus(location);\n    }\n\n    if ($newTarget && 0 !== $newTarget.length) {\n      this.option(\"focusedElement\", getPublicElement($newTarget));\n    }\n  }\n\n  _getItemsNavigationOperation(operation) {\n    var navOperation = operation;\n\n    if (this.option(\"rtlEnabled\")) {\n      navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION;\n    }\n\n    return navOperation;\n  }\n\n  _getKeyboardNavigationAction(operation, argument) {\n    var action = noop;\n\n    switch (operation) {\n      case SHOW_SUBMENU_OPERATION:\n        if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\n          action = this._showSubmenu.bind(this, argument);\n        }\n\n        break;\n\n      case NEXTITEM_OPERATION:\n        action = this._nextItem.bind(this, argument);\n        break;\n\n      case PREVITEM_OPERATION:\n        action = this._prevItem.bind(this, argument);\n    }\n\n    return action;\n  }\n\n  _clean() {\n    super._clean();\n\n    this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer);\n  }\n\n  _visibilityChanged(visible) {\n    if (visible) {\n      if (!this._menuItemsWidth) {\n        this._updateItemsWidthCache();\n      }\n\n      this._dimensionChanged();\n    }\n  }\n\n  _isAdaptivityEnabled() {\n    return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\");\n  }\n\n  _updateItemsWidthCache() {\n    var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\n    this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true);\n  }\n\n  _dimensionChanged() {\n    if (!this._isAdaptivityEnabled()) {\n      return;\n    }\n\n    var containerWidth = getOuterWidth(this.$element());\n\n    this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth);\n  }\n\n  _init() {\n    super._init();\n\n    this._submenus = [];\n  }\n\n  _initActions() {\n    this._actions = {};\n    each(ACTIONS, (index, action) => {\n      this._actions[action] = this._createActionByOption(action);\n    });\n  }\n\n  _initMarkup() {\n    this._visibleSubmenu = null;\n    this.$element().addClass(DX_MENU_CLASS);\n\n    super._initMarkup();\n\n    this._addCustomCssClass(this.$element());\n\n    this.setAria(\"role\", \"menubar\");\n  }\n\n  _render() {\n    super._render();\n\n    this._initAdaptivity();\n  }\n\n  _renderHamburgerButton() {\n    this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\n      icon: \"menu\",\n      activeStateEnabled: false,\n      onClick: this._toggleTreeView.bind(this)\n    });\n    return this._hamburger.$element();\n  }\n\n  _toggleTreeView(state) {\n    if (isPlainObject(state)) {\n      state = !this._overlay.option(\"visible\");\n    }\n\n    this._overlay.option(\"visible\", state);\n\n    this._toggleHamburgerActiveState(state);\n  }\n\n  _toggleHamburgerActiveState(state) {\n    this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state);\n  }\n\n  _toggleAdaptiveMode(state) {\n    var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\n    var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\n\n    if (state) {\n      this._hideVisibleSubmenu();\n    } else {\n      this._treeView && this._treeView.collapseAll();\n      this._overlay && this._toggleTreeView(state);\n    }\n\n    $menuItemsContainer.toggle(!state);\n    $adaptiveElements.toggle(state);\n  }\n\n  _removeAdaptivity() {\n    if (!this._$adaptiveContainer) {\n      return;\n    }\n\n    this._toggleAdaptiveMode(false);\n\n    this._$adaptiveContainer.remove();\n\n    this._$adaptiveContainer = null;\n    this._treeView = null;\n    this._hamburger = null;\n    this._overlay = null;\n  }\n\n  _treeviewItemClickHandler(e) {\n    this._actions.onItemClick(e);\n\n    if (!e.node.children.length) {\n      this._toggleTreeView(false);\n    }\n  }\n\n  _getAdaptiveOverlayOptions() {\n    var rtl = this.option(\"rtlEnabled\");\n    var position = rtl ? \"right\" : \"left\";\n    return {\n      _ignoreFunctionValueDeprecation: true,\n      maxHeight: () => getElementMaxHeightByWindow(this.$element()),\n      deferRendering: false,\n      shading: false,\n      animation: false,\n      hideOnParentScroll: true,\n      onHidden: () => {\n        this._toggleHamburgerActiveState(false);\n      },\n      height: \"auto\",\n      hideOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\n      position: {\n        collision: \"flipfit\",\n        at: \"bottom \" + position,\n        my: \"top \" + position,\n        of: this._hamburger.$element()\n      }\n    };\n  }\n\n  _getTreeViewOptions() {\n    var menuOptions = {};\n    each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\n      menuOptions[option] = this.option(option);\n    });\n    each([\"onItemContextMenu\", \"onSelectionChanged\", \"onItemRendered\"], (_, actionName) => {\n      menuOptions[actionName] = e => {\n        this._actions[actionName](e);\n      };\n    });\n    return extend(menuOptions, {\n      dataSource: this.getDataSource(),\n      animationEnabled: !!this.option(\"animation\"),\n      onItemClick: this._treeviewItemClickHandler.bind(this),\n      onItemExpanded: e => {\n        this._overlay.repaint();\n\n        this._actions.onSubmenuShown(e);\n      },\n      onItemCollapsed: e => {\n        this._overlay.repaint();\n\n        this._actions.onSubmenuHidden(e);\n      },\n      selectNodesRecursive: false,\n      selectByClick: this.option(\"selectByClick\"),\n      expandEvent: \"click\"\n    });\n  }\n\n  _initAdaptivity() {\n    if (!this._isAdaptivityEnabled()) {\n      return;\n    }\n\n    this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\n\n    var $hamburger = this._renderHamburgerButton();\n\n    this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\n    this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\n\n    this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\n\n    this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\n\n    this._$adaptiveContainer.append($hamburger);\n\n    this._$adaptiveContainer.append(this._overlay.$element());\n\n    this.$element().append(this._$adaptiveContainer);\n\n    this._updateItemsWidthCache();\n\n    this._dimensionChanged();\n  }\n\n  _getDelay(delayType) {\n    var delay = this.option(\"showFirstSubmenuMode\").delay;\n\n    if (!isDefined(delay)) {\n      return DEFAULT_DELAY[delayType];\n    } else {\n      return isObject(delay) ? delay[delayType] : delay;\n    }\n  }\n\n  _keyboardHandler(e) {\n    return super._keyboardHandler(e, !!this._visibleSubmenu);\n  }\n\n  _renderContainer() {\n    var $wrapper = $(\"<div>\");\n    $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\n    return super._renderContainer($wrapper);\n  }\n\n  _renderSubmenuItems(node, $itemFrame) {\n    var submenu = this._createSubmenu(node, $itemFrame);\n\n    this._submenus.push(submenu);\n\n    this._renderBorderElement($itemFrame);\n\n    return submenu;\n  }\n\n  _getKeyboardListeners() {\n    return super._getKeyboardListeners().concat(this._visibleSubmenu);\n  }\n\n  _createSubmenu(node, $rootItem) {\n    var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\n\n    var items = this._getChildNodes(node);\n\n    var subMenu = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\n      _dataAdapter: this._dataAdapter,\n      _parentKey: node.internalFields.key,\n      items: items,\n      onHoverStart: this._clearTimeouts.bind(this),\n      position: this.getSubmenuPosition($rootItem)\n    }));\n\n    this._attachSubmenuHandlers($rootItem, subMenu);\n\n    return subMenu;\n  }\n\n  _getSubmenuOptions() {\n    var $submenuTarget = $(\"<div>\");\n\n    var isMenuHorizontal = this._isMenuHorizontal();\n\n    return {\n      itemTemplate: this.option(\"itemTemplate\"),\n      target: $submenuTarget,\n      orientation: this.option(\"orientation\"),\n      selectionMode: this.option(\"selectionMode\"),\n      cssClass: this.option(\"cssClass\"),\n      selectByClick: this.option(\"selectByClick\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      activeStateEnabled: this.option(\"activeStateEnabled\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      animation: this.option(\"animation\"),\n      showSubmenuMode: this.option(\"showSubmenuMode\"),\n      displayExpr: this.option(\"displayExpr\"),\n      disabledExpr: this.option(\"disabledExpr\"),\n      selectedExpr: this.option(\"selectedExpr\"),\n      itemsExpr: this.option(\"itemsExpr\"),\n      onFocusedItemChanged: e => {\n        if (!e.component.option(\"visible\")) {\n          return;\n        }\n\n        this.option(\"focusedElement\", e.component.option(\"focusedElement\"));\n      },\n      onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\n      onItemClick: this._nestedItemOnItemClickHandler.bind(this),\n      onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\n      onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\n      onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\n      onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\n      onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\n    };\n  }\n\n  _getShowFirstSubmenuMode() {\n    if (!this._isDesktopDevice()) {\n      return \"onClick\";\n    }\n\n    var optionValue = this.option(\"showFirstSubmenuMode\");\n    return isObject(optionValue) ? optionValue.name : optionValue;\n  }\n\n  _moveMainMenuFocus(direction) {\n    var $items = this._getAvailableItems();\n\n    var itemCount = $items.length;\n    var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\n    var itemIndex = $items.index($currentItem);\n\n    this._hideSubmenu(this._visibleSubmenu);\n\n    itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\n\n    if (itemIndex >= itemCount) {\n      itemIndex = 0;\n    } else if (itemIndex < 0) {\n      itemIndex = itemCount - 1;\n    }\n\n    var $newItem = $items.eq(itemIndex);\n    this.option(\"focusedElement\", getPublicElement($newItem));\n  }\n\n  _nestedItemOnSelectionChangedHandler(args) {\n    var selectedItem = args.addedItems.length && args.addedItems[0];\n    var submenu = Submenu.getInstance(args.element);\n    var onSelectionChanged = this._actions.onSelectionChanged;\n    onSelectionChanged(args);\n    selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\n\n    this._clearRootSelection();\n\n    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n  }\n\n  _clearSelectionInSubmenus(item, targetSubmenu) {\n    var cleanAllSubmenus = !arguments.length;\n    each(this._submenus, (index, submenu) => {\n      var $submenu = submenu._itemContainer();\n\n      var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\n      var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\n\n      if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\n        $selectedItem.removeClass(this._selectedItemClass());\n\n        var selectedItemData = this._getItemData($selectedItem);\n\n        if (selectedItemData) {\n          selectedItemData.selected = false;\n        }\n\n        submenu._clearSelectedItems();\n      }\n    });\n  }\n\n  _clearRootSelection() {\n    var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\n\n    if ($prevSelectedItem.length) {\n      var prevSelectedItemData = this._getItemData($prevSelectedItem);\n\n      prevSelectedItemData.selected = false;\n      $prevSelectedItem.removeClass(this._selectedItemClass());\n    }\n  }\n\n  _nestedItemOnItemClickHandler(e) {\n    this._actions.onItemClick(e);\n  }\n\n  _nestedItemOnItemRenderedHandler(e) {\n    this._actions.onItemRendered(e);\n  }\n\n  _attachSubmenuHandlers($rootItem, submenu) {\n    var $submenuOverlayContent = submenu.getOverlayContent();\n    var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\n    var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\n    submenu.option({\n      onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\n      onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\n      onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\n      onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\n    });\n    each(submenus, (index, submenu) => {\n      eventsEngine.off(submenu, submenuMouseLeaveName);\n      eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem));\n    });\n  }\n\n  _submenuOnShowingHandler($rootItem, submenu) {\n    var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\n\n    this._actions.onSubmenuShowing({\n      rootItem: getPublicElement($rootItem),\n      submenu: submenu\n    });\n\n    $border.show();\n    $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS);\n  }\n\n  _submenuOnShownHandler($rootItem, submenu) {\n    this._actions.onSubmenuShown({\n      rootItem: getPublicElement($rootItem),\n      submenu: submenu\n    });\n  }\n\n  _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\n    var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\n    var args = eventArgs;\n    args.rootItem = getPublicElement($rootItem);\n    args.submenu = submenu;\n\n    this._actions.onSubmenuHiding(args);\n\n    eventArgs = args;\n\n    if (!eventArgs.cancel) {\n      if (this._visibleSubmenu === submenu) {\n        this._visibleSubmenu = null;\n      }\n\n      $border.hide();\n      $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\n    }\n  }\n\n  _submenuOnHiddenHandler($rootItem, submenu) {\n    this._actions.onSubmenuHidden({\n      rootItem: getPublicElement($rootItem),\n      submenu: submenu\n    });\n  }\n\n  _submenuMouseLeaveHandler($rootItem, eventArgs) {\n    var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\n\n    var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\n\n    if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\n      this._clearTimeouts();\n\n      setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n    }\n  }\n\n  _hideSubmenuAfterTimeout() {\n    if (!this._visibleSubmenu) {\n      return;\n    }\n\n    var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\n\n    var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\n\n    var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\n\n    if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\n      this._visibleSubmenu.hide();\n    }\n  }\n\n  _getSubmenuByRootElement($rootItem) {\n    if (!$rootItem) {\n      return false;\n    }\n\n    var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\n    return $submenu.length && Submenu.getInstance($submenu);\n  }\n\n  getSubmenuPosition($rootItem) {\n    var isHorizontalMenu = this._isMenuHorizontal();\n\n    var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var submenuPosition = {\n      collision: \"flip\",\n      of: $rootItem\n    };\n\n    switch (submenuDirection) {\n      case \"leftortop\":\n        submenuPosition.at = \"left top\";\n        submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\n        break;\n\n      case \"rightorbottom\":\n        submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\n        submenuPosition.my = \"left top\";\n        break;\n\n      default:\n        if (isHorizontalMenu) {\n          submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\n          submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n        } else {\n          submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\n          submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n        }\n\n    }\n\n    return submenuPosition;\n  }\n\n  _renderBorderElement($item) {\n    $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide();\n  }\n\n  _itemPointerDownHandler(e) {\n    var $target = $(e.target);\n    var $closestItem = $target.closest(this._itemElements());\n\n    if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\n      this.option(\"focusedElement\", null);\n      return;\n    }\n\n    super._itemPointerDownHandler(e);\n  }\n\n  _hoverStartHandler(e) {\n    var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\n\n    var $item = this._getItemElementByEventArgs(e);\n\n    var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\n\n    var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\n\n    if (this._isItemDisabled($item)) {\n      return;\n    }\n\n    eventsEngine.off($item, mouseMoveEventName);\n\n    if (!this._hasChildren(node)) {\n      this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n      return;\n    }\n\n    if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\n      var submenu = this._getSubmenuByElement($item);\n\n      this._clearTimeouts();\n\n      if (!submenu.isOverlayVisible()) {\n        eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\n        this._showSubmenuTimer = this._getDelay(\"hide\");\n      }\n    }\n  }\n\n  _hoverEndHandler(eventArg) {\n    var $item = this._getItemElementByEventArgs(eventArg);\n\n    var relatedTarget = $(eventArg.relatedTarget);\n\n    super._hoverEndHandler(eventArg);\n\n    this._clearTimeouts();\n\n    if (this._isItemDisabled($item)) {\n      return;\n    }\n\n    if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\n      return;\n    }\n\n    if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\n      this._hideSubmenuTimer = setTimeout(() => {\n        this._hideSubmenuAfterTimeout();\n      }, this._getDelay(\"hide\"));\n    }\n  }\n\n  _hideVisibleSubmenu() {\n    if (!this._visibleSubmenu) {\n      return false;\n    }\n\n    this._hideSubmenu(this._visibleSubmenu);\n\n    return true;\n  }\n\n  _showSubmenu($itemElement) {\n    var submenu = this._getSubmenuByElement($itemElement);\n\n    if (this._visibleSubmenu !== submenu) {\n      this._hideVisibleSubmenu();\n    }\n\n    if (submenu) {\n      this._clearTimeouts();\n\n      this.focus();\n      submenu.show();\n      this.option(\"focusedElement\", submenu.option(\"focusedElement\"));\n    }\n\n    this._visibleSubmenu = submenu;\n    this._hoveredRootItem = $itemElement;\n  }\n\n  _hideSubmenu(submenu) {\n    submenu && submenu.hide();\n\n    if (this._visibleSubmenu === submenu) {\n      this._visibleSubmenu = null;\n    }\n\n    this._hoveredRootItem = null;\n  }\n\n  _itemMouseMoveHandler(e) {\n    if (e.pointers && e.pointers.length) {\n      return;\n    }\n\n    var $item = $(e.currentTarget);\n\n    if (!isDefined(this._showSubmenuTimer)) {\n      return;\n    }\n\n    this._clearTimeouts();\n\n    this._showSubmenuTimer = setTimeout(() => {\n      var submenu = this._getSubmenuByElement($item);\n\n      if (submenu && !submenu.isOverlayVisible()) {\n        this._showSubmenu($item);\n      }\n    }, this._getDelay(\"show\"));\n  }\n\n  _clearTimeouts() {\n    clearTimeout(this._hideSubmenuTimer);\n    clearTimeout(this._showSubmenuTimer);\n  }\n\n  _getSubmenuByElement($itemElement, itemData) {\n    var submenu = this._getSubmenuByRootElement($itemElement);\n\n    if (submenu) {\n      return submenu;\n    } else {\n      itemData = itemData || this._getItemData($itemElement);\n\n      var node = this._dataAdapter.getNodeByItem(itemData);\n\n      return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement);\n    }\n  }\n\n  _updateSubmenuVisibilityOnClick(actionArgs) {\n    var args = actionArgs.args.length && actionArgs.args[0];\n\n    if (!args || this._disabledGetter(args.itemData)) {\n      return;\n    }\n\n    var $itemElement = $(args.itemElement);\n\n    var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\n\n    this._updateSelectedItemOnClick(actionArgs);\n\n    if (this._visibleSubmenu) {\n      if (this._visibleSubmenu === currentSubmenu) {\n        if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\n          this._hideSubmenu(this._visibleSubmenu);\n        }\n\n        return;\n      } else {\n        this._hideSubmenu(this._visibleSubmenu);\n      }\n    }\n\n    if (!currentSubmenu) {\n      return;\n    }\n\n    if (!currentSubmenu.isOverlayVisible()) {\n      this._showSubmenu($itemElement);\n\n      return;\n    }\n  }\n\n  _optionChanged(args) {\n    if (ACTIONS.indexOf(args.name) >= 0) {\n      this._initActions();\n\n      return;\n    }\n\n    switch (args.name) {\n      case \"orientation\":\n      case \"submenuDirection\":\n        this._invalidate();\n\n        break;\n\n      case \"showFirstSubmenuMode\":\n      case \"hideSubmenuOnMouseLeave\":\n        break;\n\n      case \"showSubmenuMode\":\n        this._changeSubmenusOption(args.name, args.value);\n\n        break;\n\n      case \"adaptivityEnabled\":\n        args.value ? this._initAdaptivity() : this._removeAdaptivity();\n        break;\n\n      case \"width\":\n        if (this._isAdaptivityEnabled()) {\n          this._treeView.option(args.name, args.value);\n\n          this._overlay.option(args.name, args.value);\n        }\n\n        super._optionChanged(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"animation\":\n        if (this._isAdaptivityEnabled()) {\n          this._treeView.option(\"animationEnabled\", !!args.value);\n        }\n\n        super._optionChanged(args);\n\n        break;\n\n      default:\n        if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\n          this._treeView.option(args.fullName, args.value);\n        }\n\n        super._optionChanged(args);\n\n    }\n  }\n\n  _changeSubmenusOption(name, value) {\n    each(this._submenus, (index, submenu) => {\n      submenu.option(name, value);\n    });\n  }\n\n  selectItem(itemElement) {\n    this._hideSubmenu(this._visibleSubmenu);\n\n    super.selectItem(itemElement);\n  }\n\n  unselectItem(itemElement) {\n    this._hideSubmenu(this._visibleSubmenu);\n\n    super.selectItem(itemElement);\n  }\n\n}\n\nregisterComponent(\"dxMenu\", Menu);\nexport default Menu;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/menu/ui.menu.js"],"names":["getOuterWidth","$","eventsEngine","registerComponent","noop","getPublicElement","each","isPlainObject","isObject","isDefined","extend","getElementMaxHeightByWindow","addNamespace","pointerEvents","end","hoverEventEnd","MenuBase","Overlay","Submenu","Button","TreeView","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","show","hide","ACTIONS","Menu","_getDefaultOptions","orientation","submenuDirection","showFirstSubmenuMode","name","delay","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_setOptionsByReference","_optionsByReference","animation","selectedItem","_itemElements","rootMenuElements","submenuElements","_submenuItemElements","add","elements","itemSelector","concat","currentSubmenu","_submenus","length","itemsContainer","find","_focusTarget","$element","_isMenuHorizontal","option","_moveFocus","location","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","argument","operation","navigationAction","$newTarget","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","action","hasClass","_showSubmenu","bind","_nextItem","_prevItem","_clean","clearTimeout","_resizeEventTimer","_visibilityChanged","visible","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","_isAdaptivityEnabled","$menuItems","first","children","_getSummaryItemsWidth","containerWidth","_toggleAdaptiveMode","_init","_initActions","_actions","index","_createActionByOption","_initMarkup","_visibleSubmenu","addClass","_addCustomCssClass","setAria","_render","_initAdaptivity","_renderHamburgerButton","_hamburger","icon","activeStateEnabled","onClick","_toggleTreeView","state","_overlay","_toggleHamburgerActiveState","toggleClass","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","collapseAll","toggle","_removeAdaptivity","_$adaptiveContainer","remove","_treeviewItemClickHandler","e","onItemClick","node","_getAdaptiveOverlayOptions","rtl","position","_ignoreFunctionValueDeprecation","maxHeight","deferRendering","shading","hideOnParentScroll","onHidden","height","hideOnOutsideClick","target","closest","collision","at","my","of","_getTreeViewOptions","menuOptions","_","actionName","dataSource","getDataSource","animationEnabled","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","selectByClick","expandEvent","$hamburger","_createComponent","$content","append","$wrapper","_getDelay","delayType","_keyboardHandler","_renderContainer","appendTo","_renderSubmenuItems","$itemFrame","submenu","_createSubmenu","push","_renderBorderElement","_getKeyboardListeners","$rootItem","$submenuContainer","items","_getChildNodes","subMenu","_getSubmenuOptions","_dataAdapter","_parentKey","internalFields","key","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","cssClass","hoverStateEnabled","focusStateEnabled","showSubmenuMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","component","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_getShowFirstSubmenuMode","_isDesktopDevice","optionValue","direction","itemCount","$currentItem","filter","eq","itemIndex","_hideSubmenu","$newItem","args","addedItems","getInstance","element","_clearSelectionInSubmenus","_clearRootSelection","_setOptionWithoutOptionChange","item","targetSubmenu","cleanAllSubmenus","arguments","$submenu","_itemContainer","isOtherItem","is","$selectedItem","_selectedItemClass","removeClass","selectedItemData","_getItemData","selected","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","NAME","onShowing","_submenuOnShowingHandler","onShown","_submenuOnShownHandler","onHiding","_submenuOnHidingHandler","_submenuOnHiddenHandler","off","on","_submenuMouseLeaveHandler","$border","rootItem","eventArgs","cancel","relatedTarget","parents","contextMenu","_getSubmenuByRootElement","setTimeout","_hideSubmenuAfterTimeout","isRootItemHovered","context","isSubmenuItemHovered","hoveredElementFromSubMenu","get","querySelector","isHorizontalMenu","toLowerCase","rtlEnabled","submenuPosition","$item","_itemPointerDownHandler","$target","$closestItem","_hoverStartHandler","mouseMoveEventName","move","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","buttons","which","_isItemDisabled","_hasChildren","_showSubmenuTimer","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","_hoverEndHandler","eventArg","_hideSubmenuTimer","$itemElement","focus","_hoveredRootItem","pointers","currentTarget","itemData","_updateSubmenuVisibilityOnClick","actionArgs","_disabledGetter","itemElement","_updateSelectedItemOnClick","_optionChanged","indexOf","_invalidate","_changeSubmenusOption","value","fullName","selectItem","unselectItem"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this._addCustomCssClass(this.$element());\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            hideOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\", \"onItemRendered\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var subMenu = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, subMenu);\r\n        return subMenu\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            this.focus();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}