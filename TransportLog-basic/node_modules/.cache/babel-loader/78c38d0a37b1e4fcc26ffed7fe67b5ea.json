{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_view_roller.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport { name as clickEventName } from \"../../events/click\";\nimport Scrollable from \"../scroll_view/ui.scrollable.old\";\nimport devices from \"../../core/devices\";\nimport fx from \"../../animation/fx\";\nimport { resetPosition } from \"../../animation/translator\";\nimport { convertToLocation } from \"../../renovation/ui/scroll_view/utils/convert_location\";\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\nvar DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\nvar DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\nvar DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\nvar DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\n\nclass DateViewRoller extends Scrollable {\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      showScrollbar: \"never\",\n      useNative: false,\n      selectedIndex: 0,\n      bounceEnabled: false,\n      items: [],\n      showOnClick: false,\n      onClick: null,\n      onSelectedIndexChanged: null,\n      scrollByContent: true\n    });\n  }\n\n  _init() {\n    super._init();\n\n    this.option(\"onVisibilityChange\", this._visibilityChangedHandler.bind(this));\n    this.option(\"onEnd\", this._endActionHandler.bind(this));\n  }\n\n  _render() {\n    super._render();\n\n    this._renderSelectedItemFrame();\n\n    this.$element().addClass(DATEVIEW_ROLLER_CLASS);\n\n    this._renderContainerClick();\n\n    this._renderItems();\n\n    this._renderSelectedValue();\n\n    this._renderItemsClick();\n\n    this._renderWheelEvent();\n\n    this._renderSelectedIndexChanged();\n  }\n\n  _renderSelectedIndexChanged() {\n    this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\");\n  }\n\n  _renderWheelEvent() {\n    eventsEngine.on($(this.container()), \"dxmousewheel\", e => {\n      this._isWheelScrolled = true;\n    });\n  }\n\n  _renderContainerClick() {\n    if (!this.option(\"showOnClick\")) {\n      return;\n    }\n\n    var eventName = addNamespace(clickEventName, this.NAME);\n\n    var clickAction = this._createActionByOption(\"onClick\");\n\n    eventsEngine.off($(this.container()), eventName);\n    eventsEngine.on($(this.container()), eventName, function (e) {\n      clickAction({\n        event: e\n      });\n    });\n  }\n\n  _renderItems() {\n    var items = this.option(\"items\") || [];\n    var $items = $();\n    $(this.content()).empty();\n    items.forEach(function (item) {\n      $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item));\n    });\n    $(this.content()).append($items);\n    this._$items = $items;\n    this.update();\n  }\n\n  _renderSelectedItemFrame() {\n    $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo($(this.container()));\n  }\n\n  _renderSelectedValue(selectedIndex) {\n    var index = this._fitIndex(null !== selectedIndex && void 0 !== selectedIndex ? selectedIndex : this.option(\"selectedIndex\"));\n\n    this._moveTo({\n      top: this._getItemPosition(index)\n    });\n\n    this._renderActiveStateItem();\n  }\n\n  _fitIndex(index) {\n    var items = this.option(\"items\") || [];\n    var itemCount = items.length;\n\n    if (index >= itemCount) {\n      return itemCount - 1;\n    }\n\n    if (index < 0) {\n      return 0;\n    }\n\n    return index;\n  }\n\n  _getItemPosition(index) {\n    return Math.round(this._itemHeight() * index);\n  }\n\n  _renderItemsClick() {\n    var itemSelector = this._getItemSelector();\n\n    var eventName = addNamespace(clickEventName, this.NAME);\n    eventsEngine.off(this.$element(), eventName, itemSelector);\n    eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this));\n  }\n\n  _getItemSelector() {\n    return \".\" + DATEVIEW_ROLLER_ITEM_CLASS;\n  }\n\n  _itemClickHandler(e) {\n    this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget));\n  }\n\n  _itemElementIndex(itemElement) {\n    return this._itemElements().index(itemElement);\n  }\n\n  _itemElements() {\n    return this.$element().find(this._getItemSelector());\n  }\n\n  _renderActiveStateItem() {\n    var selectedIndex = this.option(\"selectedIndex\");\n    each(this._$items, function (index) {\n      $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index);\n    });\n  }\n\n  _shouldScrollToNeighborItem() {\n    return \"desktop\" === devices.real().deviceType && this._isWheelScrolled;\n  }\n\n  _moveTo(targetLocation) {\n    var {\n      top: top,\n      left: left\n    } = convertToLocation(targetLocation);\n    var location = this.scrollOffset();\n    var delta = {\n      x: location.left - left,\n      y: location.top - top\n    };\n\n    if (this._isVisible() && (delta.x || delta.y)) {\n      this._prepareDirections(true);\n\n      if (this._animation && !this._shouldScrollToNeighborItem()) {\n        var that = this;\n        fx.stop($(this.content()));\n        fx.animate($(this.content()), {\n          duration: 200,\n          type: \"slide\",\n          to: {\n            top: Math.floor(delta.y)\n          },\n\n          complete() {\n            resetPosition($(that.content()));\n            that.handleMove({\n              delta: delta\n            });\n          }\n\n        });\n        delete this._animation;\n      } else {\n        this.handleMove({\n          delta: delta\n        });\n      }\n    }\n  }\n\n  _validate(e) {\n    return this._moveIsAllowed(e);\n  }\n\n  _fitSelectedIndexInRange(index) {\n    var itemsCount = this.option(\"items\").length;\n    return Math.max(Math.min(index, itemsCount - 1), 0);\n  }\n\n  _isInNullNeighborhood(x) {\n    return -.1 <= x && x <= .1;\n  }\n\n  _getSelectedIndexAfterScroll(currentSelectedIndex) {\n    var locationTop = this.scrollOffset().top;\n\n    var currentSelectedIndexPosition = currentSelectedIndex * this._itemHeight();\n\n    var dy = locationTop - currentSelectedIndexPosition;\n\n    if (this._isInNullNeighborhood(dy)) {\n      return currentSelectedIndex;\n    }\n\n    var direction = dy > 0 ? 1 : -1;\n\n    var newSelectedIndex = this._fitSelectedIndexInRange(currentSelectedIndex + direction);\n\n    return newSelectedIndex;\n  }\n\n  _getNewSelectedIndex(currentSelectedIndex) {\n    if (this._shouldScrollToNeighborItem()) {\n      return this._getSelectedIndexAfterScroll(currentSelectedIndex);\n    }\n\n    this._animation = true;\n\n    var ratio = this.scrollOffset().top / this._itemHeight();\n\n    return Math.round(ratio);\n  }\n\n  _endActionHandler() {\n    var currentSelectedIndex = this.option(\"selectedIndex\");\n\n    var newSelectedIndex = this._getNewSelectedIndex(currentSelectedIndex);\n\n    if (newSelectedIndex === currentSelectedIndex) {\n      this._renderSelectedValue(newSelectedIndex);\n    } else {\n      this.option(\"selectedIndex\", newSelectedIndex);\n    }\n\n    this._isWheelScrolled = false;\n  }\n\n  _itemHeight() {\n    var $item = this._$items.first();\n\n    return getHeight($item);\n  }\n\n  _toggleActive(state) {\n    this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state);\n  }\n\n  _isVisible() {\n    return $(this.container()).is(\":visible\");\n  }\n\n  _fireSelectedIndexChanged(value, previousValue) {\n    this._selectedIndexChanged({\n      value: value,\n      previousValue: previousValue,\n      event: void 0\n    });\n  }\n\n  _visibilityChanged(visible) {\n    super._visibilityChanged(visible);\n\n    this._visibilityChangedHandler(visible);\n  }\n\n  _visibilityChangedHandler(visible) {\n    if (visible) {\n      this._visibilityTimer = setTimeout(() => {\n        this._renderSelectedValue(this.option(\"selectedIndex\"));\n      });\n    }\n\n    this.toggleActiveState(false);\n  }\n\n  toggleActiveState(state) {\n    this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state);\n  }\n\n  _refreshSelectedIndex() {\n    var selectedIndex = this.option(\"selectedIndex\");\n\n    var fitIndex = this._fitIndex(selectedIndex);\n\n    if (fitIndex === selectedIndex) {\n      this._renderActiveStateItem();\n    } else {\n      this.option(\"selectedIndex\", fitIndex);\n    }\n  }\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"selectedIndex\":\n        this._fireSelectedIndexChanged(args.value, args.previousValue);\n\n        this._renderSelectedValue(args.value);\n\n        break;\n\n      case \"items\":\n        this._renderItems();\n\n        this._refreshSelectedIndex();\n\n        break;\n\n      case \"onClick\":\n      case \"showOnClick\":\n        this._renderContainerClick();\n\n        break;\n\n      case \"onSelectedIndexChanged\":\n        this._renderSelectedIndexChanged();\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _dispose() {\n    clearTimeout(this._visibilityTimer);\n\n    super._dispose();\n  }\n\n}\n\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\nexport default DateViewRoller;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/date_box/ui.date_view_roller.js"],"names":["getHeight","$","eventsEngine","registerComponent","extend","each","addNamespace","name","clickEventName","Scrollable","devices","fx","resetPosition","convertToLocation","DATEVIEW_ROLLER_CLASS","DATEVIEW_ROLLER_ACTIVE_CLASS","DATEVIEW_ROLLER_CURRENT_CLASS","DATEVIEW_ROLLER_ITEM_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS","DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS","DateViewRoller","_getDefaultOptions","showScrollbar","useNative","selectedIndex","bounceEnabled","items","showOnClick","onClick","onSelectedIndexChanged","scrollByContent","_init","option","_visibilityChangedHandler","bind","_endActionHandler","_render","_renderSelectedItemFrame","$element","addClass","_renderContainerClick","_renderItems","_renderSelectedValue","_renderItemsClick","_renderWheelEvent","_renderSelectedIndexChanged","_selectedIndexChanged","_createActionByOption","on","container","e","_isWheelScrolled","eventName","NAME","clickAction","off","event","$items","content","empty","forEach","item","add","append","_$items","update","appendTo","index","_fitIndex","_moveTo","top","_getItemPosition","_renderActiveStateItem","itemCount","length","Math","round","_itemHeight","itemSelector","_getItemSelector","_itemClickHandler","_itemElementIndex","currentTarget","itemElement","_itemElements","find","toggleClass","_shouldScrollToNeighborItem","real","deviceType","targetLocation","left","location","scrollOffset","delta","x","y","_isVisible","_prepareDirections","_animation","that","stop","animate","duration","type","to","floor","complete","handleMove","_validate","_moveIsAllowed","_fitSelectedIndexInRange","itemsCount","max","min","_isInNullNeighborhood","_getSelectedIndexAfterScroll","currentSelectedIndex","locationTop","currentSelectedIndexPosition","dy","direction","newSelectedIndex","_getNewSelectedIndex","ratio","$item","first","_toggleActive","state","is","_fireSelectedIndexChanged","value","previousValue","_visibilityChanged","visible","_visibilityTimer","setTimeout","toggleActiveState","_refreshSelectedIndex","fitIndex","_optionChanged","args","_dispose","clearTimeout"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_view_roller.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable.old\";\r\nimport devices from \"../../core/devices\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    resetPosition\r\n} from \"../../animation/translator\";\r\nimport {\r\n    convertToLocation\r\n} from \"../../renovation/ui/scroll_view/utils/convert_location\";\r\nvar DATEVIEW_ROLLER_CLASS = \"dx-dateviewroller\";\r\nvar DATEVIEW_ROLLER_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DATEVIEW_ROLLER_CURRENT_CLASS = \"dx-dateviewroller-current\";\r\nvar DATEVIEW_ROLLER_ITEM_CLASS = \"dx-dateview-item\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_CLASS = \"dx-dateview-item-selected\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS = \"dx-dateview-item-selected-frame\";\r\nvar DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS = \"dx-dateview-item-selected-border\";\r\nclass DateViewRoller extends Scrollable {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            showScrollbar: \"never\",\r\n            useNative: false,\r\n            selectedIndex: 0,\r\n            bounceEnabled: false,\r\n            items: [],\r\n            showOnClick: false,\r\n            onClick: null,\r\n            onSelectedIndexChanged: null,\r\n            scrollByContent: true\r\n        })\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.option(\"onVisibilityChange\", this._visibilityChangedHandler.bind(this));\r\n        this.option(\"onEnd\", this._endActionHandler.bind(this))\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._renderSelectedItemFrame();\r\n        this.$element().addClass(DATEVIEW_ROLLER_CLASS);\r\n        this._renderContainerClick();\r\n        this._renderItems();\r\n        this._renderSelectedValue();\r\n        this._renderItemsClick();\r\n        this._renderWheelEvent();\r\n        this._renderSelectedIndexChanged()\r\n    }\r\n    _renderSelectedIndexChanged() {\r\n        this._selectedIndexChanged = this._createActionByOption(\"onSelectedIndexChanged\")\r\n    }\r\n    _renderWheelEvent() {\r\n        eventsEngine.on($(this.container()), \"dxmousewheel\", e => {\r\n            this._isWheelScrolled = true\r\n        })\r\n    }\r\n    _renderContainerClick() {\r\n        if (!this.option(\"showOnClick\")) {\r\n            return\r\n        }\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        var clickAction = this._createActionByOption(\"onClick\");\r\n        eventsEngine.off($(this.container()), eventName);\r\n        eventsEngine.on($(this.container()), eventName, (function(e) {\r\n            clickAction({\r\n                event: e\r\n            })\r\n        }))\r\n    }\r\n    _renderItems() {\r\n        var items = this.option(\"items\") || [];\r\n        var $items = $();\r\n        $(this.content()).empty();\r\n        items.forEach((function(item) {\r\n            $items = $items.add($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_CLASS).append(item))\r\n        }));\r\n        $(this.content()).append($items);\r\n        this._$items = $items;\r\n        this.update()\r\n    }\r\n    _renderSelectedItemFrame() {\r\n        $(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_FRAME_CLASS).append($(\"<div>\").addClass(DATEVIEW_ROLLER_ITEM_SELECTED_BORDER_CLASS)).appendTo($(this.container()))\r\n    }\r\n    _renderSelectedValue(selectedIndex) {\r\n        var index = this._fitIndex(null !== selectedIndex && void 0 !== selectedIndex ? selectedIndex : this.option(\"selectedIndex\"));\r\n        this._moveTo({\r\n            top: this._getItemPosition(index)\r\n        });\r\n        this._renderActiveStateItem()\r\n    }\r\n    _fitIndex(index) {\r\n        var items = this.option(\"items\") || [];\r\n        var itemCount = items.length;\r\n        if (index >= itemCount) {\r\n            return itemCount - 1\r\n        }\r\n        if (index < 0) {\r\n            return 0\r\n        }\r\n        return index\r\n    }\r\n    _getItemPosition(index) {\r\n        return Math.round(this._itemHeight() * index)\r\n    }\r\n    _renderItemsClick() {\r\n        var itemSelector = this._getItemSelector();\r\n        var eventName = addNamespace(clickEventName, this.NAME);\r\n        eventsEngine.off(this.$element(), eventName, itemSelector);\r\n        eventsEngine.on(this.$element(), eventName, itemSelector, this._itemClickHandler.bind(this))\r\n    }\r\n    _getItemSelector() {\r\n        return \".\" + DATEVIEW_ROLLER_ITEM_CLASS\r\n    }\r\n    _itemClickHandler(e) {\r\n        this.option(\"selectedIndex\", this._itemElementIndex(e.currentTarget))\r\n    }\r\n    _itemElementIndex(itemElement) {\r\n        return this._itemElements().index(itemElement)\r\n    }\r\n    _itemElements() {\r\n        return this.$element().find(this._getItemSelector())\r\n    }\r\n    _renderActiveStateItem() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        each(this._$items, (function(index) {\r\n            $(this).toggleClass(DATEVIEW_ROLLER_ITEM_SELECTED_CLASS, selectedIndex === index)\r\n        }))\r\n    }\r\n    _shouldScrollToNeighborItem() {\r\n        return \"desktop\" === devices.real().deviceType && this._isWheelScrolled\r\n    }\r\n    _moveTo(targetLocation) {\r\n        var {\r\n            top: top,\r\n            left: left\r\n        } = convertToLocation(targetLocation);\r\n        var location = this.scrollOffset();\r\n        var delta = {\r\n            x: location.left - left,\r\n            y: location.top - top\r\n        };\r\n        if (this._isVisible() && (delta.x || delta.y)) {\r\n            this._prepareDirections(true);\r\n            if (this._animation && !this._shouldScrollToNeighborItem()) {\r\n                var that = this;\r\n                fx.stop($(this.content()));\r\n                fx.animate($(this.content()), {\r\n                    duration: 200,\r\n                    type: \"slide\",\r\n                    to: {\r\n                        top: Math.floor(delta.y)\r\n                    },\r\n                    complete() {\r\n                        resetPosition($(that.content()));\r\n                        that.handleMove({\r\n                            delta: delta\r\n                        })\r\n                    }\r\n                });\r\n                delete this._animation\r\n            } else {\r\n                this.handleMove({\r\n                    delta: delta\r\n                })\r\n            }\r\n        }\r\n    }\r\n    _validate(e) {\r\n        return this._moveIsAllowed(e)\r\n    }\r\n    _fitSelectedIndexInRange(index) {\r\n        var itemsCount = this.option(\"items\").length;\r\n        return Math.max(Math.min(index, itemsCount - 1), 0)\r\n    }\r\n    _isInNullNeighborhood(x) {\r\n        return -.1 <= x && x <= .1\r\n    }\r\n    _getSelectedIndexAfterScroll(currentSelectedIndex) {\r\n        var locationTop = this.scrollOffset().top;\r\n        var currentSelectedIndexPosition = currentSelectedIndex * this._itemHeight();\r\n        var dy = locationTop - currentSelectedIndexPosition;\r\n        if (this._isInNullNeighborhood(dy)) {\r\n            return currentSelectedIndex\r\n        }\r\n        var direction = dy > 0 ? 1 : -1;\r\n        var newSelectedIndex = this._fitSelectedIndexInRange(currentSelectedIndex + direction);\r\n        return newSelectedIndex\r\n    }\r\n    _getNewSelectedIndex(currentSelectedIndex) {\r\n        if (this._shouldScrollToNeighborItem()) {\r\n            return this._getSelectedIndexAfterScroll(currentSelectedIndex)\r\n        }\r\n        this._animation = true;\r\n        var ratio = this.scrollOffset().top / this._itemHeight();\r\n        return Math.round(ratio)\r\n    }\r\n    _endActionHandler() {\r\n        var currentSelectedIndex = this.option(\"selectedIndex\");\r\n        var newSelectedIndex = this._getNewSelectedIndex(currentSelectedIndex);\r\n        if (newSelectedIndex === currentSelectedIndex) {\r\n            this._renderSelectedValue(newSelectedIndex)\r\n        } else {\r\n            this.option(\"selectedIndex\", newSelectedIndex)\r\n        }\r\n        this._isWheelScrolled = false\r\n    }\r\n    _itemHeight() {\r\n        var $item = this._$items.first();\r\n        return getHeight($item)\r\n    }\r\n    _toggleActive(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_ACTIVE_CLASS, state)\r\n    }\r\n    _isVisible() {\r\n        return $(this.container()).is(\":visible\")\r\n    }\r\n    _fireSelectedIndexChanged(value, previousValue) {\r\n        this._selectedIndexChanged({\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: void 0\r\n        })\r\n    }\r\n    _visibilityChanged(visible) {\r\n        super._visibilityChanged(visible);\r\n        this._visibilityChangedHandler(visible)\r\n    }\r\n    _visibilityChangedHandler(visible) {\r\n        if (visible) {\r\n            this._visibilityTimer = setTimeout(() => {\r\n                this._renderSelectedValue(this.option(\"selectedIndex\"))\r\n            })\r\n        }\r\n        this.toggleActiveState(false)\r\n    }\r\n    toggleActiveState(state) {\r\n        this.$element().toggleClass(DATEVIEW_ROLLER_CURRENT_CLASS, state)\r\n    }\r\n    _refreshSelectedIndex() {\r\n        var selectedIndex = this.option(\"selectedIndex\");\r\n        var fitIndex = this._fitIndex(selectedIndex);\r\n        if (fitIndex === selectedIndex) {\r\n            this._renderActiveStateItem()\r\n        } else {\r\n            this.option(\"selectedIndex\", fitIndex)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"selectedIndex\":\r\n                this._fireSelectedIndexChanged(args.value, args.previousValue);\r\n                this._renderSelectedValue(args.value);\r\n                break;\r\n            case \"items\":\r\n                this._renderItems();\r\n                this._refreshSelectedIndex();\r\n                break;\r\n            case \"onClick\":\r\n            case \"showOnClick\":\r\n                this._renderContainerClick();\r\n                break;\r\n            case \"onSelectedIndexChanged\":\r\n                this._renderSelectedIndexChanged();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _dispose() {\r\n        clearTimeout(this._visibilityTimer);\r\n        super._dispose()\r\n    }\r\n}\r\nregisterComponent(\"dxDateViewRoller\", DateViewRoller);\r\nexport default DateViewRoller;\r\n"]},"metadata":{},"sourceType":"module"}