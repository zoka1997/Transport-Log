{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/validation_summary.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport registerComponent from \"../core/component_registrator\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport { grep } from \"../core/utils/common\";\nimport { extend } from \"../core/utils/extend\";\nimport { each, map } from \"../core/utils/iterator\";\nimport ValidationEngine from \"./validation_engine\";\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\";\nvar ITEM_CLASS = VALIDATION_SUMMARY_CLASS + \"-item\";\nvar ITEM_DATA_KEY = VALIDATION_SUMMARY_CLASS + \"-item-data\";\nvar ValidationSummary = CollectionWidget.inherit({\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      focusStateEnabled: false,\n      noDataText: null\n    });\n  },\n\n  _setOptionsByReference() {\n    this.callBase();\n    extend(this._optionsByReference, {\n      validationGroup: true\n    });\n  },\n\n  _init() {\n    this.callBase();\n\n    this._initGroupRegistration();\n  },\n\n  _initGroupRegistration() {\n    var $element = this.$element();\n    var group = this.option(\"validationGroup\") || ValidationEngine.findGroup($element, this._modelByElement($element));\n    var groupConfig = ValidationEngine.addGroup(group);\n\n    this._unsubscribeGroup();\n\n    this._groupWasInit = true;\n    this._validationGroup = group;\n    this.groupSubscription = this._groupValidationHandler.bind(this);\n    groupConfig.on(\"validated\", this.groupSubscription);\n  },\n\n  _unsubscribeGroup() {\n    var groupConfig = ValidationEngine.getGroupConfig(this._validationGroup);\n    groupConfig && groupConfig.off(\"validated\", this.groupSubscription);\n  },\n\n  _getOrderedItems(validators, items) {\n    var orderedItems = [];\n    each(validators, function (_, validator) {\n      var foundItems = grep(items, function (item) {\n        if (item.validator === validator) {\n          return true;\n        }\n      });\n\n      if (foundItems.length) {\n        orderedItems = orderedItems.concat(foundItems);\n      }\n    });\n    return orderedItems;\n  },\n\n  _groupValidationHandler(params) {\n    var items = this._getOrderedItems(params.validators, map(params.brokenRules, function (rule) {\n      return {\n        text: rule.message,\n        validator: rule.validator,\n        index: rule.index\n      };\n    }));\n\n    this.validators = params.validators;\n    each(this.validators, (_, validator) => {\n      if (validator._validationSummary !== this) {\n        var handler = this._itemValidationHandler.bind(this);\n\n        validator.on(\"validated\", handler);\n        validator.on(\"disposing\", function () {\n          validator.off(\"validated\", handler);\n          validator._validationSummary = null;\n          handler = null;\n        });\n        validator._validationSummary = this;\n      }\n    });\n    this.option(\"items\", items);\n  },\n\n  _itemValidationHandler(_ref) {\n    var {\n      isValid: isValid,\n      validator: validator,\n      brokenRules: brokenRules\n    } = _ref;\n    var items = this.option(\"items\");\n    var itemsChanged = false;\n    var itemIndex = 0;\n\n    var _loop = function () {\n      var item = items[itemIndex];\n\n      if (item.validator === validator) {\n        var foundRule = grep(brokenRules || [], function (rule) {\n          return rule.index === item.index;\n        })[0];\n\n        if (isValid || !foundRule) {\n          items.splice(itemIndex, 1);\n          itemsChanged = true;\n          return \"continue\";\n        }\n\n        if (foundRule.message !== item.text) {\n          item.text = foundRule.message;\n          itemsChanged = true;\n        }\n      }\n\n      itemIndex++;\n    };\n\n    while (itemIndex < items.length) {\n      var _ret = _loop();\n\n      if (\"continue\" === _ret) {\n        continue;\n      }\n    }\n\n    each(brokenRules, function (_, rule) {\n      var foundItem = grep(items, function (item) {\n        return item.validator === validator && item.index === rule.index;\n      })[0];\n\n      if (!foundItem) {\n        items.push({\n          text: rule.message,\n          validator: validator,\n          index: rule.index\n        });\n        itemsChanged = true;\n      }\n    });\n\n    if (itemsChanged) {\n      items = this._getOrderedItems(this.validators, items);\n      this.option(\"items\", items);\n    }\n  },\n\n  _initMarkup() {\n    this.$element().addClass(VALIDATION_SUMMARY_CLASS);\n    this.callBase();\n  },\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"validationGroup\":\n        this._initGroupRegistration();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  _itemClass: () => ITEM_CLASS,\n  _itemDataKey: () => ITEM_DATA_KEY,\n\n  _postprocessRenderItem(params) {\n    eventsEngine.on(params.itemElement, \"click\", function () {\n      params.itemData.validator && params.itemData.validator.focus && params.itemData.validator.focus();\n    });\n  },\n\n  _dispose() {\n    this.callBase();\n\n    this._unsubscribeGroup();\n  },\n\n  refreshValidationGroup() {\n    this._initGroupRegistration();\n  }\n\n});\nregisterComponent(\"dxValidationSummary\", ValidationSummary);\nexport default ValidationSummary;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/validation_summary.js"],"names":["registerComponent","eventsEngine","grep","extend","each","map","ValidationEngine","CollectionWidget","VALIDATION_SUMMARY_CLASS","ITEM_CLASS","ITEM_DATA_KEY","ValidationSummary","inherit","_getDefaultOptions","callBase","focusStateEnabled","noDataText","_setOptionsByReference","_optionsByReference","validationGroup","_init","_initGroupRegistration","$element","group","option","findGroup","_modelByElement","groupConfig","addGroup","_unsubscribeGroup","_groupWasInit","_validationGroup","groupSubscription","_groupValidationHandler","bind","on","getGroupConfig","off","_getOrderedItems","validators","items","orderedItems","_","validator","foundItems","item","length","concat","params","brokenRules","rule","text","message","index","_validationSummary","handler","_itemValidationHandler","_ref","isValid","itemsChanged","itemIndex","_loop","foundRule","splice","_ret","foundItem","push","_initMarkup","addClass","_optionChanged","args","name","_itemClass","_itemDataKey","_postprocessRenderItem","itemElement","itemData","focus","_dispose","refreshValidationGroup"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/validation_summary.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    grep\r\n} from \"../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../core/utils/iterator\";\r\nimport ValidationEngine from \"./validation_engine\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nvar VALIDATION_SUMMARY_CLASS = \"dx-validationsummary\";\r\nvar ITEM_CLASS = VALIDATION_SUMMARY_CLASS + \"-item\";\r\nvar ITEM_DATA_KEY = VALIDATION_SUMMARY_CLASS + \"-item-data\";\r\nvar ValidationSummary = CollectionWidget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            focusStateEnabled: false,\r\n            noDataText: null\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._initGroupRegistration()\r\n    },\r\n    _initGroupRegistration() {\r\n        var $element = this.$element();\r\n        var group = this.option(\"validationGroup\") || ValidationEngine.findGroup($element, this._modelByElement($element));\r\n        var groupConfig = ValidationEngine.addGroup(group);\r\n        this._unsubscribeGroup();\r\n        this._groupWasInit = true;\r\n        this._validationGroup = group;\r\n        this.groupSubscription = this._groupValidationHandler.bind(this);\r\n        groupConfig.on(\"validated\", this.groupSubscription)\r\n    },\r\n    _unsubscribeGroup() {\r\n        var groupConfig = ValidationEngine.getGroupConfig(this._validationGroup);\r\n        groupConfig && groupConfig.off(\"validated\", this.groupSubscription)\r\n    },\r\n    _getOrderedItems(validators, items) {\r\n        var orderedItems = [];\r\n        each(validators, (function(_, validator) {\r\n            var foundItems = grep(items, (function(item) {\r\n                if (item.validator === validator) {\r\n                    return true\r\n                }\r\n            }));\r\n            if (foundItems.length) {\r\n                orderedItems = orderedItems.concat(foundItems)\r\n            }\r\n        }));\r\n        return orderedItems\r\n    },\r\n    _groupValidationHandler(params) {\r\n        var items = this._getOrderedItems(params.validators, map(params.brokenRules, (function(rule) {\r\n            return {\r\n                text: rule.message,\r\n                validator: rule.validator,\r\n                index: rule.index\r\n            }\r\n        })));\r\n        this.validators = params.validators;\r\n        each(this.validators, (_, validator) => {\r\n            if (validator._validationSummary !== this) {\r\n                var handler = this._itemValidationHandler.bind(this);\r\n                validator.on(\"validated\", handler);\r\n                validator.on(\"disposing\", (function() {\r\n                    validator.off(\"validated\", handler);\r\n                    validator._validationSummary = null;\r\n                    handler = null\r\n                }));\r\n                validator._validationSummary = this\r\n            }\r\n        });\r\n        this.option(\"items\", items)\r\n    },\r\n    _itemValidationHandler(_ref) {\r\n        var {\r\n            isValid: isValid,\r\n            validator: validator,\r\n            brokenRules: brokenRules\r\n        } = _ref;\r\n        var items = this.option(\"items\");\r\n        var itemsChanged = false;\r\n        var itemIndex = 0;\r\n        var _loop = function() {\r\n            var item = items[itemIndex];\r\n            if (item.validator === validator) {\r\n                var foundRule = grep(brokenRules || [], (function(rule) {\r\n                    return rule.index === item.index\r\n                }))[0];\r\n                if (isValid || !foundRule) {\r\n                    items.splice(itemIndex, 1);\r\n                    itemsChanged = true;\r\n                    return \"continue\"\r\n                }\r\n                if (foundRule.message !== item.text) {\r\n                    item.text = foundRule.message;\r\n                    itemsChanged = true\r\n                }\r\n            }\r\n            itemIndex++\r\n        };\r\n        while (itemIndex < items.length) {\r\n            var _ret = _loop();\r\n            if (\"continue\" === _ret) {\r\n                continue\r\n            }\r\n        }\r\n        each(brokenRules, (function(_, rule) {\r\n            var foundItem = grep(items, (function(item) {\r\n                return item.validator === validator && item.index === rule.index\r\n            }))[0];\r\n            if (!foundItem) {\r\n                items.push({\r\n                    text: rule.message,\r\n                    validator: validator,\r\n                    index: rule.index\r\n                });\r\n                itemsChanged = true\r\n            }\r\n        }));\r\n        if (itemsChanged) {\r\n            items = this._getOrderedItems(this.validators, items);\r\n            this.option(\"items\", items)\r\n        }\r\n    },\r\n    _initMarkup() {\r\n        this.$element().addClass(VALIDATION_SUMMARY_CLASS);\r\n        this.callBase()\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"validationGroup\":\r\n                this._initGroupRegistration();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemClass: () => ITEM_CLASS,\r\n    _itemDataKey: () => ITEM_DATA_KEY,\r\n    _postprocessRenderItem(params) {\r\n        eventsEngine.on(params.itemElement, \"click\", (function() {\r\n            params.itemData.validator && params.itemData.validator.focus && params.itemData.validator.focus()\r\n        }))\r\n    },\r\n    _dispose() {\r\n        this.callBase();\r\n        this._unsubscribeGroup()\r\n    },\r\n    refreshValidationGroup() {\r\n        this._initGroupRegistration()\r\n    }\r\n});\r\nregisterComponent(\"dxValidationSummary\", ValidationSummary);\r\nexport default ValidationSummary;\r\n"]},"metadata":{},"sourceType":"module"}