{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../../ui/widget/ui.errors\";\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\nimport TextBox from \"../../ui/text_box\";\nimport query from \"../../data/query\";\nimport storeHelper from \"../../data/store_helper\";\nimport HierarchicalDataConverter from \"./ui.data_converter\";\nvar EXPANDED = \"expanded\";\nvar SELECTED = \"selected\";\nvar DISABLED = \"disabled\";\nuiSearchBoxMixin.setEditorClass(TextBox);\nvar DataAdapter = Class.inherit({\n  ctor: function (options) {\n    this.options = {};\n    extend(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n\n    this._createInternalDataStructure();\n\n    this.getTreeNodes();\n  },\n  setOption: function (name, value) {\n    this.options[name] = value;\n\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function () {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new HierarchicalDataConverter(),\n      onNodeChanged: noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function () {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  _updateSelection: function () {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function (key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function (property) {\n    var that = this;\n    var array = [];\n    each(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function () {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function (node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function (data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function (key) {\n    var that = this;\n    var node = this.getNodeByKey(key);\n\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function (node, recursive, callback, processedKeys) {\n    if (!isFunction(callback)) {\n      return;\n    }\n\n    var that = this;\n    var nodeKey = node.internalFields.key;\n    processedKeys = processedKeys || [];\n\n    if (-1 === processedKeys.indexOf(nodeKey)) {\n      processedKeys.push(nodeKey);\n      each(node.internalFields.childrenKeys, function (_, key) {\n        var child = that.getNodeByKey(key);\n        callback(child);\n\n        if (child.internalFields.childrenKeys.length && recursive) {\n          that._iterateChildren(child, recursive, callback, processedKeys);\n        }\n      });\n    }\n  },\n  _iterateParents: function (node, callback, processedKeys) {\n    if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\n      return;\n    }\n\n    processedKeys = processedKeys || [];\n    var key = node.internalFields.key;\n\n    if (-1 === processedKeys.indexOf(key)) {\n      processedKeys.push(key);\n      var parent = this.options.dataConverter.getParentNode(node);\n\n      if (parent) {\n        callback(parent);\n\n        if (parent.internalFields.parentKey !== this.options.rootValue) {\n          this._iterateParents(parent, callback, processedKeys);\n        }\n      }\n    }\n  },\n  _calculateSelectedState: function (node) {\n    var itemsCount = node.internalFields.childrenKeys.length;\n    var selectedItemsCount = 0;\n    var invisibleItemsCount = 0;\n    var result = false;\n\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\n      var isChildInvisible = false === childNode.internalFields.item.visible;\n      var childState = childNode.internalFields.selected;\n\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n\n      if (childState) {\n        selectedItemsCount++;\n      } else if (void 0 === childState) {\n        selectedItemsCount += .5;\n      }\n    }\n\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n\n    return result;\n  },\n  _toggleChildrenSelection: function (node, state) {\n    var that = this;\n\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function (node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n\n    node.internalFields[field] = state;\n\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function (keys) {\n    var that = this;\n    each(keys, function (_, key) {\n      var index = that.getIndexByKey(key);\n      var node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function (key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n\n    this._markChildren(node.internalFields.childrenKeys);\n\n    var that = this;\n    var counter = 0;\n    var items = extend([], this._dataStructure);\n    each(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n\n        counter++;\n      }\n    });\n  },\n  _addNode: function (item) {\n    var dataConverter = this.options.dataConverter;\n\n    var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function () {\n    this.options.dataConverter.updateChildrenKeys();\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function () {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function () {\n    return this._expandedNodesKeys;\n  },\n  getData: function () {\n    return this._dataStructure;\n  },\n  getFullData: function () {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function (item) {\n    var result = null;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function (items) {\n    var that = this;\n    var nodes = [];\n    each(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function (key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function () {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function () {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function () {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function (node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function () {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function (parentKey) {\n    return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function (key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function (item) {\n    this._addNode(item);\n\n    this._updateFields();\n  },\n  removeItem: function (key) {\n    this._removeNode(key);\n\n    this._updateFields();\n  },\n  toggleSelection: function (key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state);\n\n    var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n\n    this._setFieldState(node, SELECTED, state);\n\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function (selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function (state) {\n    if (!isDefined(state)) {\n      return;\n    }\n\n    var that = this;\n    var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\n    var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    each(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function () {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, EXPANDED, state);\n\n    if (state) {\n      this._updateExpansion(key);\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function (item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function (selector, value, operation) {\n    var searchFilter = [];\n\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n\n    each(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function (filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\n    var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\n\n    var criteria = this._createCriteria(selector, filterValue, operation);\n\n    dataStructure = dataStructure || this._initialDataStructure;\n    return query(dataStructure).filter(criteria).toArray();\n  },\n  search: function (searchValue) {\n    var that = this;\n\n    var matches = this._filterDataStructure(searchValue);\n\n    var dataConverter = this.options.dataConverter;\n    !function lookForParents(matches, index) {\n      var length = matches.length;\n\n      while (index < length) {\n        var node = matches[index];\n\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n\n        var parent = dataConverter.getParentNode(node);\n\n        if (!parent) {\n          errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n          index++;\n          continue;\n        }\n\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n\n        if (matches.includes(parent)) {\n          index++;\n          continue;\n        }\n\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }(matches, 0);\n\n    if (this.options.sort) {\n      matches = storeHelper.queryByOptions(query(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n\n    dataConverter._indexByKey = {};\n    each(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\nexport default DataAdapter;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/hierarchical_collection/ui.data_adapter.js"],"names":["Class","noop","each","isFunction","isDefined","extend","errors","uiSearchBoxMixin","TextBox","query","storeHelper","HierarchicalDataConverter","EXPANDED","SELECTED","DISABLED","setEditorClass","DataAdapter","inherit","ctor","options","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","processedKeys","nodeKey","indexOf","child","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","getOperationBySearchMode","criteria","matches","lookForParents","log","includes","queryByOptions","_indexByKey","setChildrenKeys"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../../ui/widget/ui.errors\";\r\nimport uiSearchBoxMixin from \"../../ui/widget/ui.search_box_mixin\";\r\nimport TextBox from \"../../ui/text_box\";\r\nimport query from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport HierarchicalDataConverter from \"./ui.data_converter\";\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nuiSearchBoxMixin.setEditorClass(TextBox);\r\nvar DataAdapter = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        extend(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new HierarchicalDataConverter,\r\n            onNodeChanged: noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        each(that._getDataBySelectionMode(), (function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        }));\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        }))\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, (function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        }))\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, (function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        }))\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!isFunction(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (-1 === processedKeys.indexOf(nodeKey)) {\r\n            processedKeys.push(nodeKey);\r\n            each(node.internalFields.childrenKeys, (function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !isFunction(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (-1 === processedKeys.indexOf(key)) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else if (void 0 === childState) {\r\n                selectedItemsCount += .5\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, (function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        }))\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        each(keys, (function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        }))\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = extend([], this._dataStructure);\r\n        each(items, (function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        }))\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        each(items, (function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        }));\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!isDefined(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        each(dataStructure, (function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        }));\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }\r\n        each(selector, (function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        }));\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = uiSearchBoxMixin.getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return query(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n        ! function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if (matches.includes(parent)) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = storeHelper.queryByOptions(query(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        each(matches, (function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        }));\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nexport default DataAdapter;\r\n"]},"metadata":{},"sourceType":"module"}