{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\nimport { createVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { format } from \"../../../core/utils/string\";\nimport messageLocalization from \"../../../localization/message\";\nimport { InternalPagerProps } from \"./common/pager_props\";\nexport var PAGER_INFO_CLASS = \"dx-info\";\nexport var viewFunction = _ref => {\n  var {\n    props: {\n      rootElementRef: rootElementRef\n    },\n    text: text\n  } = _ref;\n  return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef);\n};\nexport var InfoTextProps = {};\nvar InfoTextPropsType = {\n  get pageIndex() {\n    return InternalPagerProps.pageIndex;\n  },\n\n  get pageCount() {\n    return InternalPagerProps.pageCount;\n  },\n\n  get totalCount() {\n    return InternalPagerProps.totalCount;\n  }\n\n};\nexport class InfoText extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get infoText() {\n    var _this$props$infoText;\n\n    return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")();\n  }\n\n  get text() {\n    var {\n      pageCount: pageCount,\n      pageIndex: pageIndex,\n      totalCount: totalCount\n    } = this.props;\n    return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString());\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props),\n      infoText: this.infoText,\n      text: this.text,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nInfoText.defaultProps = InfoTextPropsType;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/pager/info.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","BaseInfernoComponent","format","messageLocalization","InternalPagerProps","PAGER_INFO_CLASS","viewFunction","_ref","props","rootElementRef","text","InfoTextProps","InfoTextPropsType","pageIndex","pageCount","totalCount","InfoText","constructor","state","infoText","_this$props$infoText","getFormatter","toString","restAttributes","_this$props","restProps","render","defaultProps"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAIC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,WAA1B,EAAuC,gBAAvC,EAAyD,YAAzD,CAAhB;AACA,SACIC,WADJ,QAEO,SAFP;AAGA,SACIC,oBADJ,QAEO,6BAFP;AAGA,SACIC,MADJ,QAEO,4BAFP;AAGA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,SACIC,kBADJ,QAEO,sBAFP;AAGA,OAAO,IAAIC,gBAAgB,GAAG,SAAvB;AACP,OAAO,IAAIC,YAAY,GAAGC,IAAI,IAAI;AAC9B,MAAI;AACAC,IAAAA,KAAK,EAAE;AACHC,MAAAA,cAAc,EAAEA;AADb,KADP;AAIAC,IAAAA,IAAI,EAAEA;AAJN,MAKAH,IALJ;AAMA,SAAOP,WAAW,CAAC,CAAD,EAAI,KAAJ,EAAWK,gBAAX,EAA6BK,IAA7B,EAAmC,CAAnC,EAAsC,IAAtC,EAA4C,IAA5C,EAAkDD,cAAlD,CAAlB;AACH,CARM;AASP,OAAO,IAAIE,aAAa,GAAG,EAApB;AACP,IAAIC,iBAAiB,GAAG;AACpB,MAAIC,SAAJ,GAAgB;AACZ,WAAOT,kBAAkB,CAACS,SAA1B;AACH,GAHmB;;AAIpB,MAAIC,SAAJ,GAAgB;AACZ,WAAOV,kBAAkB,CAACU,SAA1B;AACH,GANmB;;AAOpB,MAAIC,UAAJ,GAAiB;AACb,WAAOX,kBAAkB,CAACW,UAA1B;AACH;;AATmB,CAAxB;AAWA,OAAO,MAAMC,QAAN,SAAuBf,oBAAvB,CAA4C;AAC/CgB,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKU,KAAL,GAAa,EAAb;AACH;;AACW,MAARC,QAAQ,GAAG;AACX,QAAIC,oBAAJ;;AACA,WAAO,CAAC,UAAUA,oBAAoB,GAAG,KAAKZ,KAAL,CAAWW,QAA5C,KAAyD,KAAK,CAAL,KAAWC,oBAApE,GAA2FA,oBAA3F,GAAkH,EAAnH,KAA0HjB,mBAAmB,CAACkB,YAApB,CAAiC,kBAAjC,GAAjI;AACH;;AACO,MAAJX,IAAI,GAAG;AACP,QAAI;AACAI,MAAAA,SAAS,EAAEA,SADX;AAEAD,MAAAA,SAAS,EAAEA,SAFX;AAGAE,MAAAA,UAAU,EAAEA;AAHZ,QAIA,KAAKP,KAJT;AAKA,WAAON,MAAM,CAAC,KAAKiB,QAAN,EAAgB,CAACN,SAAS,GAAG,CAAb,EAAgBS,QAAhB,EAAhB,EAA4CR,SAAS,CAACQ,QAAV,EAA5C,EAAkEP,UAAU,CAACO,QAAX,EAAlE,CAAb;AACH;;AACiB,MAAdC,cAAc,GAAG;AACjB,QAAIC,WAAW,GAAG,KAAKhB,KAAvB;AAAA,QACIiB,SAAS,GAAG3B,6BAA6B,CAAC0B,WAAD,EAAczB,SAAd,CAD7C;;AAEA,WAAO0B,SAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIlB,KAAK,GAAG,KAAKA,KAAjB;AACA,WAAOF,YAAY,CAAC;AAChBE,MAAAA,KAAK,EAAEX,QAAQ,CAAC,EAAD,EAAKW,KAAL,CADC;AAEhBW,MAAAA,QAAQ,EAAE,KAAKA,QAFC;AAGhBT,MAAAA,IAAI,EAAE,KAAKA,IAHK;AAIhBa,MAAAA,cAAc,EAAE,KAAKA;AAJL,KAAD,CAAnB;AAMH;;AA9B8C;AAgCnDP,QAAQ,CAACW,YAAT,GAAwBf,iBAAxB","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n"]},"metadata":{},"sourceType":"module"}