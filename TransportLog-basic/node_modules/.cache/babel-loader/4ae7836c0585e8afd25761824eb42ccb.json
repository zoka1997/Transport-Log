{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/text_box/text_box.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport { extend } from \"../../core/utils/extend\";\nimport registerComponent from \"../../core/component_registrator\";\nimport TextEditor from \"./ui.text_editor\";\nimport { normalizeKeyName } from \"../../events/utils/index\";\nimport { getOuterWidth, getWidth } from \"../../core/utils/size\";\nvar ignoreKeys = [\"backspace\", \"tab\", \"enter\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"rightArrow\", \"downArrow\", \"upArrow\", \"del\"];\nvar TEXTBOX_CLASS = \"dx-textbox\";\nvar SEARCHBOX_CLASS = \"dx-searchbox\";\nvar ICON_CLASS = \"dx-icon\";\nvar SEARCH_ICON_CLASS = \"dx-icon-search\";\nvar TextBox = TextEditor.inherit({\n  ctor: function (element, options) {\n    if (options) {\n      this._showClearButton = options.showClearButton;\n    }\n\n    this.callBase.apply(this, arguments);\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      value: \"\",\n      mode: \"text\",\n      maxLength: null\n    });\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTBOX_CLASS);\n    this.callBase();\n    this.setAria(\"role\", \"textbox\");\n  },\n  _renderInputType: function () {\n    this.callBase();\n\n    this._renderSearchMode();\n  },\n  _useTemplates: function () {\n    return false;\n  },\n  _renderProps: function () {\n    this.callBase();\n\n    this._toggleMaxLengthProp();\n  },\n  _toggleMaxLengthProp: function () {\n    var maxLength = this._getMaxLength();\n\n    if (maxLength && maxLength > 0) {\n      this._input().attr(\"maxLength\", maxLength);\n    } else {\n      this._input().removeAttr(\"maxLength\");\n    }\n  },\n  _renderSearchMode: function () {\n    var $element = this._$element;\n\n    if (\"search\" === this.option(\"mode\")) {\n      $element.addClass(SEARCHBOX_CLASS);\n\n      this._renderSearchIcon();\n\n      if (void 0 === this._showClearButton) {\n        this._showClearButton = this.option(\"showClearButton\");\n        this.option(\"showClearButton\", true);\n      }\n    } else {\n      $element.removeClass(SEARCHBOX_CLASS);\n      this._$searchIcon && this._$searchIcon.remove();\n      this.option(\"showClearButton\", void 0 === this._showClearButton ? this.option(\"showClearButton\") : this._showClearButton);\n      delete this._showClearButton;\n    }\n  },\n  _renderSearchIcon: function () {\n    var $searchIcon = $(\"<div>\").addClass(ICON_CLASS).addClass(SEARCH_ICON_CLASS);\n    $searchIcon.prependTo(this._input().parent());\n    this._$searchIcon = $searchIcon;\n  },\n  _getLabelContainerWidth: function () {\n    if (this._$searchIcon) {\n      var $inputContainer = this._input().parent();\n\n      return getWidth($inputContainer) - this._getLabelBeforeWidth();\n    }\n\n    return this.callBase();\n  },\n  _getLabelBeforeWidth: function () {\n    var labelBeforeWidth = this.callBase();\n\n    if (this._$searchIcon) {\n      labelBeforeWidth += getOuterWidth(this._$searchIcon);\n    }\n\n    return labelBeforeWidth;\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"maxLength\":\n        this._toggleMaxLengthProp();\n\n        break;\n\n      case \"mode\":\n        this.callBase(args);\n\n        this._updateLabelWidth();\n\n        break;\n\n      case \"mask\":\n        this.callBase(args);\n\n        this._toggleMaxLengthProp();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _onKeyDownCutOffHandler: function (e) {\n    var actualMaxLength = this._getMaxLength();\n\n    if (actualMaxLength && !e.ctrlKey && !this._hasSelection()) {\n      var $input = $(e.target);\n      var key = normalizeKeyName(e);\n\n      this._cutOffExtraChar($input);\n\n      return $input.val().length < actualMaxLength || ignoreKeys.includes(key) || \"\" !== window.getSelection().toString();\n    } else {\n      return true;\n    }\n  },\n  _onChangeCutOffHandler: function (e) {\n    var $input = $(e.target);\n\n    if (this.option(\"maxLength\")) {\n      this._cutOffExtraChar($input);\n    }\n  },\n  _cutOffExtraChar: function ($input) {\n    var actualMaxLength = this._getMaxLength();\n\n    var textInput = $input.val();\n\n    if (actualMaxLength && textInput.length > actualMaxLength) {\n      $input.val(textInput.substr(0, actualMaxLength));\n    }\n  },\n  _getMaxLength: function () {\n    var isMaskSpecified = !!this.option(\"mask\");\n    return isMaskSpecified ? null : this.option(\"maxLength\");\n  }\n});\nregisterComponent(\"dxTextBox\", TextBox);\nexport default TextBox;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/text_box/text_box.js"],"names":["$","getWindow","window","extend","registerComponent","TextEditor","normalizeKeyName","getOuterWidth","getWidth","ignoreKeys","TEXTBOX_CLASS","SEARCHBOX_CLASS","ICON_CLASS","SEARCH_ICON_CLASS","TextBox","inherit","ctor","element","options","_showClearButton","showClearButton","callBase","apply","arguments","_getDefaultOptions","value","mode","maxLength","_initMarkup","$element","addClass","setAria","_renderInputType","_renderSearchMode","_useTemplates","_renderProps","_toggleMaxLengthProp","_getMaxLength","_input","attr","removeAttr","_$element","option","_renderSearchIcon","removeClass","_$searchIcon","remove","$searchIcon","prependTo","parent","_getLabelContainerWidth","$inputContainer","_getLabelBeforeWidth","labelBeforeWidth","_optionChanged","args","name","_updateLabelWidth","_onKeyDownCutOffHandler","e","actualMaxLength","ctrlKey","_hasSelection","$input","target","key","_cutOffExtraChar","val","length","includes","getSelection","toString","_onChangeCutOffHandler","textInput","substr","isMaskSpecified"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/text_box.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport TextEditor from \"./ui.text_editor\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nvar ignoreKeys = [\"backspace\", \"tab\", \"enter\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"rightArrow\", \"downArrow\", \"upArrow\", \"del\"];\r\nvar TEXTBOX_CLASS = \"dx-textbox\";\r\nvar SEARCHBOX_CLASS = \"dx-searchbox\";\r\nvar ICON_CLASS = \"dx-icon\";\r\nvar SEARCH_ICON_CLASS = \"dx-icon-search\";\r\nvar TextBox = TextEditor.inherit({\r\n    ctor: function(element, options) {\r\n        if (options) {\r\n            this._showClearButton = options.showClearButton\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: \"\",\r\n            mode: \"text\",\r\n            maxLength: null\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTBOX_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"textbox\")\r\n    },\r\n    _renderInputType: function() {\r\n        this.callBase();\r\n        this._renderSearchMode()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._toggleMaxLengthProp()\r\n    },\r\n    _toggleMaxLengthProp: function() {\r\n        var maxLength = this._getMaxLength();\r\n        if (maxLength && maxLength > 0) {\r\n            this._input().attr(\"maxLength\", maxLength)\r\n        } else {\r\n            this._input().removeAttr(\"maxLength\")\r\n        }\r\n    },\r\n    _renderSearchMode: function() {\r\n        var $element = this._$element;\r\n        if (\"search\" === this.option(\"mode\")) {\r\n            $element.addClass(SEARCHBOX_CLASS);\r\n            this._renderSearchIcon();\r\n            if (void 0 === this._showClearButton) {\r\n                this._showClearButton = this.option(\"showClearButton\");\r\n                this.option(\"showClearButton\", true)\r\n            }\r\n        } else {\r\n            $element.removeClass(SEARCHBOX_CLASS);\r\n            this._$searchIcon && this._$searchIcon.remove();\r\n            this.option(\"showClearButton\", void 0 === this._showClearButton ? this.option(\"showClearButton\") : this._showClearButton);\r\n            delete this._showClearButton\r\n        }\r\n    },\r\n    _renderSearchIcon: function() {\r\n        var $searchIcon = $(\"<div>\").addClass(ICON_CLASS).addClass(SEARCH_ICON_CLASS);\r\n        $searchIcon.prependTo(this._input().parent());\r\n        this._$searchIcon = $searchIcon\r\n    },\r\n    _getLabelContainerWidth: function() {\r\n        if (this._$searchIcon) {\r\n            var $inputContainer = this._input().parent();\r\n            return getWidth($inputContainer) - this._getLabelBeforeWidth()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _getLabelBeforeWidth: function() {\r\n        var labelBeforeWidth = this.callBase();\r\n        if (this._$searchIcon) {\r\n            labelBeforeWidth += getOuterWidth(this._$searchIcon)\r\n        }\r\n        return labelBeforeWidth\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"maxLength\":\r\n                this._toggleMaxLengthProp();\r\n                break;\r\n            case \"mode\":\r\n                this.callBase(args);\r\n                this._updateLabelWidth();\r\n                break;\r\n            case \"mask\":\r\n                this.callBase(args);\r\n                this._toggleMaxLengthProp();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _onKeyDownCutOffHandler: function(e) {\r\n        var actualMaxLength = this._getMaxLength();\r\n        if (actualMaxLength && !e.ctrlKey && !this._hasSelection()) {\r\n            var $input = $(e.target);\r\n            var key = normalizeKeyName(e);\r\n            this._cutOffExtraChar($input);\r\n            return $input.val().length < actualMaxLength || ignoreKeys.includes(key) || \"\" !== window.getSelection().toString()\r\n        } else {\r\n            return true\r\n        }\r\n    },\r\n    _onChangeCutOffHandler: function(e) {\r\n        var $input = $(e.target);\r\n        if (this.option(\"maxLength\")) {\r\n            this._cutOffExtraChar($input)\r\n        }\r\n    },\r\n    _cutOffExtraChar: function($input) {\r\n        var actualMaxLength = this._getMaxLength();\r\n        var textInput = $input.val();\r\n        if (actualMaxLength && textInput.length > actualMaxLength) {\r\n            $input.val(textInput.substr(0, actualMaxLength))\r\n        }\r\n    },\r\n    _getMaxLength: function() {\r\n        var isMaskSpecified = !!this.option(\"mask\");\r\n        return isMaskSpecified ? null : this.option(\"maxLength\")\r\n    }\r\n});\r\nregisterComponent(\"dxTextBox\", TextBox);\r\nexport default TextBox;\r\n"]},"metadata":{},"sourceType":"module"}