{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { isDate } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport dateLocalization from \"../../localization/date\";\nvar DATE_COMPONENTS = [\"year\", \"day\", \"month\", \"day\"];\nvar TIME_COMPONENTS = [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"];\nvar ONE_MINUTE = 6e4;\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\nvar ONE_YEAR = 365 * ONE_DAY;\n\nvar getStringFormat = function (format) {\n  var formatType = typeof format;\n\n  if (\"string\" === formatType) {\n    return \"format\";\n  }\n\n  if (\"object\" === formatType && void 0 !== format.type) {\n    return format.type;\n  }\n\n  return null;\n};\n\nvar dateUtils = {\n  SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\n  ONE_MINUTE: ONE_MINUTE,\n  ONE_DAY: ONE_DAY,\n  ONE_YEAR: ONE_YEAR,\n  MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\n  MAX_DATEVIEW_DEFAULT_DATE: function () {\n    var newDate = new Date();\n    return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59);\n  }(),\n  FORMATS_INFO: {\n    date: {\n      getStandardPattern: function () {\n        return \"yyyy-MM-dd\";\n      },\n      components: DATE_COMPONENTS\n    },\n    time: {\n      getStandardPattern: function () {\n        return \"HH:mm\";\n      },\n      components: TIME_COMPONENTS\n    },\n    datetime: {\n      getStandardPattern: function () {\n        var standardPattern;\n        !function () {\n          var $input = $(\"<input>\").attr(\"type\", \"datetime\");\n          $input.val(\"2000-01-01T01:01Z\");\n\n          if ($input.val()) {\n            standardPattern = \"yyyy-MM-ddTHH:mmZ\";\n          }\n        }();\n\n        if (!standardPattern) {\n          standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\";\n        }\n\n        dateUtils.FORMATS_INFO.datetime.getStandardPattern = function () {\n          return standardPattern;\n        };\n\n        return standardPattern;\n      },\n      components: [...DATE_COMPONENTS, ...TIME_COMPONENTS]\n    },\n    \"datetime-local\": {\n      getStandardPattern: function () {\n        return \"yyyy-MM-ddTHH:mm:ss\";\n      },\n      components: [...DATE_COMPONENTS, \"hours\", \"minutes\", \"seconds\"]\n    }\n  },\n  FORMATS_MAP: {\n    date: \"shortdate\",\n    time: \"shorttime\",\n    datetime: \"shortdateshorttime\"\n  },\n  SUBMIT_FORMATS_MAP: {\n    date: \"date\",\n    time: \"time\",\n    datetime: \"datetime-local\"\n  },\n  toStandardDateFormat: function (date, type) {\n    var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\n    return dateSerialization.serializeDate(date, pattern);\n  },\n  fromStandardDateFormat: function (text) {\n    var date = dateSerialization.dateParser(text);\n    return isDate(date) ? date : void 0;\n  },\n  getMaxMonthDay: function (year, month) {\n    return new Date(year, month + 1, 0).getDate();\n  },\n  mergeDates: function (oldValue, newValue, format) {\n    if (!newValue) {\n      return newValue || null;\n    }\n\n    if (!oldValue || isNaN(oldValue.getTime())) {\n      var now = new Date(null);\n      oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    }\n\n    var result = new Date(oldValue.valueOf());\n    var formatInfo = dateUtils.FORMATS_INFO[format];\n    each(formatInfo.components, function () {\n      var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\n      result[componentInfo.setter](newValue[componentInfo.getter]());\n    });\n    return result;\n  },\n  getLongestCaptionIndex: function (captionArray) {\n    var longestIndex = 0;\n    var longestCaptionLength = 0;\n    var i;\n\n    for (i = 0; i < captionArray.length; ++i) {\n      if (captionArray[i].length > longestCaptionLength) {\n        longestIndex = i;\n        longestCaptionLength = captionArray[i].length;\n      }\n    }\n\n    return longestIndex;\n  },\n  formatUsesMonthName: function (format) {\n    return dateLocalization.formatUsesMonthName(format);\n  },\n  formatUsesDayName: function (format) {\n    return dateLocalization.formatUsesDayName(format);\n  },\n  getLongestDate: function (format, monthNames, dayNames) {\n    var stringFormat = getStringFormat(format);\n    var month = 9;\n\n    if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\n      month = dateUtils.getLongestCaptionIndex(monthNames);\n    }\n\n    var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\n\n    if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\n      var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\n      longestDate.setDate(date);\n    }\n\n    return longestDate;\n  },\n  normalizeTime: function (date) {\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n  }\n};\ndateUtils.DATE_COMPONENTS_INFO = {\n  year: {\n    getter: \"getFullYear\",\n    setter: \"setFullYear\",\n    formatter: function (value, date) {\n      var formatDate = new Date(date.getTime());\n      formatDate.setFullYear(value);\n      return dateLocalization.format(formatDate, \"yyyy\");\n    },\n    startValue: void 0,\n    endValue: void 0\n  },\n  day: {\n    getter: \"getDate\",\n    setter: \"setDate\",\n    formatter: function (value, date) {\n      var formatDate = new Date(date.getTime());\n      formatDate.setDate(value);\n      return dateLocalization.format(formatDate, \"d\");\n    },\n    startValue: 1,\n    endValue: void 0\n  },\n  month: {\n    getter: \"getMonth\",\n    setter: \"setMonth\",\n    formatter: function (value) {\n      return dateLocalization.getMonthNames()[value];\n    },\n    startValue: 0,\n    endValue: 11\n  },\n  hours: {\n    getter: \"getHours\",\n    setter: \"setHours\",\n    formatter: function (value) {\n      return dateLocalization.format(new Date(0, 0, 0, value), \"hour\");\n    },\n    startValue: 0,\n    endValue: 23\n  },\n  minutes: {\n    getter: \"getMinutes\",\n    setter: \"setMinutes\",\n    formatter: function (value) {\n      return dateLocalization.format(new Date(0, 0, 0, 0, value), \"minute\");\n    },\n    startValue: 0,\n    endValue: 59\n  },\n  seconds: {\n    getter: \"getSeconds\",\n    setter: \"setSeconds\",\n    formatter: function (value) {\n      return dateLocalization.format(new Date(0, 0, 0, 0, 0, value), \"second\");\n    },\n    startValue: 0,\n    endValue: 59\n  },\n  milliseconds: {\n    getter: \"getMilliseconds\",\n    setter: \"setMilliseconds\",\n    formatter: function (value) {\n      return dateLocalization.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\");\n    },\n    startValue: 0,\n    endValue: 999\n  }\n};\nexport default dateUtils;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/date_box/ui.date_utils.js"],"names":["$","dateSerialization","isDate","each","dateLocalization","DATE_COMPONENTS","TIME_COMPONENTS","ONE_MINUTE","ONE_DAY","ONE_YEAR","getStringFormat","format","formatType","type","dateUtils","SUPPORTED_FORMATS","MIN_DATEVIEW_DEFAULT_DATE","Date","MAX_DATEVIEW_DEFAULT_DATE","newDate","getFullYear","getMonth","getDate","FORMATS_INFO","date","getStandardPattern","components","time","datetime","standardPattern","$input","attr","val","FORMATS_MAP","SUBMIT_FORMATS_MAP","toStandardDateFormat","pattern","serializeDate","fromStandardDateFormat","text","dateParser","getMaxMonthDay","year","month","mergeDates","oldValue","newValue","isNaN","getTime","now","result","valueOf","formatInfo","componentInfo","DATE_COMPONENTS_INFO","setter","getter","getLongestCaptionIndex","captionArray","longestIndex","longestCaptionLength","i","length","formatUsesMonthName","formatUsesDayName","getLongestDate","monthNames","dayNames","stringFormat","longestDate","getDay","setDate","normalizeTime","setSeconds","setMilliseconds","formatter","value","formatDate","setFullYear","startValue","endValue","day","getMonthNames","hours","minutes","seconds","milliseconds"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    isDate\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dateLocalization from \"../../localization/date\";\r\nvar DATE_COMPONENTS = [\"year\", \"day\", \"month\", \"day\"];\r\nvar TIME_COMPONENTS = [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"];\r\nvar ONE_MINUTE = 6e4;\r\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\r\nvar ONE_YEAR = 365 * ONE_DAY;\r\nvar getStringFormat = function(format) {\r\n    var formatType = typeof format;\r\n    if (\"string\" === formatType) {\r\n        return \"format\"\r\n    }\r\n    if (\"object\" === formatType && void 0 !== format.type) {\r\n        return format.type\r\n    }\r\n    return null\r\n};\r\nvar dateUtils = {\r\n    SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\r\n    ONE_MINUTE: ONE_MINUTE,\r\n    ONE_DAY: ONE_DAY,\r\n    ONE_YEAR: ONE_YEAR,\r\n    MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\r\n    MAX_DATEVIEW_DEFAULT_DATE: function() {\r\n        var newDate = new Date;\r\n        return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59)\r\n    }(),\r\n    FORMATS_INFO: {\r\n        date: {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-dd\"\r\n            },\r\n            components: DATE_COMPONENTS\r\n        },\r\n        time: {\r\n            getStandardPattern: function() {\r\n                return \"HH:mm\"\r\n            },\r\n            components: TIME_COMPONENTS\r\n        },\r\n        datetime: {\r\n            getStandardPattern: function() {\r\n                var standardPattern;\r\n                ! function() {\r\n                    var $input = $(\"<input>\").attr(\"type\", \"datetime\");\r\n                    $input.val(\"2000-01-01T01:01Z\");\r\n                    if ($input.val()) {\r\n                        standardPattern = \"yyyy-MM-ddTHH:mmZ\"\r\n                    }\r\n                }();\r\n                if (!standardPattern) {\r\n                    standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\"\r\n                }\r\n                dateUtils.FORMATS_INFO.datetime.getStandardPattern = function() {\r\n                    return standardPattern\r\n                };\r\n                return standardPattern\r\n            },\r\n            components: [...DATE_COMPONENTS, ...TIME_COMPONENTS]\r\n        },\r\n        \"datetime-local\": {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-ddTHH:mm:ss\"\r\n            },\r\n            components: [...DATE_COMPONENTS, \"hours\", \"minutes\", \"seconds\"]\r\n        }\r\n    },\r\n    FORMATS_MAP: {\r\n        date: \"shortdate\",\r\n        time: \"shorttime\",\r\n        datetime: \"shortdateshorttime\"\r\n    },\r\n    SUBMIT_FORMATS_MAP: {\r\n        date: \"date\",\r\n        time: \"time\",\r\n        datetime: \"datetime-local\"\r\n    },\r\n    toStandardDateFormat: function(date, type) {\r\n        var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\r\n        return dateSerialization.serializeDate(date, pattern)\r\n    },\r\n    fromStandardDateFormat: function(text) {\r\n        var date = dateSerialization.dateParser(text);\r\n        return isDate(date) ? date : void 0\r\n    },\r\n    getMaxMonthDay: function(year, month) {\r\n        return new Date(year, month + 1, 0).getDate()\r\n    },\r\n    mergeDates: function(oldValue, newValue, format) {\r\n        if (!newValue) {\r\n            return newValue || null\r\n        }\r\n        if (!oldValue || isNaN(oldValue.getTime())) {\r\n            var now = new Date(null);\r\n            oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n        }\r\n        var result = new Date(oldValue.valueOf());\r\n        var formatInfo = dateUtils.FORMATS_INFO[format];\r\n        each(formatInfo.components, (function() {\r\n            var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\r\n            result[componentInfo.setter](newValue[componentInfo.getter]())\r\n        }));\r\n        return result\r\n    },\r\n    getLongestCaptionIndex: function(captionArray) {\r\n        var longestIndex = 0;\r\n        var longestCaptionLength = 0;\r\n        var i;\r\n        for (i = 0; i < captionArray.length; ++i) {\r\n            if (captionArray[i].length > longestCaptionLength) {\r\n                longestIndex = i;\r\n                longestCaptionLength = captionArray[i].length\r\n            }\r\n        }\r\n        return longestIndex\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return dateLocalization.formatUsesMonthName(format)\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return dateLocalization.formatUsesDayName(format)\r\n    },\r\n    getLongestDate: function(format, monthNames, dayNames) {\r\n        var stringFormat = getStringFormat(format);\r\n        var month = 9;\r\n        if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\r\n            month = dateUtils.getLongestCaptionIndex(monthNames)\r\n        }\r\n        var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\r\n        if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\r\n            var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\r\n            longestDate.setDate(date)\r\n        }\r\n        return longestDate\r\n    },\r\n    normalizeTime: function(date) {\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0)\r\n    }\r\n};\r\ndateUtils.DATE_COMPONENTS_INFO = {\r\n    year: {\r\n        getter: \"getFullYear\",\r\n        setter: \"setFullYear\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setFullYear(value);\r\n            return dateLocalization.format(formatDate, \"yyyy\")\r\n        },\r\n        startValue: void 0,\r\n        endValue: void 0\r\n    },\r\n    day: {\r\n        getter: \"getDate\",\r\n        setter: \"setDate\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setDate(value);\r\n            return dateLocalization.format(formatDate, \"d\")\r\n        },\r\n        startValue: 1,\r\n        endValue: void 0\r\n    },\r\n    month: {\r\n        getter: \"getMonth\",\r\n        setter: \"setMonth\",\r\n        formatter: function(value) {\r\n            return dateLocalization.getMonthNames()[value]\r\n        },\r\n        startValue: 0,\r\n        endValue: 11\r\n    },\r\n    hours: {\r\n        getter: \"getHours\",\r\n        setter: \"setHours\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, value), \"hour\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 23\r\n    },\r\n    minutes: {\r\n        getter: \"getMinutes\",\r\n        setter: \"setMinutes\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, value), \"minute\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    seconds: {\r\n        getter: \"getSeconds\",\r\n        setter: \"setSeconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, value), \"second\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    milliseconds: {\r\n        getter: \"getMilliseconds\",\r\n        setter: \"setMilliseconds\",\r\n        formatter: function(value) {\r\n            return dateLocalization.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 999\r\n    }\r\n};\r\nexport default dateUtils;\r\n"]},"metadata":{},"sourceType":"module"}