{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { setOuterWidth, setOuterHeight } from \"../../../core/utils/size\";\nimport $ from \"../../../core/renderer\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { data as elementData } from \"../../../core/element_data\";\nimport { locate, move } from \"../../../animation/translator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { normalizeKey, grep } from \"../../../core/utils/common\";\nimport { isDefined, isDeferred, isString, isPlainObject } from \"../../../core/utils/type\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { getRecurrenceProcessor } from \"../recurrence\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport { Appointment, AgendaAppointment } from \"./appointment\";\nimport { addNamespace, isFakeClickEvent } from \"../../../events/utils/index\";\nimport { name as dblclickEvent } from \"../../../events/double_click\";\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\nimport timeZoneUtils from \"../utils.timeZone\";\nimport { APPOINTMENT_SETTINGS_KEY } from \"../constants\";\nimport { APPOINTMENT_ITEM_CLASS, APPOINTMENT_DRAG_SOURCE_CLASS } from \"../classes\";\nimport { createAgendaAppointmentLayout, createAppointmentLayout } from \"./appointmentLayout\";\nimport { ExpressionUtils } from \"../expressionUtils\";\nimport { createAppointmentAdapter } from \"../appointmentAdapter\";\nimport { getAppointmentTakesSeveralDays, sortAppointmentsByStartDate } from \"./dataProvider/utils\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport { getAppointmentDateRange } from \"./resizing/core\";\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\nvar toMs = dateUtils.dateToMilliseconds;\n\nclass SchedulerAppointments extends CollectionWidget {\n  get isAgendaView() {\n    return this.invoke(\"isCurrentViewAgenda\");\n  }\n\n  get isVirtualScrolling() {\n    return this.invoke(\"isVirtualScrolling\");\n  }\n\n  get appointmentDataProvider() {\n    return this.option(\"getAppointmentDataProvider\")();\n  }\n\n  constructor(element, options) {\n    super(element, options);\n    this._virtualAppointments = {};\n  }\n\n  notifyObserver(subject, args) {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      observer.fire(subject, args);\n    }\n  }\n\n  invoke() {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      return observer.fire.apply(observer, arguments);\n    }\n  }\n\n  _dispose() {\n    clearTimeout(this._appointmentClickTimeout);\n\n    super._dispose();\n  }\n\n  _supportedKeys() {\n    var parent = super._supportedKeys();\n\n    return extend(parent, {\n      escape: function () {\n        this.moveAppointmentBack();\n        this._escPressed = true;\n      }.bind(this),\n      del: function (e) {\n        if (this.option(\"allowDelete\")) {\n          e.preventDefault();\n\n          var data = this._getItemData(e.target);\n\n          this.notifyObserver(\"onDeleteButtonPress\", {\n            data: data,\n            target: e.target\n          });\n        }\n      }.bind(this),\n      tab: function (e) {\n        var appointments = this._getAccessAppointments();\n\n        var focusedAppointment = appointments.filter(\".dx-state-focused\");\n        var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\n        var lastIndex = appointments.length - 1;\n\n        if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\n          e.preventDefault();\n          e.shiftKey ? index-- : index++;\n\n          var $nextAppointment = this._getAppointmentByIndex(index);\n\n          this._resetTabIndex($nextAppointment);\n\n          eventsEngine.trigger($nextAppointment, \"focus\");\n        }\n      }\n    });\n  }\n\n  _getAppointmentByIndex(sortedIndex) {\n    var appointments = this._getAccessAppointments();\n\n    return appointments.filter(function (_, $item) {\n      return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex;\n    }).eq(0);\n  }\n\n  _getAccessAppointments() {\n    return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\");\n  }\n\n  _resetTabIndex($appointment) {\n    this._focusTarget().attr(\"tabIndex\", -1);\n\n    $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"));\n  }\n\n  _moveFocus() {}\n\n  _focusTarget() {\n    return this._itemElements();\n  }\n\n  _renderFocusTarget() {\n    var $appointment = this._getAppointmentByIndex(0);\n\n    this._resetTabIndex($appointment);\n  }\n\n  _focusInHandler(e) {\n    super._focusInHandler(e);\n\n    this._$currentAppointment = $(e.target);\n    this.option(\"focusedElement\", getPublicElement($(e.target)));\n  }\n\n  _focusOutHandler(e) {\n    var $appointment = this._getAppointmentByIndex(0);\n\n    this.option(\"focusedElement\", getPublicElement($appointment));\n\n    super._focusOutHandler(e);\n  }\n\n  _eventBindingTarget() {\n    return this._itemContainer();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      noDataText: null,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      tabIndex: 0,\n      fixedContainer: null,\n      allDayContainer: null,\n      allowDrag: true,\n      allowResize: true,\n      allowAllDayResize: true,\n      onAppointmentDblClick: null,\n      _collectorOffset: 0,\n      groups: [],\n      resources: []\n    });\n  }\n\n  _optionChanged(args) {\n    if (this.option(\"isRenovatedAppointments\")) {\n      return;\n    }\n\n    switch (args.name) {\n      case \"items\":\n        this._cleanFocusState();\n\n        this._clearDropDownItems();\n\n        this._clearDropDownItemsElements();\n\n        this._repaintAppointments(args.value);\n\n        this._renderDropDownAppointments();\n\n        this._attachAppointmentsEvents();\n\n        break;\n\n      case \"fixedContainer\":\n      case \"allDayContainer\":\n      case \"onAppointmentDblClick\":\n        break;\n\n      case \"allowDrag\":\n      case \"allowResize\":\n      case \"allowAllDayResize\":\n        this._invalidate();\n\n        break;\n\n      case \"focusedElement\":\n        this._resetTabIndex($(args.value));\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"allowDelete\":\n        break;\n\n      case \"focusStateEnabled\":\n        this._clearDropDownItemsElements();\n\n        this._renderDropDownAppointments();\n\n        super._optionChanged(args);\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _isAllDayAppointment(appointment) {\n    return appointment.settings.length && appointment.settings[0].allDay || false;\n  }\n\n  _isRepaintAppointment(appointment) {\n    return !isDefined(appointment.needRepaint) || true === appointment.needRepaint;\n  }\n\n  _isRepaintAll(appointments) {\n    if (this.isAgendaView) {\n      return true;\n    }\n\n    for (var i = 0; i < appointments.length; i++) {\n      if (!this._isRepaintAppointment(appointments[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _applyFragment(fragment, allDay) {\n    if (fragment.children().length > 0) {\n      this._getAppointmentContainer(allDay).append(fragment);\n    }\n  }\n\n  _onEachAppointment(appointment, index, container, isRepaintAll) {\n    if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\n      this._clearItem(appointment);\n    } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\n      (() => {\n        appointment.needRepaint = false;\n\n        this._clearItem(appointment);\n\n        this._renderItem(index, appointment, container);\n      })();\n    }\n  }\n\n  _repaintAppointments(appointments) {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      var isRepaintAll = this._isRepaintAll(appointments);\n\n      if (isRepaintAll) {\n        this._getAppointmentContainer(true).html(\"\");\n\n        this._getAppointmentContainer(false).html(\"\");\n      }\n\n      !appointments.length && this._cleanItemContainer();\n      appointments.forEach((appointment, index) => {\n        var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\n\n        this._onEachAppointment(appointment, index, container, isRepaintAll);\n      });\n    });\n  }\n\n  _renderByFragments(renderFunction) {\n    if (this.isVirtualScrolling) {\n      var $commonFragment = $(domAdapter.createDocumentFragment());\n      var $allDayFragment = $(domAdapter.createDocumentFragment());\n      renderFunction($commonFragment, $allDayFragment);\n\n      this._applyFragment($commonFragment, false);\n\n      this._applyFragment($allDayFragment, true);\n    } else {\n      renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true));\n    }\n  }\n\n  _attachAppointmentsEvents() {\n    this._attachClickEvent();\n\n    this._attachHoldEvent();\n\n    this._attachContextMenuEvent();\n\n    this._attachAppointmentDblClick();\n\n    this._renderFocusState();\n\n    this._attachFeedbackEvents();\n\n    this._attachHoverEvents();\n  }\n\n  _clearItem(item) {\n    var $items = this._findItemElementByItem(item.itemData);\n\n    if (!$items.length) {\n      return;\n    }\n\n    each($items, function (_, $item) {\n      $item.detach();\n      $item.remove();\n    });\n  }\n\n  _clearDropDownItems() {\n    this._virtualAppointments = {};\n  }\n\n  _clearDropDownItemsElements() {\n    this.invoke(\"clearCompactAppointments\");\n  }\n\n  _findItemElementByItem(item) {\n    var result = [];\n    var that = this;\n    this.itemElements().each(function () {\n      var $item = $(this);\n\n      if ($item.data(that._itemDataKey()) === item) {\n        result.push($item);\n      }\n    });\n    return result;\n  }\n\n  _itemClass() {\n    return APPOINTMENT_ITEM_CLASS;\n  }\n\n  _itemContainer() {\n    var $container = super._itemContainer();\n\n    var $result = $container;\n    var $allDayContainer = this.option(\"allDayContainer\");\n\n    if ($allDayContainer) {\n      $result = $container.add($allDayContainer);\n    }\n\n    return $result;\n  }\n\n  _cleanItemContainer() {\n    super._cleanItemContainer();\n\n    var $allDayContainer = this.option(\"allDayContainer\");\n\n    if ($allDayContainer) {\n      $allDayContainer.empty();\n    }\n\n    this._virtualAppointments = {};\n  }\n\n  _clean() {\n    super._clean();\n\n    delete this._$currentAppointment;\n    delete this._initialSize;\n    delete this._initialCoordinates;\n  }\n\n  _init() {\n    super._init();\n\n    this.$element().addClass(COMPONENT_CLASS);\n    this._preventSingleAppointmentClick = false;\n  }\n\n  _renderAppointmentTemplate($container, appointment, model) {\n    var config = {\n      isAllDay: appointment.allDay,\n      isRecurrence: appointment.recurrenceRule,\n      html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\n    };\n    var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\n    $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config));\n  }\n\n  _executeItemRenderAction(index, itemData, itemElement) {\n    var action = this._getItemRenderAction();\n\n    if (action) {\n      action(this.invoke(\"mapAppointmentFields\", {\n        itemData: itemData,\n        itemElement: itemElement\n      }));\n    }\n\n    delete this._currentAppointmentSettings;\n  }\n\n  _itemClickHandler(e) {\n    super._itemClickHandler(e, {}, {\n      afterExecute: function (e) {\n        this._processItemClick(e.args[0].event);\n      }.bind(this)\n    });\n  }\n\n  _processItemClick(e) {\n    var $target = $(e.currentTarget);\n\n    var data = this._getItemData($target);\n\n    if (\"keydown\" === e.type || isFakeClickEvent(e)) {\n      this.notifyObserver(\"showEditAppointmentPopup\", {\n        data: data,\n        target: $target\n      });\n      return;\n    }\n\n    this._appointmentClickTimeout = setTimeout(function () {\n      if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\n        this.notifyObserver(\"showAppointmentTooltip\", {\n          data: data,\n          target: $target\n        });\n      }\n\n      this._preventSingleAppointmentClick = false;\n    }.bind(this), 300);\n  }\n\n  _extendActionArgs($itemElement) {\n    var args = super._extendActionArgs($itemElement);\n\n    return this.invoke(\"mapAppointmentFields\", args);\n  }\n\n  _render() {\n    super._render();\n\n    this._attachAppointmentDblClick();\n  }\n\n  _attachAppointmentDblClick() {\n    var that = this;\n\n    var itemSelector = that._itemSelector();\n\n    var itemContainer = this._itemContainer();\n\n    eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\n    eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, function (e) {\n      that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\n        afterExecute: function (e) {\n          that._dblClickHandler(e.args[0].event);\n        }\n      });\n    });\n  }\n\n  _dblClickHandler(e) {\n    var $targetAppointment = $(e.currentTarget);\n\n    var appointmentData = this._getItemData($targetAppointment);\n\n    clearTimeout(this._appointmentClickTimeout);\n    this._preventSingleAppointmentClick = true;\n    this.notifyObserver(\"showEditAppointmentPopup\", {\n      data: appointmentData,\n      target: $targetAppointment\n    });\n  }\n\n  _renderItem(index, item, container) {\n    var itemData = item.itemData;\n    var $items = [];\n\n    for (var i = 0; i < item.settings.length; i++) {\n      var setting = item.settings[i];\n      this._currentAppointmentSettings = setting;\n\n      var $item = super._renderItem(index, itemData, container);\n\n      $item.data(APPOINTMENT_SETTINGS_KEY, setting);\n      $items.push($item);\n    }\n\n    return $items;\n  }\n\n  _getItemContent($itemFrame) {\n    $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\n\n    var $itemContent = super._getItemContent($itemFrame);\n\n    return $itemContent;\n  }\n\n  _createItemByTemplate(itemTemplate, renderArgs) {\n    var {\n      itemData: itemData,\n      container: container,\n      index: index\n    } = renderArgs;\n    return itemTemplate.render({\n      model: {\n        appointmentData: itemData,\n        targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\n      },\n      container: container,\n      index: index\n    });\n  }\n\n  _getAppointmentContainer(allDay) {\n    var $allDayContainer = this.option(\"allDayContainer\");\n    var $container = this.itemsContainer().not($allDayContainer);\n\n    if (allDay && $allDayContainer) {\n      $container = $allDayContainer;\n    }\n\n    return $container;\n  }\n\n  _postprocessRenderItem(args) {\n    this._renderAppointment(args.itemElement, this._currentAppointmentSettings);\n  }\n\n  _renderAppointment(element, settings) {\n    element.data(APPOINTMENT_SETTINGS_KEY, settings);\n\n    this._applyResourceDataAttr(element);\n\n    var rawAppointment = this._getItemData(element);\n\n    var geometry = this.invoke(\"getAppointmentGeometry\", settings);\n    var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\n    var allowDrag = this.option(\"allowDrag\");\n    var allDay = settings.allDay;\n    this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\n\n    if (settings.virtual) {\n      var appointmentConfig = {\n        itemData: rawAppointment,\n        groupIndex: settings.groupIndex,\n        groups: this.option(\"groups\")\n      };\n      var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\n\n      this._processVirtualAppointment(settings, element, rawAppointment, deferredColor);\n    } else {\n      var _settings$info;\n\n      var config = {\n        data: rawAppointment,\n        groupIndex: settings.groupIndex,\n        observer: this.option(\"observer\"),\n        geometry: geometry,\n        direction: settings.direction || \"vertical\",\n        allowResize: allowResize,\n        allowDrag: allowDrag,\n        allDay: allDay,\n        reduced: settings.appointmentReduced,\n        isCompact: settings.isCompact,\n        startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\n        cellWidth: this.invoke(\"getCellWidth\"),\n        cellHeight: this.invoke(\"getCellHeight\"),\n        resizableConfig: this._resizableConfig(rawAppointment, settings),\n        groups: this.option(\"groups\"),\n        getAppointmentColor: this.option(\"getAppointmentColor\"),\n        getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\n      };\n\n      if (this.isAgendaView) {\n        var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\n\n        config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment);\n      }\n\n      this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends({}, config, {\n        dataAccessors: this.option(\"dataAccessors\"),\n        getResizableStep: this.option(\"getResizableStep\")\n      }));\n    }\n  }\n\n  _applyResourceDataAttr($appointment) {\n    var dataAccessors = this.option(\"getResourceDataAccessors\")();\n\n    var rawAppointment = this._getItemData($appointment);\n\n    each(dataAccessors.getter, function (key) {\n      var value = dataAccessors.getter[key](rawAppointment);\n\n      if (isDefined(value)) {\n        var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\n        wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true));\n      }\n    });\n  }\n\n  _resizableConfig(appointmentData, itemSetting) {\n    return {\n      area: this._calculateResizableArea(itemSetting, appointmentData),\n      onResizeStart: function (e) {\n        this._$currentAppointment = $(e.element);\n\n        if (this.invoke(\"needRecalculateResizableArea\")) {\n          var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\n\n          e.component.option(\"area\", updatedArea);\n\n          e.component._renderDragOffsets(e.event);\n        }\n\n        this._initialSize = {\n          width: e.width,\n          height: e.height\n        };\n        this._initialCoordinates = locate(this._$currentAppointment);\n      }.bind(this),\n      onResizeEnd: function (e) {\n        if (this._escPressed) {\n          e.event.cancel = true;\n          return;\n        }\n\n        this._resizeEndHandler(e);\n      }.bind(this)\n    };\n  }\n\n  _calculateResizableArea(itemSetting, appointmentData) {\n    var area = this.$element().closest(\".dx-scrollable-content\");\n    return this.invoke(\"getResizableAppointmentArea\", {\n      coordinates: {\n        left: itemSetting.left,\n        top: 0,\n        groupIndex: itemSetting.groupIndex\n      },\n      allDay: itemSetting.allDay\n    }) || area;\n  }\n\n  _resizeEndHandler(e) {\n    var $element = $(e.element);\n    var {\n      allDay: allDay,\n      info: info\n    } = $element.data(\"dxAppointmentSettings\");\n\n    var sourceAppointment = this._getItemData($element);\n\n    var dateRange = {};\n\n    if (allDay) {\n      dateRange = this.resizeAllDay(e);\n    } else {\n      var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\n\n      var endDate = info.appointment.endDate;\n      dateRange = this._getDateRange(e, startDate, endDate);\n    }\n\n    this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"));\n  }\n\n  resizeAllDay(e) {\n    var $element = $(e.element);\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var dataAccessors = this.option(\"dataAccessors\");\n    return getAppointmentDateRange({\n      handles: e.handles,\n      appointmentSettings: $element.data(\"dxAppointmentSettings\"),\n      isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\n      isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\n      appointmentRect: getBoundingRect($element[0]),\n      parentAppointmentRect: getBoundingRect($element.parent()[0]),\n      viewDataProvider: this.option(\"getViewDataProvider\")(),\n      isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\n      startDayHour: this.invoke(\"getStartDayHour\"),\n      endDayHour: this.invoke(\"getEndDayHour\"),\n      timeZoneCalculator: timeZoneCalculator,\n      dataAccessors: dataAccessors,\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      DOMMetaData: this.option(\"getDOMElementsMetaData\")()\n    });\n  }\n\n  updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\n    var sourceAppointment = this._getItemData($element);\n\n    var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\n    modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\n    modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\n    this.notifyObserver(\"updateAppointmentAfterResize\", {\n      target: sourceAppointment,\n      data: modifiedAppointmentAdapter.clone({\n        pathTimeZone: \"fromGrid\"\n      }).source(),\n      $appointment: $element\n    });\n  }\n\n  _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\n    var startDate = appointmentInfo.startDate;\n    var recurrenceProcessor = getRecurrenceProcessor();\n    var {\n      recurrenceRule: recurrenceRule,\n      startDateTimeZone: startDateTimeZone\n    } = appointmentAdapter;\n    var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\n    var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\n\n    if (!e.handles.top && !isRecurrent && !isAllDay) {\n      startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\n        appointmentTimeZone: startDateTimeZone,\n        path: \"toGrid\"\n      });\n    }\n\n    return startDate;\n  }\n\n  _getDateRange(e, startDate, endDate) {\n    var itemData = this._getItemData(e.element);\n\n    var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\n    var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\n    var isStartDateChanged = false;\n    var isAllDay = this.invoke(\"isAllDay\", itemData);\n    var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\n    var startTime;\n    var endTime;\n\n    if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\n      isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left;\n    } else {\n      isStartDateChanged = e.handles.top;\n    }\n\n    if (isStartDateChanged) {\n      startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\n      startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\n      endTime = endDate.getTime();\n    } else {\n      startTime = startDate.getTime();\n      endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\n      endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime);\n    }\n\n    return {\n      startDate: new Date(startTime),\n      endDate: new Date(endTime)\n    };\n  }\n\n  _correctEndDateByDelta(endDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = endDate.getTime() + deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(endDate);\n    var minDate = new Date(endDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n\n    if (result > maxDate.getTime() || result <= minDate.getTime()) {\n      var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\n      var lastDay = new Date(correctedEndDate);\n      lastDay.setHours(startDayHour, 0, 0, 0);\n      result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1);\n    }\n\n    return result;\n  }\n\n  _correctStartDateByDelta(startDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = startDate.getTime() - deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(startDate);\n    var minDate = new Date(startDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n\n    if (result < minDate.getTime() || result >= maxDate.getTime()) {\n      var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\n      firstDay.setHours(endDayHour, 0, 0, 0);\n      result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1);\n    }\n\n    return result;\n  }\n\n  _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\n    var virtualAppointment = appointmentSetting.virtual;\n    var virtualGroupIndex = virtualAppointment.index;\n\n    if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\n      this._virtualAppointments[virtualGroupIndex] = {\n        coordinates: {\n          top: virtualAppointment.top,\n          left: virtualAppointment.left\n        },\n        items: {\n          data: [],\n          colors: [],\n          settings: []\n        },\n        isAllDay: virtualAppointment.isAllDay ? true : false,\n        buttonColor: color\n      };\n    }\n\n    appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\n\n    this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\n\n    this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\n\n    this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\n\n    $appointment.remove();\n  }\n\n  _renderContentImpl() {\n    super._renderContentImpl();\n\n    this._renderDropDownAppointments();\n  }\n\n  _renderDropDownAppointments() {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      each(this._virtualAppointments, function (groupIndex) {\n        var virtualGroup = this._virtualAppointments[groupIndex];\n        var virtualItems = virtualGroup.items;\n        var virtualCoordinates = virtualGroup.coordinates;\n        var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\n        var left = virtualCoordinates.left;\n        var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\n        var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\n        var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\n        this.notifyObserver(\"renderCompactAppointments\", {\n          $container: $fragment,\n          coordinates: {\n            top: virtualCoordinates.top,\n            left: left + rtlOffset\n          },\n          items: virtualItems,\n          buttonColor: virtualGroup.buttonColor,\n          width: buttonWidth - this.option(\"_collectorOffset\"),\n          height: buttonHeight,\n          onAppointmentClick: this.option(\"onItemClick\"),\n          allowDrag: this.option(\"allowDrag\"),\n          cellWidth: this.invoke(\"getCellWidth\"),\n          isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\n        });\n      }.bind(this));\n    });\n  }\n\n  _isGroupCompact(virtualGroup) {\n    return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\");\n  }\n\n  _sortAppointmentsByStartDate(appointments) {\n    return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"));\n  }\n\n  _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\n    var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\n    var result = {\n      parts: [],\n      indexes: []\n    };\n\n    if (recurrenceRule) {\n      var dates = appointment.settings || appointment;\n      var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\n      var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\n      var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\n      var appointmentDuration = endDate.getTime() - startDate.getTime();\n      var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\n      var startViewDate = this.invoke(\"getStartViewDate\");\n      var endViewDate = this.invoke(\"getEndViewDate\");\n      var timezoneCalculator = this.option(\"timeZoneCalculator\");\n      var recurrentDates = getRecurrenceProcessor().generateDates({\n        rule: recurrenceRule,\n        exception: recurrenceException,\n        start: startDate,\n        end: endDate,\n        min: startViewDate,\n        max: endViewDate,\n        appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\n      });\n      var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\n\n      for (var i = 0; i < recurrentDateCount; i++) {\n        var appointmentPart = extend({}, appointment, true);\n\n        if (recurrentDates[i]) {\n          var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\n\n          this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\n\n          appointmentPart.settings = appointmentSettings;\n        } else {\n          appointmentPart.settings = dates;\n        }\n\n        result.parts.push(appointmentPart);\n\n        if (!skipLongAppointments) {\n          this._processLongAppointment(appointmentPart, result);\n        }\n      }\n\n      result.indexes.push(index);\n    }\n\n    return result;\n  }\n\n  _processLongAppointment(appointment, result) {\n    var parts = this.splitAppointmentByDay(appointment);\n    var partCount = parts.length;\n    var endViewDate = this.invoke(\"getEndViewDate\").getTime();\n    var startViewDate = this.invoke(\"getStartViewDate\").getTime();\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    result = result || {\n      parts: []\n    };\n\n    if (partCount > 1) {\n      extend(appointment, parts[0]);\n\n      for (var i = 1; i < partCount; i++) {\n        var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\n        startDate = timeZoneCalculator.createDate(startDate, {\n          path: \"toGrid\"\n        });\n\n        if (startDate < endViewDate && startDate > startViewDate) {\n          result.parts.push(parts[i]);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\n    each(recurrenceIndexes, function (i, index) {\n      appointments.splice(index - i, 1);\n    });\n  }\n\n  _combineAppointments(appointments, additionalAppointments) {\n    if (additionalAppointments.length) {\n      appointments.push(...additionalAppointments);\n    }\n\n    this._sortAppointmentsByStartDate(appointments);\n  }\n\n  _applyStartDateToObj(startDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\n    return obj;\n  }\n\n  _applyEndDateToObj(endDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\n    return obj;\n  }\n\n  moveAppointmentBack(dragEvent) {\n    var $appointment = this._$currentAppointment;\n    var size = this._initialSize;\n    var coords = this._initialCoordinates;\n\n    if (dragEvent) {\n      this._removeDragSourceClassFromDraggedAppointment();\n\n      if (isDeferred(dragEvent.cancel)) {\n        dragEvent.cancel.resolve(true);\n      } else {\n        dragEvent.cancel = true;\n      }\n    }\n\n    if ($appointment && !dragEvent) {\n      if (coords) {\n        move($appointment, coords);\n        delete this._initialSize;\n      }\n\n      if (size) {\n        setOuterWidth($appointment, size.width);\n        setOuterHeight($appointment, size.height);\n        delete this._initialCoordinates;\n      }\n    }\n  }\n\n  focus() {\n    if (this._$currentAppointment) {\n      var focusedElement = getPublicElement(this._$currentAppointment);\n      this.option(\"focusedElement\", focusedElement);\n      eventsEngine.trigger(focusedElement, \"focus\");\n    }\n  }\n\n  splitAppointmentByDay(appointment) {\n    var dates = appointment.settings || appointment;\n    var dataAccessors = this.option(\"dataAccessors\");\n    var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\n    var startDate = dateUtils.makeDate(originalStartDate);\n    var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\n    var maxAllowedDate = this.invoke(\"getEndViewDate\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\n    var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\n    var result = [];\n    startDate = timeZoneCalculator.createDate(startDate, {\n      path: \"toGrid\"\n    });\n    endDate = timeZoneCalculator.createDate(endDate, {\n      path: \"toGrid\"\n    });\n\n    if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\n      result.push(this._applyStartDateToObj(new Date(startDate), {\n        appointmentData: appointment\n      }));\n      startDate.setDate(startDate.getDate() + 1);\n    }\n\n    while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\n      var currentStartDate = new Date(startDate);\n      var currentEndDate = new Date(startDate);\n\n      this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\n\n      this._checkEndDate(currentEndDate, endDate, endDayHour);\n\n      var appointmentData = deepExtendArraySafe({}, appointment, true);\n      var appointmentSettings = {};\n\n      this._applyStartDateToObj(currentStartDate, appointmentSettings);\n\n      this._applyEndDateToObj(currentEndDate, appointmentSettings);\n\n      appointmentData.settings = appointmentSettings;\n      result.push(appointmentData);\n      startDate = dateUtils.trimTime(startDate);\n      startDate.setDate(startDate.getDate() + 1);\n      startDate.setHours(startDayHour);\n    }\n\n    return result;\n  }\n\n  _checkStartDate(currentDate, originalDate, startDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\n      currentDate.setHours(startDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n\n  _checkEndDate(currentDate, originalDate, endDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\n      currentDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n\n  _removeDragSourceClassFromDraggedAppointment() {\n    var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\n\n    $appointments.each((_, element) => {\n      var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\n      appointmentInstance.option(\"isDragSource\", false);\n    });\n  }\n\n  _setDragSourceAppointment(appointment, settings) {\n    var $appointments = this._findItemElementByItem(appointment);\n\n    var {\n      startDate: startDate,\n      endDate: endDate\n    } = settings.info.sourceAppointment;\n    var {\n      groupIndex: groupIndex\n    } = settings;\n    $appointments.forEach($item => {\n      var {\n        info: itemInfo,\n        groupIndex: itemGroupIndex\n      } = $item.data(APPOINTMENT_SETTINGS_KEY);\n      var {\n        startDate: itemStartDate,\n        endDate: itemEndDate\n      } = itemInfo.sourceAppointment;\n      var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\n      var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\n      appointmentInstance.option(\"isDragSource\", isDragSource);\n    });\n  }\n\n  updateResizableArea() {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = grep($allResizableElements, el => {\n      var $el = $(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var {\n        area: area,\n        handles: handles\n      } = resizableInst.option();\n      return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area);\n    });\n    each(horizontalResizables, (_, el) => {\n      var $el = $(el);\n      var position = locate($el);\n\n      var appointmentData = this._getItemData($el);\n\n      var area = this._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    });\n  }\n\n}\n\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\nexport default SchedulerAppointments;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/appointments/appointmentCollection.js"],"names":["_extends","setOuterWidth","setOuterHeight","$","domAdapter","eventsEngine","data","elementData","locate","move","dateUtils","normalizeKey","grep","isDefined","isDeferred","isString","isPlainObject","each","deepExtendArraySafe","wrapToArray","extend","getPublicElement","getRecurrenceProcessor","registerComponent","Appointment","AgendaAppointment","addNamespace","isFakeClickEvent","name","dblclickEvent","CollectionWidget","timeZoneUtils","APPOINTMENT_SETTINGS_KEY","APPOINTMENT_ITEM_CLASS","APPOINTMENT_DRAG_SOURCE_CLASS","createAgendaAppointmentLayout","createAppointmentLayout","ExpressionUtils","createAppointmentAdapter","getAppointmentTakesSeveralDays","sortAppointmentsByStartDate","getBoundingRect","getAppointmentDateRange","COMPONENT_CLASS","DBLCLICK_EVENT_NAME","toMs","dateToMilliseconds","SchedulerAppointments","isAgendaView","invoke","isVirtualScrolling","appointmentDataProvider","option","constructor","element","options","_virtualAppointments","notifyObserver","subject","args","observer","fire","apply","arguments","_dispose","clearTimeout","_appointmentClickTimeout","_supportedKeys","parent","escape","moveAppointmentBack","_escPressed","bind","del","e","preventDefault","_getItemData","target","tab","appointments","_getAccessAppointments","focusedAppointment","filter","index","sortedIndex","lastIndex","length","shiftKey","$nextAppointment","_getAppointmentByIndex","_resetTabIndex","trigger","_","$item","eq","_itemElements","not","$appointment","_focusTarget","attr","_moveFocus","_renderFocusTarget","_focusInHandler","_$currentAppointment","_focusOutHandler","_eventBindingTarget","_itemContainer","_getDefaultOptions","noDataText","activeStateEnabled","hoverStateEnabled","tabIndex","fixedContainer","allDayContainer","allowDrag","allowResize","allowAllDayResize","onAppointmentDblClick","_collectorOffset","groups","resources","_optionChanged","_cleanFocusState","_clearDropDownItems","_clearDropDownItemsElements","_repaintAppointments","value","_renderDropDownAppointments","_attachAppointmentsEvents","_invalidate","_isAllDayAppointment","appointment","settings","allDay","_isRepaintAppointment","needRepaint","_isRepaintAll","i","_applyFragment","fragment","children","_getAppointmentContainer","append","_onEachAppointment","container","isRepaintAll","needRemove","_clearItem","_renderItem","_renderByFragments","$commonFragment","$allDayFragment","html","_cleanItemContainer","forEach","renderFunction","createDocumentFragment","_attachClickEvent","_attachHoldEvent","_attachContextMenuEvent","_attachAppointmentDblClick","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","item","$items","_findItemElementByItem","itemData","detach","remove","result","that","itemElements","_itemDataKey","push","_itemClass","$container","$result","$allDayContainer","add","empty","_clean","_initialSize","_initialCoordinates","_init","$element","addClass","_preventSingleAppointmentClick","_renderAppointmentTemplate","model","config","isAllDay","isRecurrence","recurrenceRule","formatText","appointmentData","_currentAppointmentSettings","agendaSettings","targetedAppointmentData","_executeItemRenderAction","itemElement","action","_getItemRenderAction","_itemClickHandler","afterExecute","_processItemClick","event","$target","currentTarget","type","setTimeout","getBody","contains","_extendActionArgs","$itemElement","_render","itemSelector","_itemSelector","itemContainer","off","on","_itemDXEventHandler","_dblClickHandler","$targetAppointment","setting","_getItemContent","$itemFrame","$itemContent","_createItemByTemplate","itemTemplate","renderArgs","render","itemsContainer","_postprocessRenderItem","_renderAppointment","_applyResourceDataAttr","rawAppointment","geometry","skipResizing","virtual","appointmentConfig","groupIndex","deferredColor","_processVirtualAppointment","_settings$info","direction","reduced","appointmentReduced","isCompact","startDate","Date","info","cellWidth","cellHeight","resizableConfig","_resizableConfig","getAppointmentColor","getResourceDataAccessors","agendaResourceProcessor","createPlainResourceListAsync","createListAsync","_createComponent","dataAccessors","getResizableStep","getter","key","prefix","concat","toLowerCase","itemSetting","area","_calculateResizableArea","onResizeStart","updatedArea","component","_renderDragOffsets","width","height","onResizeEnd","cancel","_resizeEndHandler","closest","coordinates","left","top","sourceAppointment","dateRange","resizeAllDay","_getEndResizeAppointmentStartDate","endDate","_getDateRange","updateResizedAppointment","timeZoneCalculator","handles","appointmentSettings","isVerticalViewDirection","isVerticalGroupedWorkSpace","appointmentRect","parentAppointmentRect","viewDataProvider","isDateAndTimeView","startDayHour","endDayHour","rtlEnabled","DOMMetaData","modifiedAppointmentAdapter","clone","pathTimeZone","source","appointmentInfo","appointmentAdapter","recurrenceProcessor","startDateTimeZone","isRecurrent","isValidRecurrenceRule","createDate","appointmentTimeZone","path","deltaTime","renderingStrategyDirection","isStartDateChanged","needCorrectDates","startTime","endTime","right","_correctStartDateByDelta","getTime","getTimezoneOffsetChangeInMs","_correctEndDateByDelta","visibleDayDuration","daysCount","Math","ceil","floor","maxDate","minDate","setHours","tailOfCurrentDay","tailOfPrevDays","correctedEndDate","setDate","getDate","lastDay","firstDay","appointmentSetting","color","virtualAppointment","virtualGroupIndex","items","colors","buttonColor","_renderContentImpl","virtualGroup","virtualItems","virtualCoordinates","$fragment","buttonWidth","buttonHeight","rtlOffset","onAppointmentClick","_isGroupCompact","_sortAppointmentsByStartDate","_processRecurrenceAppointment","skipLongAppointments","getField","parts","indexes","dates","appointmentDuration","recurrenceException","startViewDate","endViewDate","timezoneCalculator","recurrentDates","generateDates","rule","exception","start","end","min","max","appointmentTimezoneOffset","getOriginStartDateOffsetInMs","recurrentDateCount","appointmentPart","_applyStartDateToObj","_applyEndDateToObj","_processLongAppointment","splitAppointmentByDay","partCount","_reduceRecurrenceAppointments","recurrenceIndexes","splice","_combineAppointments","additionalAppointments","obj","setField","dragEvent","size","coords","_removeDragSourceClassFromDraggedAppointment","resolve","focus","focusedElement","originalStartDate","makeDate","maxAllowedDate","adapter","appointmentIsLong","getHours","currentStartDate","currentEndDate","_checkStartDate","_checkEndDate","trimTime","currentDate","originalDate","sameDate","getMinutes","getSeconds","getMilliseconds","$appointments","appointmentInstance","dxSchedulerAppointment","_setDragSourceAppointment","itemInfo","itemGroupIndex","itemStartDate","itemEndDate","isDragSource","updateResizableArea","$allResizableElements","find","horizontalResizables","el","$el","resizableInst","dxResizable","position"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    setOuterWidth,\r\n    setOuterHeight\r\n} from \"../../../core/utils/size\";\r\nimport $ from \"../../../core/renderer\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../../core/element_data\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../animation/translator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    normalizeKey,\r\n    grep\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isDeferred,\r\n    isString,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"../recurrence\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    Appointment,\r\n    AgendaAppointment\r\n} from \"./appointment\";\r\nimport {\r\n    addNamespace,\r\n    isFakeClickEvent\r\n} from \"../../../events/utils/index\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../../events/double_click\";\r\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\r\nimport timeZoneUtils from \"../utils.timeZone\";\r\nimport {\r\n    APPOINTMENT_SETTINGS_KEY\r\n} from \"../constants\";\r\nimport {\r\n    APPOINTMENT_ITEM_CLASS,\r\n    APPOINTMENT_DRAG_SOURCE_CLASS\r\n} from \"../classes\";\r\nimport {\r\n    createAgendaAppointmentLayout,\r\n    createAppointmentLayout\r\n} from \"./appointmentLayout\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"../expressionUtils\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../appointmentAdapter\";\r\nimport {\r\n    getAppointmentTakesSeveralDays,\r\n    sortAppointmentsByStartDate\r\n} from \"./dataProvider/utils\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    getAppointmentDateRange\r\n} from \"./resizing/core\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\r\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass SchedulerAppointments extends CollectionWidget {\r\n    get isAgendaView() {\r\n        return this.invoke(\"isCurrentViewAgenda\")\r\n    }\r\n    get isVirtualScrolling() {\r\n        return this.invoke(\"isVirtualScrolling\")\r\n    }\r\n    get appointmentDataProvider() {\r\n        return this.option(\"getAppointmentDataProvider\")()\r\n    }\r\n    constructor(element, options) {\r\n        super(element, options);\r\n        this._virtualAppointments = {}\r\n    }\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n    _dispose() {\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        super._dispose()\r\n    }\r\n    _supportedKeys() {\r\n        var parent = super._supportedKeys();\r\n        return extend(parent, {\r\n            escape: function() {\r\n                this.moveAppointmentBack();\r\n                this._escPressed = true\r\n            }.bind(this),\r\n            del: function(e) {\r\n                if (this.option(\"allowDelete\")) {\r\n                    e.preventDefault();\r\n                    var data = this._getItemData(e.target);\r\n                    this.notifyObserver(\"onDeleteButtonPress\", {\r\n                        data: data,\r\n                        target: e.target\r\n                    })\r\n                }\r\n            }.bind(this),\r\n            tab: function(e) {\r\n                var appointments = this._getAccessAppointments();\r\n                var focusedAppointment = appointments.filter(\".dx-state-focused\");\r\n                var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\r\n                var lastIndex = appointments.length - 1;\r\n                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    e.shiftKey ? index-- : index++;\r\n                    var $nextAppointment = this._getAppointmentByIndex(index);\r\n                    this._resetTabIndex($nextAppointment);\r\n                    eventsEngine.trigger($nextAppointment, \"focus\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentByIndex(sortedIndex) {\r\n        var appointments = this._getAccessAppointments();\r\n        return appointments.filter((function(_, $item) {\r\n            return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex\r\n        })).eq(0)\r\n    }\r\n    _getAccessAppointments() {\r\n        return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\")\r\n    }\r\n    _resetTabIndex($appointment) {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"))\r\n    }\r\n    _moveFocus() {}\r\n    _focusTarget() {\r\n        return this._itemElements()\r\n    }\r\n    _renderFocusTarget() {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this._resetTabIndex($appointment)\r\n    }\r\n    _focusInHandler(e) {\r\n        super._focusInHandler(e);\r\n        this._$currentAppointment = $(e.target);\r\n        this.option(\"focusedElement\", getPublicElement($(e.target)))\r\n    }\r\n    _focusOutHandler(e) {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this.option(\"focusedElement\", getPublicElement($appointment));\r\n        super._focusOutHandler(e)\r\n    }\r\n    _eventBindingTarget() {\r\n        return this._itemContainer()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            noDataText: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            tabIndex: 0,\r\n            fixedContainer: null,\r\n            allDayContainer: null,\r\n            allowDrag: true,\r\n            allowResize: true,\r\n            allowAllDayResize: true,\r\n            onAppointmentDblClick: null,\r\n            _collectorOffset: 0,\r\n            groups: [],\r\n            resources: []\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        if (this.option(\"isRenovatedAppointments\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._cleanFocusState();\r\n                this._clearDropDownItems();\r\n                this._clearDropDownItemsElements();\r\n                this._repaintAppointments(args.value);\r\n                this._renderDropDownAppointments();\r\n                this._attachAppointmentsEvents();\r\n                break;\r\n            case \"fixedContainer\":\r\n            case \"allDayContainer\":\r\n            case \"onAppointmentDblClick\":\r\n                break;\r\n            case \"allowDrag\":\r\n            case \"allowResize\":\r\n            case \"allowAllDayResize\":\r\n                this._invalidate();\r\n                break;\r\n            case \"focusedElement\":\r\n                this._resetTabIndex($(args.value));\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowDelete\":\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this._clearDropDownItemsElements();\r\n                this._renderDropDownAppointments();\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _isAllDayAppointment(appointment) {\r\n        return appointment.settings.length && appointment.settings[0].allDay || false\r\n    }\r\n    _isRepaintAppointment(appointment) {\r\n        return !isDefined(appointment.needRepaint) || true === appointment.needRepaint\r\n    }\r\n    _isRepaintAll(appointments) {\r\n        if (this.isAgendaView) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < appointments.length; i++) {\r\n            if (!this._isRepaintAppointment(appointments[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    _applyFragment(fragment, allDay) {\r\n        if (fragment.children().length > 0) {\r\n            this._getAppointmentContainer(allDay).append(fragment)\r\n        }\r\n    }\r\n    _onEachAppointment(appointment, index, container, isRepaintAll) {\r\n        if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\r\n            this._clearItem(appointment)\r\n        } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\r\n            (() => {\r\n                appointment.needRepaint = false;\r\n                this._clearItem(appointment);\r\n                this._renderItem(index, appointment, container)\r\n            })()\r\n        }\r\n    }\r\n    _repaintAppointments(appointments) {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            var isRepaintAll = this._isRepaintAll(appointments);\r\n            if (isRepaintAll) {\r\n                this._getAppointmentContainer(true).html(\"\");\r\n                this._getAppointmentContainer(false).html(\"\")\r\n            }!appointments.length && this._cleanItemContainer();\r\n            appointments.forEach((appointment, index) => {\r\n                var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\r\n                this._onEachAppointment(appointment, index, container, isRepaintAll)\r\n            })\r\n        })\r\n    }\r\n    _renderByFragments(renderFunction) {\r\n        if (this.isVirtualScrolling) {\r\n            var $commonFragment = $(domAdapter.createDocumentFragment());\r\n            var $allDayFragment = $(domAdapter.createDocumentFragment());\r\n            renderFunction($commonFragment, $allDayFragment);\r\n            this._applyFragment($commonFragment, false);\r\n            this._applyFragment($allDayFragment, true)\r\n        } else {\r\n            renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true))\r\n        }\r\n    }\r\n    _attachAppointmentsEvents() {\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._attachContextMenuEvent();\r\n        this._attachAppointmentDblClick();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents()\r\n    }\r\n    _clearItem(item) {\r\n        var $items = this._findItemElementByItem(item.itemData);\r\n        if (!$items.length) {\r\n            return\r\n        }\r\n        each($items, (function(_, $item) {\r\n            $item.detach();\r\n            $item.remove()\r\n        }))\r\n    }\r\n    _clearDropDownItems() {\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clearDropDownItemsElements() {\r\n        this.invoke(\"clearCompactAppointments\")\r\n    }\r\n    _findItemElementByItem(item) {\r\n        var result = [];\r\n        var that = this;\r\n        this.itemElements().each((function() {\r\n            var $item = $(this);\r\n            if ($item.data(that._itemDataKey()) === item) {\r\n                result.push($item)\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _itemClass() {\r\n        return APPOINTMENT_ITEM_CLASS\r\n    }\r\n    _itemContainer() {\r\n        var $container = super._itemContainer();\r\n        var $result = $container;\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $result = $container.add($allDayContainer)\r\n        }\r\n        return $result\r\n    }\r\n    _cleanItemContainer() {\r\n        super._cleanItemContainer();\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $allDayContainer.empty()\r\n        }\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        delete this._$currentAppointment;\r\n        delete this._initialSize;\r\n        delete this._initialCoordinates\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS);\r\n        this._preventSingleAppointmentClick = false\r\n    }\r\n    _renderAppointmentTemplate($container, appointment, model) {\r\n        var config = {\r\n            isAllDay: appointment.allDay,\r\n            isRecurrence: appointment.recurrenceRule,\r\n            html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\r\n        };\r\n        var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\r\n        $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config))\r\n    }\r\n    _executeItemRenderAction(index, itemData, itemElement) {\r\n        var action = this._getItemRenderAction();\r\n        if (action) {\r\n            action(this.invoke(\"mapAppointmentFields\", {\r\n                itemData: itemData,\r\n                itemElement: itemElement\r\n            }))\r\n        }\r\n        delete this._currentAppointmentSettings\r\n    }\r\n    _itemClickHandler(e) {\r\n        super._itemClickHandler(e, {}, {\r\n            afterExecute: function(e) {\r\n                this._processItemClick(e.args[0].event)\r\n            }.bind(this)\r\n        })\r\n    }\r\n    _processItemClick(e) {\r\n        var $target = $(e.currentTarget);\r\n        var data = this._getItemData($target);\r\n        if (\"keydown\" === e.type || isFakeClickEvent(e)) {\r\n            this.notifyObserver(\"showEditAppointmentPopup\", {\r\n                data: data,\r\n                target: $target\r\n            });\r\n            return\r\n        }\r\n        this._appointmentClickTimeout = setTimeout(function() {\r\n            if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\r\n                this.notifyObserver(\"showAppointmentTooltip\", {\r\n                    data: data,\r\n                    target: $target\r\n                })\r\n            }\r\n            this._preventSingleAppointmentClick = false\r\n        }.bind(this), 300)\r\n    }\r\n    _extendActionArgs($itemElement) {\r\n        var args = super._extendActionArgs($itemElement);\r\n        return this.invoke(\"mapAppointmentFields\", args)\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._attachAppointmentDblClick()\r\n    }\r\n    _attachAppointmentDblClick() {\r\n        var that = this;\r\n        var itemSelector = that._itemSelector();\r\n        var itemContainer = this._itemContainer();\r\n        eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\r\n        eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, (function(e) {\r\n            that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\r\n                afterExecute: function(e) {\r\n                    that._dblClickHandler(e.args[0].event)\r\n                }\r\n            })\r\n        }))\r\n    }\r\n    _dblClickHandler(e) {\r\n        var $targetAppointment = $(e.currentTarget);\r\n        var appointmentData = this._getItemData($targetAppointment);\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        this._preventSingleAppointmentClick = true;\r\n        this.notifyObserver(\"showEditAppointmentPopup\", {\r\n            data: appointmentData,\r\n            target: $targetAppointment\r\n        })\r\n    }\r\n    _renderItem(index, item, container) {\r\n        var itemData = item.itemData;\r\n        var $items = [];\r\n        for (var i = 0; i < item.settings.length; i++) {\r\n            var setting = item.settings[i];\r\n            this._currentAppointmentSettings = setting;\r\n            var $item = super._renderItem(index, itemData, container);\r\n            $item.data(APPOINTMENT_SETTINGS_KEY, setting);\r\n            $items.push($item)\r\n        }\r\n        return $items\r\n    }\r\n    _getItemContent($itemFrame) {\r\n        $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\r\n        var $itemContent = super._getItemContent($itemFrame);\r\n        return $itemContent\r\n    }\r\n    _createItemByTemplate(itemTemplate, renderArgs) {\r\n        var {\r\n            itemData: itemData,\r\n            container: container,\r\n            index: index\r\n        } = renderArgs;\r\n        return itemTemplate.render({\r\n            model: {\r\n                appointmentData: itemData,\r\n                targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\r\n            },\r\n            container: container,\r\n            index: index\r\n        })\r\n    }\r\n    _getAppointmentContainer(allDay) {\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        var $container = this.itemsContainer().not($allDayContainer);\r\n        if (allDay && $allDayContainer) {\r\n            $container = $allDayContainer\r\n        }\r\n        return $container\r\n    }\r\n    _postprocessRenderItem(args) {\r\n        this._renderAppointment(args.itemElement, this._currentAppointmentSettings)\r\n    }\r\n    _renderAppointment(element, settings) {\r\n        element.data(APPOINTMENT_SETTINGS_KEY, settings);\r\n        this._applyResourceDataAttr(element);\r\n        var rawAppointment = this._getItemData(element);\r\n        var geometry = this.invoke(\"getAppointmentGeometry\", settings);\r\n        var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\r\n        var allowDrag = this.option(\"allowDrag\");\r\n        var allDay = settings.allDay;\r\n        this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\r\n        if (settings.virtual) {\r\n            var appointmentConfig = {\r\n                itemData: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                groups: this.option(\"groups\")\r\n            };\r\n            var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\r\n            this._processVirtualAppointment(settings, element, rawAppointment, deferredColor)\r\n        } else {\r\n            var _settings$info;\r\n            var config = {\r\n                data: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                observer: this.option(\"observer\"),\r\n                geometry: geometry,\r\n                direction: settings.direction || \"vertical\",\r\n                allowResize: allowResize,\r\n                allowDrag: allowDrag,\r\n                allDay: allDay,\r\n                reduced: settings.appointmentReduced,\r\n                isCompact: settings.isCompact,\r\n                startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\r\n                cellWidth: this.invoke(\"getCellWidth\"),\r\n                cellHeight: this.invoke(\"getCellHeight\"),\r\n                resizableConfig: this._resizableConfig(rawAppointment, settings),\r\n                groups: this.option(\"groups\"),\r\n                getAppointmentColor: this.option(\"getAppointmentColor\"),\r\n                getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\r\n            };\r\n            if (this.isAgendaView) {\r\n                var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\r\n                config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment)\r\n            }\r\n            this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends({}, config, {\r\n                dataAccessors: this.option(\"dataAccessors\"),\r\n                getResizableStep: this.option(\"getResizableStep\")\r\n            }))\r\n        }\r\n    }\r\n    _applyResourceDataAttr($appointment) {\r\n        var dataAccessors = this.option(\"getResourceDataAccessors\")();\r\n        var rawAppointment = this._getItemData($appointment);\r\n        each(dataAccessors.getter, (function(key) {\r\n            var value = dataAccessors.getter[key](rawAppointment);\r\n            if (isDefined(value)) {\r\n                var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\r\n                wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true))\r\n            }\r\n        }))\r\n    }\r\n    _resizableConfig(appointmentData, itemSetting) {\r\n        return {\r\n            area: this._calculateResizableArea(itemSetting, appointmentData),\r\n            onResizeStart: function(e) {\r\n                this._$currentAppointment = $(e.element);\r\n                if (this.invoke(\"needRecalculateResizableArea\")) {\r\n                    var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\r\n                    e.component.option(\"area\", updatedArea);\r\n                    e.component._renderDragOffsets(e.event)\r\n                }\r\n                this._initialSize = {\r\n                    width: e.width,\r\n                    height: e.height\r\n                };\r\n                this._initialCoordinates = locate(this._$currentAppointment)\r\n            }.bind(this),\r\n            onResizeEnd: function(e) {\r\n                if (this._escPressed) {\r\n                    e.event.cancel = true;\r\n                    return\r\n                }\r\n                this._resizeEndHandler(e)\r\n            }.bind(this)\r\n        }\r\n    }\r\n    _calculateResizableArea(itemSetting, appointmentData) {\r\n        var area = this.$element().closest(\".dx-scrollable-content\");\r\n        return this.invoke(\"getResizableAppointmentArea\", {\r\n            coordinates: {\r\n                left: itemSetting.left,\r\n                top: 0,\r\n                groupIndex: itemSetting.groupIndex\r\n            },\r\n            allDay: itemSetting.allDay\r\n        }) || area\r\n    }\r\n    _resizeEndHandler(e) {\r\n        var $element = $(e.element);\r\n        var {\r\n            allDay: allDay,\r\n            info: info\r\n        } = $element.data(\"dxAppointmentSettings\");\r\n        var sourceAppointment = this._getItemData($element);\r\n        var dateRange = {};\r\n        if (allDay) {\r\n            dateRange = this.resizeAllDay(e)\r\n        } else {\r\n            var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\r\n            var endDate = info.appointment.endDate;\r\n            dateRange = this._getDateRange(e, startDate, endDate)\r\n        }\r\n        this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"))\r\n    }\r\n    resizeAllDay(e) {\r\n        var $element = $(e.element);\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        return getAppointmentDateRange({\r\n            handles: e.handles,\r\n            appointmentSettings: $element.data(\"dxAppointmentSettings\"),\r\n            isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\r\n            isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\r\n            appointmentRect: getBoundingRect($element[0]),\r\n            parentAppointmentRect: getBoundingRect($element.parent()[0]),\r\n            viewDataProvider: this.option(\"getViewDataProvider\")(),\r\n            isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\r\n            startDayHour: this.invoke(\"getStartDayHour\"),\r\n            endDayHour: this.invoke(\"getEndDayHour\"),\r\n            timeZoneCalculator: timeZoneCalculator,\r\n            dataAccessors: dataAccessors,\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            DOMMetaData: this.option(\"getDOMElementsMetaData\")()\r\n        })\r\n    }\r\n    updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\r\n        var sourceAppointment = this._getItemData($element);\r\n        var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\r\n        modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\r\n        modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\r\n        this.notifyObserver(\"updateAppointmentAfterResize\", {\r\n            target: sourceAppointment,\r\n            data: modifiedAppointmentAdapter.clone({\r\n                pathTimeZone: \"fromGrid\"\r\n            }).source(),\r\n            $appointment: $element\r\n        })\r\n    }\r\n    _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\r\n        var startDate = appointmentInfo.startDate;\r\n        var recurrenceProcessor = getRecurrenceProcessor();\r\n        var {\r\n            recurrenceRule: recurrenceRule,\r\n            startDateTimeZone: startDateTimeZone\r\n        } = appointmentAdapter;\r\n        var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\r\n        var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\r\n        if (!e.handles.top && !isRecurrent && !isAllDay) {\r\n            startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\r\n                appointmentTimeZone: startDateTimeZone,\r\n                path: \"toGrid\"\r\n            })\r\n        }\r\n        return startDate\r\n    }\r\n    _getDateRange(e, startDate, endDate) {\r\n        var itemData = this._getItemData(e.element);\r\n        var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\r\n        var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\r\n        var isStartDateChanged = false;\r\n        var isAllDay = this.invoke(\"isAllDay\", itemData);\r\n        var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\r\n        var startTime;\r\n        var endTime;\r\n        if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\r\n            isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left\r\n        } else {\r\n            isStartDateChanged = e.handles.top\r\n        }\r\n        if (isStartDateChanged) {\r\n            startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\r\n            startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\r\n            endTime = endDate.getTime()\r\n        } else {\r\n            startTime = startDate.getTime();\r\n            endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\r\n            endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime)\r\n        }\r\n        return {\r\n            startDate: new Date(startTime),\r\n            endDate: new Date(endTime)\r\n        }\r\n    }\r\n    _correctEndDateByDelta(endDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = endDate.getTime() + deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(endDate);\r\n        var minDate = new Date(endDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result > maxDate.getTime() || result <= minDate.getTime()) {\r\n            var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\r\n            var lastDay = new Date(correctedEndDate);\r\n            lastDay.setHours(startDayHour, 0, 0, 0);\r\n            result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _correctStartDateByDelta(startDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = startDate.getTime() - deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(startDate);\r\n        var minDate = new Date(startDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result < minDate.getTime() || result >= maxDate.getTime()) {\r\n            var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\r\n            firstDay.setHours(endDayHour, 0, 0, 0);\r\n            result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\r\n        var virtualAppointment = appointmentSetting.virtual;\r\n        var virtualGroupIndex = virtualAppointment.index;\r\n        if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\r\n            this._virtualAppointments[virtualGroupIndex] = {\r\n                coordinates: {\r\n                    top: virtualAppointment.top,\r\n                    left: virtualAppointment.left\r\n                },\r\n                items: {\r\n                    data: [],\r\n                    colors: [],\r\n                    settings: []\r\n                },\r\n                isAllDay: virtualAppointment.isAllDay ? true : false,\r\n                buttonColor: color\r\n            }\r\n        }\r\n        appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\r\n        this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\r\n        this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\r\n        this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\r\n        $appointment.remove()\r\n    }\r\n    _renderContentImpl() {\r\n        super._renderContentImpl();\r\n        this._renderDropDownAppointments()\r\n    }\r\n    _renderDropDownAppointments() {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            each(this._virtualAppointments, function(groupIndex) {\r\n                var virtualGroup = this._virtualAppointments[groupIndex];\r\n                var virtualItems = virtualGroup.items;\r\n                var virtualCoordinates = virtualGroup.coordinates;\r\n                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\r\n                var left = virtualCoordinates.left;\r\n                var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\r\n                var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\r\n                var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\r\n                this.notifyObserver(\"renderCompactAppointments\", {\r\n                    $container: $fragment,\r\n                    coordinates: {\r\n                        top: virtualCoordinates.top,\r\n                        left: left + rtlOffset\r\n                    },\r\n                    items: virtualItems,\r\n                    buttonColor: virtualGroup.buttonColor,\r\n                    width: buttonWidth - this.option(\"_collectorOffset\"),\r\n                    height: buttonHeight,\r\n                    onAppointmentClick: this.option(\"onItemClick\"),\r\n                    allowDrag: this.option(\"allowDrag\"),\r\n                    cellWidth: this.invoke(\"getCellWidth\"),\r\n                    isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\r\n                })\r\n            }.bind(this))\r\n        })\r\n    }\r\n    _isGroupCompact(virtualGroup) {\r\n        return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\")\r\n    }\r\n    _sortAppointmentsByStartDate(appointments) {\r\n        return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"))\r\n    }\r\n    _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\r\n        var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\r\n        var result = {\r\n            parts: [],\r\n            indexes: []\r\n        };\r\n        if (recurrenceRule) {\r\n            var dates = appointment.settings || appointment;\r\n            var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\r\n            var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\r\n            var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\r\n            var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n            var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\r\n            var startViewDate = this.invoke(\"getStartViewDate\");\r\n            var endViewDate = this.invoke(\"getEndViewDate\");\r\n            var timezoneCalculator = this.option(\"timeZoneCalculator\");\r\n            var recurrentDates = getRecurrenceProcessor().generateDates({\r\n                rule: recurrenceRule,\r\n                exception: recurrenceException,\r\n                start: startDate,\r\n                end: endDate,\r\n                min: startViewDate,\r\n                max: endViewDate,\r\n                appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\r\n            });\r\n            var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\r\n            for (var i = 0; i < recurrentDateCount; i++) {\r\n                var appointmentPart = extend({}, appointment, true);\r\n                if (recurrentDates[i]) {\r\n                    var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\r\n                    this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\r\n                    appointmentPart.settings = appointmentSettings\r\n                } else {\r\n                    appointmentPart.settings = dates\r\n                }\r\n                result.parts.push(appointmentPart);\r\n                if (!skipLongAppointments) {\r\n                    this._processLongAppointment(appointmentPart, result)\r\n                }\r\n            }\r\n            result.indexes.push(index)\r\n        }\r\n        return result\r\n    }\r\n    _processLongAppointment(appointment, result) {\r\n        var parts = this.splitAppointmentByDay(appointment);\r\n        var partCount = parts.length;\r\n        var endViewDate = this.invoke(\"getEndViewDate\").getTime();\r\n        var startViewDate = this.invoke(\"getStartViewDate\").getTime();\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        result = result || {\r\n            parts: []\r\n        };\r\n        if (partCount > 1) {\r\n            extend(appointment, parts[0]);\r\n            for (var i = 1; i < partCount; i++) {\r\n                var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\r\n                startDate = timeZoneCalculator.createDate(startDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                if (startDate < endViewDate && startDate > startViewDate) {\r\n                    result.parts.push(parts[i])\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\r\n        each(recurrenceIndexes, (function(i, index) {\r\n            appointments.splice(index - i, 1)\r\n        }))\r\n    }\r\n    _combineAppointments(appointments, additionalAppointments) {\r\n        if (additionalAppointments.length) {\r\n            appointments.push(...additionalAppointments)\r\n        }\r\n        this._sortAppointmentsByStartDate(appointments)\r\n    }\r\n    _applyStartDateToObj(startDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\r\n        return obj\r\n    }\r\n    _applyEndDateToObj(endDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\r\n        return obj\r\n    }\r\n    moveAppointmentBack(dragEvent) {\r\n        var $appointment = this._$currentAppointment;\r\n        var size = this._initialSize;\r\n        var coords = this._initialCoordinates;\r\n        if (dragEvent) {\r\n            this._removeDragSourceClassFromDraggedAppointment();\r\n            if (isDeferred(dragEvent.cancel)) {\r\n                dragEvent.cancel.resolve(true)\r\n            } else {\r\n                dragEvent.cancel = true\r\n            }\r\n        }\r\n        if ($appointment && !dragEvent) {\r\n            if (coords) {\r\n                move($appointment, coords);\r\n                delete this._initialSize\r\n            }\r\n            if (size) {\r\n                setOuterWidth($appointment, size.width);\r\n                setOuterHeight($appointment, size.height);\r\n                delete this._initialCoordinates\r\n            }\r\n        }\r\n    }\r\n    focus() {\r\n        if (this._$currentAppointment) {\r\n            var focusedElement = getPublicElement(this._$currentAppointment);\r\n            this.option(\"focusedElement\", focusedElement);\r\n            eventsEngine.trigger(focusedElement, \"focus\")\r\n        }\r\n    }\r\n    splitAppointmentByDay(appointment) {\r\n        var dates = appointment.settings || appointment;\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\r\n        var startDate = dateUtils.makeDate(originalStartDate);\r\n        var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\r\n        var maxAllowedDate = this.invoke(\"getEndViewDate\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\r\n        var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\r\n        var result = [];\r\n        startDate = timeZoneCalculator.createDate(startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        endDate = timeZoneCalculator.createDate(endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\r\n            result.push(this._applyStartDateToObj(new Date(startDate), {\r\n                appointmentData: appointment\r\n            }));\r\n            startDate.setDate(startDate.getDate() + 1)\r\n        }\r\n        while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\r\n            var currentStartDate = new Date(startDate);\r\n            var currentEndDate = new Date(startDate);\r\n            this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\r\n            this._checkEndDate(currentEndDate, endDate, endDayHour);\r\n            var appointmentData = deepExtendArraySafe({}, appointment, true);\r\n            var appointmentSettings = {};\r\n            this._applyStartDateToObj(currentStartDate, appointmentSettings);\r\n            this._applyEndDateToObj(currentEndDate, appointmentSettings);\r\n            appointmentData.settings = appointmentSettings;\r\n            result.push(appointmentData);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            startDate.setDate(startDate.getDate() + 1);\r\n            startDate.setHours(startDayHour)\r\n        }\r\n        return result\r\n    }\r\n    _checkStartDate(currentDate, originalDate, startDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\r\n            currentDate.setHours(startDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _checkEndDate(currentDate, originalDate, endDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\r\n            currentDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _removeDragSourceClassFromDraggedAppointment() {\r\n        var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\r\n        $appointments.each((_, element) => {\r\n            var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\r\n            appointmentInstance.option(\"isDragSource\", false)\r\n        })\r\n    }\r\n    _setDragSourceAppointment(appointment, settings) {\r\n        var $appointments = this._findItemElementByItem(appointment);\r\n        var {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        } = settings.info.sourceAppointment;\r\n        var {\r\n            groupIndex: groupIndex\r\n        } = settings;\r\n        $appointments.forEach($item => {\r\n            var {\r\n                info: itemInfo,\r\n                groupIndex: itemGroupIndex\r\n            } = $item.data(APPOINTMENT_SETTINGS_KEY);\r\n            var {\r\n                startDate: itemStartDate,\r\n                endDate: itemEndDate\r\n            } = itemInfo.sourceAppointment;\r\n            var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\r\n            var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\r\n            appointmentInstance.option(\"isDragSource\", isDragSource)\r\n        })\r\n    }\r\n    updateResizableArea() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = grep($allResizableElements, el => {\r\n            var $el = $(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var {\r\n                area: area,\r\n                handles: handles\r\n            } = resizableInst.option();\r\n            return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area)\r\n        });\r\n        each(horizontalResizables, (_, el) => {\r\n            var $el = $(el);\r\n            var position = locate($el);\r\n            var appointmentData = this._getItemData($el);\r\n            var area = this._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\r\nexport default SchedulerAppointments;\r\n"]},"metadata":{},"sourceType":"module"}