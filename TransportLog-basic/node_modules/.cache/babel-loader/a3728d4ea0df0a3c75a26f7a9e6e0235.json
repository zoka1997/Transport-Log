{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoran\\\\source\\\\repos\\\\TransportApp\\\\TransportLog-basic\\\\src\\\\pages\\\\Home\\\\Home.js\";\nimport React from 'react';\nimport Scheduler, { Resource, View } from 'devextreme-react/scheduler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentDate = new Date(2021, 3, 27);\nconst dayOfWeekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst typeGroups = ['typeId'];\nconst priorityGroups = ['priorityId'];\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Scheduler, {\n      timeZone: \"America/Los_Angeles\",\n      dataSource: data,\n      defaultCurrentView: \"workWeek\",\n      showAllDayPanel: false,\n      defaultCurrentDate: currentDate,\n      height: 600,\n      startDayHour: 7,\n      endDayHour: 23,\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        type: \"day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        type: \"week\",\n        groups: typeGroups,\n        dateCellRender: renderDateCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        type: \"workWeek\",\n        groups: priorityGroups,\n        startDayHour: 9,\n        endDayHour: 18,\n        dateCellRender: renderDateCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        type: \"month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Resource, {\n        dataSource: priorityData,\n        fieldExpr: \"priorityId\",\n        label: \"Priority\",\n        allowMultiple: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Resource, {\n        dataSource: typeData,\n        fieldExpr: \"typeId\",\n        label: \"Type\",\n        allowMultiple: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction renderDateCell(cellData) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: dayOfWeekNames[cellData.date.getDay()]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number\",\n      children: cellData.date.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/src/pages/Home/Home.js"],"names":["React","Scheduler","Resource","View","currentDate","Date","dayOfWeekNames","typeGroups","priorityGroups","App","Component","render","data","renderDateCell","priorityData","typeData","cellData","date","getDay","getDate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,4BAA1C;;AAEA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApB;AACA,MAAMC,cAAc,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAvB;AACA,MAAMC,UAAU,GAAG,CAAC,QAAD,CAAnB;AACA,MAAMC,cAAc,GAAG,CAAC,YAAD,CAAvB;;AAEA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAC,qBADX;AAEE,MAAA,UAAU,EAAEC,IAFd;AAGE,MAAA,kBAAkB,EAAC,UAHrB;AAIE,MAAA,eAAe,EAAE,KAJnB;AAKE,MAAA,kBAAkB,EAAER,WALtB;AAME,MAAA,MAAM,EAAE,GANV;AAOE,MAAA,YAAY,EAAE,CAPhB;AAQE,MAAA,UAAU,EAAE,EARd;AAAA,8BAUE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,MAAM,EAAEG,UAFV;AAGE,QAAA,cAAc,EAAEM;AAHlB;AAAA;AAAA;AAAA;AAAA,cAbF,eAkBE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,MAAM,EAAEL,cAFV;AAGE,QAAA,YAAY,EAAE,CAHhB;AAIE,QAAA,UAAU,EAAE,EAJd;AAKE,QAAA,cAAc,EAAEK;AALlB;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE,QAAC,IAAD;AACE,QAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,cAzBF,eA4BE,QAAC,QAAD;AACE,QAAA,UAAU,EAAEC,YADd;AAEE,QAAA,SAAS,EAAC,YAFZ;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,aAAa,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,cA5BF,eAkCE,QAAC,QAAD;AACE,QAAA,UAAU,EAAEC,QADd;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,aAAa,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD;;AA7C+B;;AAgDlC,SAASF,cAAT,CAAwBG,QAAxB,EAAkC;AAChC,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBV,cAAc,CAACU,QAAQ,CAACC,IAAT,CAAcC,MAAd,EAAD;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBF,QAAQ,CAACC,IAAT,CAAcE,OAAd;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeV,GAAf","sourcesContent":["import React from 'react';\r\nimport Scheduler, { Resource, View } from 'devextreme-react/scheduler';\r\n\r\nconst currentDate = new Date(2021, 3, 27);\r\nconst dayOfWeekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst typeGroups = ['typeId'];\r\nconst priorityGroups = ['priorityId'];\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Scheduler\r\n        timeZone=\"America/Los_Angeles\"\r\n        dataSource={data}\r\n        defaultCurrentView=\"workWeek\"\r\n        showAllDayPanel={false}\r\n        defaultCurrentDate={currentDate}\r\n        height={600}\r\n        startDayHour={7}\r\n        endDayHour={23}\r\n      >\r\n        <View\r\n          type=\"day\"\r\n        />\r\n        <View\r\n          type=\"week\"\r\n          groups={typeGroups}\r\n          dateCellRender={renderDateCell}\r\n        />\r\n        <View\r\n          type=\"workWeek\"\r\n          groups={priorityGroups}\r\n          startDayHour={9}\r\n          endDayHour={18}\r\n          dateCellRender={renderDateCell}\r\n        />\r\n        <View\r\n          type=\"month\"\r\n        />\r\n        <Resource\r\n          dataSource={priorityData}\r\n          fieldExpr=\"priorityId\"\r\n          label=\"Priority\"\r\n          allowMultiple={false}\r\n        />\r\n        <Resource\r\n          dataSource={typeData}\r\n          fieldExpr=\"typeId\"\r\n          label=\"Type\"\r\n          allowMultiple={false}\r\n        />\r\n      </Scheduler>\r\n    );\r\n  }\r\n}\r\n\r\nfunction renderDateCell(cellData) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"name\">{dayOfWeekNames[cellData.date.getDay()]}</div>\r\n      <div className=\"number\">{cellData.date.getDate()}</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}