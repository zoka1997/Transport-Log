{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"isValid\", \"label\", \"labelMode\", \"max\", \"min\", \"mode\", \"name\", \"onClick\", \"onFocusIn\", \"onKeyDown\", \"readOnly\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"validationError\", \"validationErrors\", \"validationMessageMode\", \"validationStatus\", \"value\", \"valueChange\", \"visible\", \"width\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport LegacyNumberBox from \"../../../ui/number_box\";\nimport { DomComponentWrapper } from \"../common/dom_component_wrapper\";\nimport { EditorProps } from \"./common/editor\";\nimport { EditorStateProps } from \"./common/editor_state_props\";\nimport { EditorLabelProps } from \"./common/editor_label_props\";\nvar DEFAULT_VALUE = 0;\nexport var viewFunction = _ref => {\n  var {\n    componentProps: componentProps,\n    restAttributes: restAttributes\n  } = _ref;\n  return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\n    componentType: LegacyNumberBox,\n    componentProps: componentProps,\n    templateNames: []\n  }, restAttributes)));\n};\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(EditorProps), Object.getOwnPropertyDescriptors({\n  defaultValue: DEFAULT_VALUE,\n  isReactComponentWrapper: true\n})));\nexport var NumberBoxPropsType = {\n  get defaultValue() {\n    return NumberBoxProps.defaultValue;\n  },\n\n  get readOnly() {\n    return NumberBoxProps.readOnly;\n  },\n\n  get name() {\n    return NumberBoxProps.name;\n  },\n\n  get validationError() {\n    return NumberBoxProps.validationError;\n  },\n\n  get validationErrors() {\n    return NumberBoxProps.validationErrors;\n  },\n\n  get validationMessageMode() {\n    return NumberBoxProps.validationMessageMode;\n  },\n\n  get validationStatus() {\n    return NumberBoxProps.validationStatus;\n  },\n\n  get isValid() {\n    return NumberBoxProps.isValid;\n  },\n\n  get className() {\n    return NumberBoxProps.className;\n  },\n\n  get activeStateEnabled() {\n    return EditorStateProps.activeStateEnabled;\n  },\n\n  get disabled() {\n    return NumberBoxProps.disabled;\n  },\n\n  get focusStateEnabled() {\n    return EditorStateProps.focusStateEnabled;\n  },\n\n  get hoverStateEnabled() {\n    return EditorStateProps.hoverStateEnabled;\n  },\n\n  get tabIndex() {\n    return NumberBoxProps.tabIndex;\n  },\n\n  get visible() {\n    return NumberBoxProps.visible;\n  },\n\n  get label() {\n    return EditorLabelProps.label;\n  },\n\n  get labelMode() {\n    return EditorLabelProps.labelMode;\n  },\n\n  isReactComponentWrapper: true\n};\nexport class NumberBox extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\n    };\n  }\n\n  get componentProps() {\n    return _extends({}, this.props, {\n      value: void 0 !== this.props.value ? this.props.value : this.state.value\n    });\n  }\n\n  get restAttributes() {\n    var _this$props$value = _extends({}, this.props, {\n      value: void 0 !== this.props.value ? this.props.value : this.state.value\n    }),\n        restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        value: void 0 !== this.props.value ? this.props.value : this.state.value\n      }),\n      componentProps: this.componentProps,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nNumberBox.defaultProps = NumberBoxPropsType;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/editors/number_box.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createComponentVNode","normalizeProps","BaseInfernoComponent","LegacyNumberBox","DomComponentWrapper","EditorProps","EditorStateProps","EditorLabelProps","DEFAULT_VALUE","viewFunction","_ref","componentProps","restAttributes","componentType","templateNames","NumberBoxProps","Object","create","prototype","getOwnPropertyDescriptors","defaultValue","isReactComponentWrapper","NumberBoxPropsType","readOnly","name","validationError","validationErrors","validationMessageMode","validationStatus","isValid","className","activeStateEnabled","disabled","focusStateEnabled","hoverStateEnabled","tabIndex","visible","label","labelMode","NumberBox","constructor","props","state","value","_this$props$value","restProps","render","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"isValid\", \"label\", \"labelMode\", \"max\", \"min\", \"mode\", \"name\", \"onClick\", \"onFocusIn\", \"onKeyDown\", \"readOnly\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"validationError\", \"validationErrors\", \"validationMessageMode\", \"validationStatus\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    EditorProps\r\n} from \"./common/editor\";\r\nimport {\r\n    EditorStateProps\r\n} from \"./common/editor_state_props\";\r\nimport {\r\n    EditorLabelProps\r\n} from \"./common/editor_label_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        componentProps: componentProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: componentProps,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(EditorProps), Object.getOwnPropertyDescriptors({\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport var NumberBoxPropsType = {\r\n    get defaultValue() {\r\n        return NumberBoxProps.defaultValue\r\n    },\r\n    get readOnly() {\r\n        return NumberBoxProps.readOnly\r\n    },\r\n    get name() {\r\n        return NumberBoxProps.name\r\n    },\r\n    get validationError() {\r\n        return NumberBoxProps.validationError\r\n    },\r\n    get validationErrors() {\r\n        return NumberBoxProps.validationErrors\r\n    },\r\n    get validationMessageMode() {\r\n        return NumberBoxProps.validationMessageMode\r\n    },\r\n    get validationStatus() {\r\n        return NumberBoxProps.validationStatus\r\n    },\r\n    get isValid() {\r\n        return NumberBoxProps.isValid\r\n    },\r\n    get className() {\r\n        return NumberBoxProps.className\r\n    },\r\n    get activeStateEnabled() {\r\n        return EditorStateProps.activeStateEnabled\r\n    },\r\n    get disabled() {\r\n        return NumberBoxProps.disabled\r\n    },\r\n    get focusStateEnabled() {\r\n        return EditorStateProps.focusStateEnabled\r\n    },\r\n    get hoverStateEnabled() {\r\n        return EditorStateProps.hoverStateEnabled\r\n    },\r\n    get tabIndex() {\r\n        return NumberBoxProps.tabIndex\r\n    },\r\n    get visible() {\r\n        return NumberBoxProps.visible\r\n    },\r\n    get label() {\r\n        return EditorLabelProps.label\r\n    },\r\n    get labelMode() {\r\n        return EditorLabelProps.labelMode\r\n    },\r\n    isReactComponentWrapper: true\r\n};\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get componentProps() {\r\n        return _extends({}, this.props, {\r\n            value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            componentProps: this.componentProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxPropsType;\r\n"]},"metadata":{},"sourceType":"module"}