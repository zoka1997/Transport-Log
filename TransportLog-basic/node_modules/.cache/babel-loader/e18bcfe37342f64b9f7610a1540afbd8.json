{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport DateView from \"./ui.date_view\";\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\nimport { inputType } from \"../../core/utils/support\";\nimport { extend } from \"../../core/utils/extend\";\nimport dateUtils from \"./ui.date_utils\";\nimport messageLocalization from \"../../localization/message\";\nvar DateViewStrategy = DateBoxStrategy.inherit({\n  NAME: \"DateView\",\n  getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      openOnFieldClick: true,\n      applyButtonText: messageLocalization.format(\"OK\"),\n      \"dropDownOptions.showTitle\": true\n    });\n  },\n  getDisplayFormat: function (displayFormat) {\n    return displayFormat || dateUtils.FORMATS_MAP[this.dateBox.option(\"type\")];\n  },\n  popupConfig: function (config) {\n    return {\n      toolbarItems: this.dateBox._popupToolbarItemsConfig(),\n      onInitialized: config.onInitialized,\n      defaultOptionsRules: [{\n        device: {\n          platform: \"android\"\n        },\n        options: {\n          width: 333,\n          height: 331\n        }\n      }, {\n        device: function (_device) {\n          var platform = _device.platform;\n          return \"generic\" === platform || \"ios\" === platform;\n        },\n        options: {\n          width: \"auto\",\n          height: \"auto\"\n        }\n      }, {\n        device: function (_device2) {\n          var platform = _device2.platform;\n          var phone = _device2.phone;\n          return \"generic\" === platform && phone;\n        },\n        options: {\n          width: 333,\n          maxWidth: \"100%\",\n          maxHeight: \"100%\",\n          height: \"auto\",\n          position: {\n            collision: \"flipfit flip\"\n          }\n        }\n      }, {\n        device: {\n          platform: \"ios\",\n          phone: true\n        },\n        options: {\n          width: \"100%\",\n          position: {\n            my: \"bottom\",\n            at: \"bottom\",\n            of: window\n          }\n        }\n      }]\n    };\n  },\n  _renderWidget: function () {\n    if (inputType(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\n      if (this._widget) {\n        this._widget.$element().remove();\n\n        this._widget = null;\n      }\n\n      return;\n    }\n\n    var popup = this._getPopup();\n\n    if (this._widget) {\n      this._widget.option(this._getWidgetOptions());\n    } else {\n      var element = $(\"<div>\").appendTo(popup.$content());\n      this._widget = this._createWidget(element);\n    }\n\n    this._widget.$element().appendTo(this._getWidgetContainer());\n  },\n  _getWidgetName: function () {\n    return DateView;\n  },\n  renderOpenedState: function () {\n    this.callBase();\n\n    if (this._widget) {\n      this._widget.option(\"value\", this._widget._getCurrentDate());\n    }\n  },\n  _getWidgetOptions: function () {\n    return {\n      value: this.dateBoxValue() || new Date(),\n      type: this.dateBox.option(\"type\"),\n      minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 0, 1),\n      maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * dateUtils.ONE_YEAR),\n      onDisposing: function () {\n        this._widget = null;\n      }.bind(this)\n    };\n  }\n});\nexport default DateViewStrategy;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/date_box/ui.date_box.strategy.date_view.js"],"names":["$","getWindow","window","DateView","DateBoxStrategy","inputType","extend","dateUtils","messageLocalization","DateViewStrategy","inherit","NAME","getDefaultOptions","callBase","openOnFieldClick","applyButtonText","format","getDisplayFormat","displayFormat","FORMATS_MAP","dateBox","option","popupConfig","config","toolbarItems","_popupToolbarItemsConfig","onInitialized","defaultOptionsRules","device","platform","options","width","height","_device","_device2","phone","maxWidth","maxHeight","position","collision","my","at","of","_renderWidget","_isNativeType","_widget","$element","remove","popup","_getPopup","_getWidgetOptions","element","appendTo","$content","_createWidget","_getWidgetContainer","_getWidgetName","renderOpenedState","_getCurrentDate","value","dateBoxValue","Date","type","minDate","dateOption","maxDate","now","ONE_YEAR","onDisposing","bind"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.date_view.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport DateView from \"./ui.date_view\";\r\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\r\nimport {\r\n    inputType\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport dateUtils from \"./ui.date_utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar DateViewStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"DateView\",\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            openOnFieldClick: true,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            \"dropDownOptions.showTitle\": true\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || dateUtils.FORMATS_MAP[this.dateBox.option(\"type\")]\r\n    },\r\n    popupConfig: function(config) {\r\n        return {\r\n            toolbarItems: this.dateBox._popupToolbarItemsConfig(),\r\n            onInitialized: config.onInitialized,\r\n            defaultOptionsRules: [{\r\n                device: {\r\n                    platform: \"android\"\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    height: 331\r\n                }\r\n            }, {\r\n                device: function(_device) {\r\n                    var platform = _device.platform;\r\n                    return \"generic\" === platform || \"ios\" === platform\r\n                },\r\n                options: {\r\n                    width: \"auto\",\r\n                    height: \"auto\"\r\n                }\r\n            }, {\r\n                device: function(_device2) {\r\n                    var platform = _device2.platform;\r\n                    var phone = _device2.phone;\r\n                    return \"generic\" === platform && phone\r\n                },\r\n                options: {\r\n                    width: 333,\r\n                    maxWidth: \"100%\",\r\n                    maxHeight: \"100%\",\r\n                    height: \"auto\",\r\n                    position: {\r\n                        collision: \"flipfit flip\"\r\n                    }\r\n                }\r\n            }, {\r\n                device: {\r\n                    platform: \"ios\",\r\n                    phone: true\r\n                },\r\n                options: {\r\n                    width: \"100%\",\r\n                    position: {\r\n                        my: \"bottom\",\r\n                        at: \"bottom\",\r\n                        of: window\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    _renderWidget: function() {\r\n        if (inputType(this.dateBox.option(\"mode\")) && this.dateBox._isNativeType() || this.dateBox.option(\"readOnly\")) {\r\n            if (this._widget) {\r\n                this._widget.$element().remove();\r\n                this._widget = null\r\n            }\r\n            return\r\n        }\r\n        var popup = this._getPopup();\r\n        if (this._widget) {\r\n            this._widget.option(this._getWidgetOptions())\r\n        } else {\r\n            var element = $(\"<div>\").appendTo(popup.$content());\r\n            this._widget = this._createWidget(element)\r\n        }\r\n        this._widget.$element().appendTo(this._getWidgetContainer())\r\n    },\r\n    _getWidgetName: function() {\r\n        return DateView\r\n    },\r\n    renderOpenedState: function() {\r\n        this.callBase();\r\n        if (this._widget) {\r\n            this._widget.option(\"value\", this._widget._getCurrentDate())\r\n        }\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            value: this.dateBoxValue() || new Date,\r\n            type: this.dateBox.option(\"type\"),\r\n            minDate: this.dateBox.dateOption(\"min\") || new Date(1900, 0, 1),\r\n            maxDate: this.dateBox.dateOption(\"max\") || new Date(Date.now() + 50 * dateUtils.ONE_YEAR),\r\n            onDisposing: function() {\r\n                this._widget = null\r\n            }.bind(this)\r\n        }\r\n    }\r\n});\r\nexport default DateViewStrategy;\r\n"]},"metadata":{},"sourceType":"module"}