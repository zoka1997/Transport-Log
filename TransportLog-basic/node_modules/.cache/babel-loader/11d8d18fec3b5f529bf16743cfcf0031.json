{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/drag.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport { data as elementData, removeData } from \"../core/element_data\";\nimport { wrapToArray } from \"../core/utils/array\";\nimport * as iteratorUtils from \"../core/utils/iterator\";\nimport { contains } from \"../core/utils/dom\";\nimport registerEvent from \"./core/event_registrator\";\nimport { eventData as eData, fireEvent } from \"./utils/index\";\nimport GestureEmitter from \"./gesture/emitter.gesture\";\nimport registerEmitter from \"./core/emitter_registrator\";\nvar DRAG_START_EVENT = \"dxdragstart\";\nvar DRAG_EVENT = \"dxdrag\";\nvar DRAG_END_EVENT = \"dxdragend\";\nvar DRAG_ENTER_EVENT = \"dxdragenter\";\nvar DRAG_LEAVE_EVENT = \"dxdragleave\";\nvar DROP_EVENT = \"dxdrop\";\nvar DX_DRAG_EVENTS_COUNT_KEY = \"dxDragEventsCount\";\nvar knownDropTargets = [];\nvar knownDropTargetSelectors = [];\nvar knownDropTargetConfigs = [];\nvar dropTargetRegistration = {\n  setup: function (element, data) {\n    var knownDropTarget = knownDropTargets.includes(element);\n\n    if (!knownDropTarget) {\n      knownDropTargets.push(element);\n      knownDropTargetSelectors.push([]);\n      knownDropTargetConfigs.push(data || {});\n    }\n  },\n  add: function (element, handleObj) {\n    var index = knownDropTargets.indexOf(element);\n    this.updateEventsCounter(element, handleObj.type, 1);\n    var selector = handleObj.selector;\n\n    if (!knownDropTargetSelectors[index].includes(selector)) {\n      knownDropTargetSelectors[index].push(selector);\n    }\n  },\n  updateEventsCounter: function (element, event, value) {\n    if ([DRAG_ENTER_EVENT, DRAG_LEAVE_EVENT, DROP_EVENT].indexOf(event) > -1) {\n      var eventsCount = elementData(element, DX_DRAG_EVENTS_COUNT_KEY) || 0;\n      elementData(element, DX_DRAG_EVENTS_COUNT_KEY, Math.max(0, eventsCount + value));\n    }\n  },\n  remove: function (element, handleObj) {\n    this.updateEventsCounter(element, handleObj.type, -1);\n  },\n  teardown: function (element) {\n    var handlersCount = elementData(element, DX_DRAG_EVENTS_COUNT_KEY);\n\n    if (!handlersCount) {\n      var index = knownDropTargets.indexOf(element);\n      knownDropTargets.splice(index, 1);\n      knownDropTargetSelectors.splice(index, 1);\n      knownDropTargetConfigs.splice(index, 1);\n      removeData(element, DX_DRAG_EVENTS_COUNT_KEY);\n    }\n  }\n};\nregisterEvent(DRAG_ENTER_EVENT, dropTargetRegistration);\nregisterEvent(DRAG_LEAVE_EVENT, dropTargetRegistration);\nregisterEvent(DROP_EVENT, dropTargetRegistration);\n\nvar getItemDelegatedTargets = function ($element) {\n  var dropTargetIndex = knownDropTargets.indexOf($element.get(0));\n  var dropTargetSelectors = knownDropTargetSelectors[dropTargetIndex].filter(selector => selector);\n  var $delegatedTargets = $element.find(dropTargetSelectors.join(\", \"));\n\n  if (knownDropTargetSelectors[dropTargetIndex].includes(void 0)) {\n    $delegatedTargets = $delegatedTargets.add($element);\n  }\n\n  return $delegatedTargets;\n};\n\nvar getItemConfig = function ($element) {\n  var dropTargetIndex = knownDropTargets.indexOf($element.get(0));\n  return knownDropTargetConfigs[dropTargetIndex];\n};\n\nvar getItemPosition = function (dropTargetConfig, $element) {\n  if (dropTargetConfig.itemPositionFunc) {\n    return dropTargetConfig.itemPositionFunc($element);\n  } else {\n    return $element.offset();\n  }\n};\n\nvar getItemSize = function (dropTargetConfig, $element) {\n  if (dropTargetConfig.itemSizeFunc) {\n    return dropTargetConfig.itemSizeFunc($element);\n  }\n\n  return {\n    width: $element.get(0).getBoundingClientRect().width,\n    height: $element.get(0).getBoundingClientRect().height\n  };\n};\n\nvar DragEmitter = GestureEmitter.inherit({\n  ctor: function (element) {\n    this.callBase(element);\n    this.direction = \"both\";\n  },\n  _init: function (e) {\n    this._initEvent = e;\n  },\n  _start: function (e) {\n    e = this._fireEvent(DRAG_START_EVENT, this._initEvent);\n    this._maxLeftOffset = e.maxLeftOffset;\n    this._maxRightOffset = e.maxRightOffset;\n    this._maxTopOffset = e.maxTopOffset;\n    this._maxBottomOffset = e.maxBottomOffset;\n\n    if (e.targetElements || null === e.targetElements) {\n      var dropTargets = wrapToArray(e.targetElements || []);\n      this._dropTargets = iteratorUtils.map(dropTargets, function (element) {\n        return $(element).get(0);\n      });\n    } else {\n      this._dropTargets = knownDropTargets;\n    }\n  },\n  _move: function (e) {\n    var eventData = eData(e);\n\n    var dragOffset = this._calculateOffset(eventData);\n\n    e = this._fireEvent(DRAG_EVENT, e, {\n      offset: dragOffset\n    });\n\n    this._processDropTargets(e);\n\n    if (!e._cancelPreventDefault) {\n      e.preventDefault();\n    }\n  },\n  _calculateOffset: function (eventData) {\n    return {\n      x: this._calculateXOffset(eventData),\n      y: this._calculateYOffset(eventData)\n    };\n  },\n  _calculateXOffset: function (eventData) {\n    if (\"vertical\" !== this.direction) {\n      var offset = eventData.x - this._startEventData.x;\n      return this._fitOffset(offset, this._maxLeftOffset, this._maxRightOffset);\n    }\n\n    return 0;\n  },\n  _calculateYOffset: function (eventData) {\n    if (\"horizontal\" !== this.direction) {\n      var offset = eventData.y - this._startEventData.y;\n      return this._fitOffset(offset, this._maxTopOffset, this._maxBottomOffset);\n    }\n\n    return 0;\n  },\n  _fitOffset: function (offset, minOffset, maxOffset) {\n    if (null != minOffset) {\n      offset = Math.max(offset, -minOffset);\n    }\n\n    if (null != maxOffset) {\n      offset = Math.min(offset, maxOffset);\n    }\n\n    return offset;\n  },\n  _processDropTargets: function (e) {\n    var target = this._findDropTarget(e);\n\n    var sameTarget = target === this._currentDropTarget;\n\n    if (!sameTarget) {\n      this._fireDropTargetEvent(e, DRAG_LEAVE_EVENT);\n\n      this._currentDropTarget = target;\n\n      this._fireDropTargetEvent(e, DRAG_ENTER_EVENT);\n    }\n  },\n  _fireDropTargetEvent: function (event, eventName) {\n    if (!this._currentDropTarget) {\n      return;\n    }\n\n    var eventData = {\n      type: eventName,\n      originalEvent: event,\n      draggingElement: this._$element.get(0),\n      target: this._currentDropTarget\n    };\n    fireEvent(eventData);\n  },\n  _findDropTarget: function (e) {\n    var that = this;\n    var result;\n    iteratorUtils.each(knownDropTargets, function (_, target) {\n      if (!that._checkDropTargetActive(target)) {\n        return;\n      }\n\n      var $target = $(target);\n      iteratorUtils.each(getItemDelegatedTargets($target), function (_, delegatedTarget) {\n        var $delegatedTarget = $(delegatedTarget);\n\n        if (that._checkDropTarget(getItemConfig($target), $delegatedTarget, $(result), e)) {\n          result = delegatedTarget;\n        }\n      });\n    });\n    return result;\n  },\n  _checkDropTargetActive: function (target) {\n    var active = false;\n    iteratorUtils.each(this._dropTargets, function (_, activeTarget) {\n      active = active || activeTarget === target || contains(activeTarget, target);\n      return !active;\n    });\n    return active;\n  },\n  _checkDropTarget: function (config, $target, $prevTarget, e) {\n    var isDraggingElement = $target.get(0) === $(e.target).get(0);\n\n    if (isDraggingElement) {\n      return false;\n    }\n\n    var targetPosition = getItemPosition(config, $target);\n\n    if (e.pageX < targetPosition.left) {\n      return false;\n    }\n\n    if (e.pageY < targetPosition.top) {\n      return false;\n    }\n\n    var targetSize = getItemSize(config, $target);\n\n    if (e.pageX > targetPosition.left + targetSize.width) {\n      return false;\n    }\n\n    if (e.pageY > targetPosition.top + targetSize.height) {\n      return false;\n    }\n\n    if ($prevTarget.length && $prevTarget.closest($target).length) {\n      return false;\n    }\n\n    if (config.checkDropTarget && !config.checkDropTarget($target, e)) {\n      return false;\n    }\n\n    return $target;\n  },\n  _end: function (e) {\n    var eventData = eData(e);\n\n    this._fireEvent(DRAG_END_EVENT, e, {\n      offset: this._calculateOffset(eventData)\n    });\n\n    this._fireDropTargetEvent(e, DROP_EVENT);\n\n    delete this._currentDropTarget;\n  }\n});\nregisterEmitter({\n  emitter: DragEmitter,\n  events: [DRAG_START_EVENT, DRAG_EVENT, DRAG_END_EVENT]\n});\nexport { DRAG_EVENT as move, DRAG_START_EVENT as start, DRAG_END_EVENT as end, DRAG_ENTER_EVENT as enter, DRAG_LEAVE_EVENT as leave, DROP_EVENT as drop };","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/events/drag.js"],"names":["$","data","elementData","removeData","wrapToArray","iteratorUtils","contains","registerEvent","eventData","eData","fireEvent","GestureEmitter","registerEmitter","DRAG_START_EVENT","DRAG_EVENT","DRAG_END_EVENT","DRAG_ENTER_EVENT","DRAG_LEAVE_EVENT","DROP_EVENT","DX_DRAG_EVENTS_COUNT_KEY","knownDropTargets","knownDropTargetSelectors","knownDropTargetConfigs","dropTargetRegistration","setup","element","knownDropTarget","includes","push","add","handleObj","index","indexOf","updateEventsCounter","type","selector","event","value","eventsCount","Math","max","remove","teardown","handlersCount","splice","getItemDelegatedTargets","$element","dropTargetIndex","get","dropTargetSelectors","filter","$delegatedTargets","find","join","getItemConfig","getItemPosition","dropTargetConfig","itemPositionFunc","offset","getItemSize","itemSizeFunc","width","getBoundingClientRect","height","DragEmitter","inherit","ctor","callBase","direction","_init","e","_initEvent","_start","_fireEvent","_maxLeftOffset","maxLeftOffset","_maxRightOffset","maxRightOffset","_maxTopOffset","maxTopOffset","_maxBottomOffset","maxBottomOffset","targetElements","dropTargets","_dropTargets","map","_move","dragOffset","_calculateOffset","_processDropTargets","_cancelPreventDefault","preventDefault","x","_calculateXOffset","y","_calculateYOffset","_startEventData","_fitOffset","minOffset","maxOffset","min","target","_findDropTarget","sameTarget","_currentDropTarget","_fireDropTargetEvent","eventName","originalEvent","draggingElement","_$element","that","result","each","_","_checkDropTargetActive","$target","delegatedTarget","$delegatedTarget","_checkDropTarget","active","activeTarget","config","$prevTarget","isDraggingElement","targetPosition","pageX","left","pageY","top","targetSize","length","closest","checkDropTarget","_end","emitter","events","move","start","end","enter","leave","drop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/events/drag.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    data as elementData,\r\n    removeData\r\n} from \"../core/element_data\";\r\nimport {\r\n    wrapToArray\r\n} from \"../core/utils/array\";\r\nimport * as iteratorUtils from \"../core/utils/iterator\";\r\nimport {\r\n    contains\r\n} from \"../core/utils/dom\";\r\nimport registerEvent from \"./core/event_registrator\";\r\nimport {\r\n    eventData as eData,\r\n    fireEvent\r\n} from \"./utils/index\";\r\nimport GestureEmitter from \"./gesture/emitter.gesture\";\r\nimport registerEmitter from \"./core/emitter_registrator\";\r\nvar DRAG_START_EVENT = \"dxdragstart\";\r\nvar DRAG_EVENT = \"dxdrag\";\r\nvar DRAG_END_EVENT = \"dxdragend\";\r\nvar DRAG_ENTER_EVENT = \"dxdragenter\";\r\nvar DRAG_LEAVE_EVENT = \"dxdragleave\";\r\nvar DROP_EVENT = \"dxdrop\";\r\nvar DX_DRAG_EVENTS_COUNT_KEY = \"dxDragEventsCount\";\r\nvar knownDropTargets = [];\r\nvar knownDropTargetSelectors = [];\r\nvar knownDropTargetConfigs = [];\r\nvar dropTargetRegistration = {\r\n    setup: function(element, data) {\r\n        var knownDropTarget = knownDropTargets.includes(element);\r\n        if (!knownDropTarget) {\r\n            knownDropTargets.push(element);\r\n            knownDropTargetSelectors.push([]);\r\n            knownDropTargetConfigs.push(data || {})\r\n        }\r\n    },\r\n    add: function(element, handleObj) {\r\n        var index = knownDropTargets.indexOf(element);\r\n        this.updateEventsCounter(element, handleObj.type, 1);\r\n        var selector = handleObj.selector;\r\n        if (!knownDropTargetSelectors[index].includes(selector)) {\r\n            knownDropTargetSelectors[index].push(selector)\r\n        }\r\n    },\r\n    updateEventsCounter: function(element, event, value) {\r\n        if ([DRAG_ENTER_EVENT, DRAG_LEAVE_EVENT, DROP_EVENT].indexOf(event) > -1) {\r\n            var eventsCount = elementData(element, DX_DRAG_EVENTS_COUNT_KEY) || 0;\r\n            elementData(element, DX_DRAG_EVENTS_COUNT_KEY, Math.max(0, eventsCount + value))\r\n        }\r\n    },\r\n    remove: function(element, handleObj) {\r\n        this.updateEventsCounter(element, handleObj.type, -1)\r\n    },\r\n    teardown: function(element) {\r\n        var handlersCount = elementData(element, DX_DRAG_EVENTS_COUNT_KEY);\r\n        if (!handlersCount) {\r\n            var index = knownDropTargets.indexOf(element);\r\n            knownDropTargets.splice(index, 1);\r\n            knownDropTargetSelectors.splice(index, 1);\r\n            knownDropTargetConfigs.splice(index, 1);\r\n            removeData(element, DX_DRAG_EVENTS_COUNT_KEY)\r\n        }\r\n    }\r\n};\r\nregisterEvent(DRAG_ENTER_EVENT, dropTargetRegistration);\r\nregisterEvent(DRAG_LEAVE_EVENT, dropTargetRegistration);\r\nregisterEvent(DROP_EVENT, dropTargetRegistration);\r\nvar getItemDelegatedTargets = function($element) {\r\n    var dropTargetIndex = knownDropTargets.indexOf($element.get(0));\r\n    var dropTargetSelectors = knownDropTargetSelectors[dropTargetIndex].filter(selector => selector);\r\n    var $delegatedTargets = $element.find(dropTargetSelectors.join(\", \"));\r\n    if (knownDropTargetSelectors[dropTargetIndex].includes(void 0)) {\r\n        $delegatedTargets = $delegatedTargets.add($element)\r\n    }\r\n    return $delegatedTargets\r\n};\r\nvar getItemConfig = function($element) {\r\n    var dropTargetIndex = knownDropTargets.indexOf($element.get(0));\r\n    return knownDropTargetConfigs[dropTargetIndex]\r\n};\r\nvar getItemPosition = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemPositionFunc) {\r\n        return dropTargetConfig.itemPositionFunc($element)\r\n    } else {\r\n        return $element.offset()\r\n    }\r\n};\r\nvar getItemSize = function(dropTargetConfig, $element) {\r\n    if (dropTargetConfig.itemSizeFunc) {\r\n        return dropTargetConfig.itemSizeFunc($element)\r\n    }\r\n    return {\r\n        width: $element.get(0).getBoundingClientRect().width,\r\n        height: $element.get(0).getBoundingClientRect().height\r\n    }\r\n};\r\nvar DragEmitter = GestureEmitter.inherit({\r\n    ctor: function(element) {\r\n        this.callBase(element);\r\n        this.direction = \"both\"\r\n    },\r\n    _init: function(e) {\r\n        this._initEvent = e\r\n    },\r\n    _start: function(e) {\r\n        e = this._fireEvent(DRAG_START_EVENT, this._initEvent);\r\n        this._maxLeftOffset = e.maxLeftOffset;\r\n        this._maxRightOffset = e.maxRightOffset;\r\n        this._maxTopOffset = e.maxTopOffset;\r\n        this._maxBottomOffset = e.maxBottomOffset;\r\n        if (e.targetElements || null === e.targetElements) {\r\n            var dropTargets = wrapToArray(e.targetElements || []);\r\n            this._dropTargets = iteratorUtils.map(dropTargets, (function(element) {\r\n                return $(element).get(0)\r\n            }))\r\n        } else {\r\n            this._dropTargets = knownDropTargets\r\n        }\r\n    },\r\n    _move: function(e) {\r\n        var eventData = eData(e);\r\n        var dragOffset = this._calculateOffset(eventData);\r\n        e = this._fireEvent(DRAG_EVENT, e, {\r\n            offset: dragOffset\r\n        });\r\n        this._processDropTargets(e);\r\n        if (!e._cancelPreventDefault) {\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _calculateOffset: function(eventData) {\r\n        return {\r\n            x: this._calculateXOffset(eventData),\r\n            y: this._calculateYOffset(eventData)\r\n        }\r\n    },\r\n    _calculateXOffset: function(eventData) {\r\n        if (\"vertical\" !== this.direction) {\r\n            var offset = eventData.x - this._startEventData.x;\r\n            return this._fitOffset(offset, this._maxLeftOffset, this._maxRightOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _calculateYOffset: function(eventData) {\r\n        if (\"horizontal\" !== this.direction) {\r\n            var offset = eventData.y - this._startEventData.y;\r\n            return this._fitOffset(offset, this._maxTopOffset, this._maxBottomOffset)\r\n        }\r\n        return 0\r\n    },\r\n    _fitOffset: function(offset, minOffset, maxOffset) {\r\n        if (null != minOffset) {\r\n            offset = Math.max(offset, -minOffset)\r\n        }\r\n        if (null != maxOffset) {\r\n            offset = Math.min(offset, maxOffset)\r\n        }\r\n        return offset\r\n    },\r\n    _processDropTargets: function(e) {\r\n        var target = this._findDropTarget(e);\r\n        var sameTarget = target === this._currentDropTarget;\r\n        if (!sameTarget) {\r\n            this._fireDropTargetEvent(e, DRAG_LEAVE_EVENT);\r\n            this._currentDropTarget = target;\r\n            this._fireDropTargetEvent(e, DRAG_ENTER_EVENT)\r\n        }\r\n    },\r\n    _fireDropTargetEvent: function(event, eventName) {\r\n        if (!this._currentDropTarget) {\r\n            return\r\n        }\r\n        var eventData = {\r\n            type: eventName,\r\n            originalEvent: event,\r\n            draggingElement: this._$element.get(0),\r\n            target: this._currentDropTarget\r\n        };\r\n        fireEvent(eventData)\r\n    },\r\n    _findDropTarget: function(e) {\r\n        var that = this;\r\n        var result;\r\n        iteratorUtils.each(knownDropTargets, (function(_, target) {\r\n            if (!that._checkDropTargetActive(target)) {\r\n                return\r\n            }\r\n            var $target = $(target);\r\n            iteratorUtils.each(getItemDelegatedTargets($target), (function(_, delegatedTarget) {\r\n                var $delegatedTarget = $(delegatedTarget);\r\n                if (that._checkDropTarget(getItemConfig($target), $delegatedTarget, $(result), e)) {\r\n                    result = delegatedTarget\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    },\r\n    _checkDropTargetActive: function(target) {\r\n        var active = false;\r\n        iteratorUtils.each(this._dropTargets, (function(_, activeTarget) {\r\n            active = active || activeTarget === target || contains(activeTarget, target);\r\n            return !active\r\n        }));\r\n        return active\r\n    },\r\n    _checkDropTarget: function(config, $target, $prevTarget, e) {\r\n        var isDraggingElement = $target.get(0) === $(e.target).get(0);\r\n        if (isDraggingElement) {\r\n            return false\r\n        }\r\n        var targetPosition = getItemPosition(config, $target);\r\n        if (e.pageX < targetPosition.left) {\r\n            return false\r\n        }\r\n        if (e.pageY < targetPosition.top) {\r\n            return false\r\n        }\r\n        var targetSize = getItemSize(config, $target);\r\n        if (e.pageX > targetPosition.left + targetSize.width) {\r\n            return false\r\n        }\r\n        if (e.pageY > targetPosition.top + targetSize.height) {\r\n            return false\r\n        }\r\n        if ($prevTarget.length && $prevTarget.closest($target).length) {\r\n            return false\r\n        }\r\n        if (config.checkDropTarget && !config.checkDropTarget($target, e)) {\r\n            return false\r\n        }\r\n        return $target\r\n    },\r\n    _end: function(e) {\r\n        var eventData = eData(e);\r\n        this._fireEvent(DRAG_END_EVENT, e, {\r\n            offset: this._calculateOffset(eventData)\r\n        });\r\n        this._fireDropTargetEvent(e, DROP_EVENT);\r\n        delete this._currentDropTarget\r\n    }\r\n});\r\nregisterEmitter({\r\n    emitter: DragEmitter,\r\n    events: [DRAG_START_EVENT, DRAG_EVENT, DRAG_END_EVENT]\r\n});\r\nexport {\r\n    DRAG_EVENT as move, DRAG_START_EVENT as start, DRAG_END_EVENT as end, DRAG_ENTER_EVENT as enter, DRAG_LEAVE_EVENT as leave, DROP_EVENT as drop\r\n};\r\n"]},"metadata":{},"sourceType":"module"}