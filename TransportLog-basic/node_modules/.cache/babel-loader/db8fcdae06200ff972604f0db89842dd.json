{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoran\\\\source\\\\repos\\\\TransportApp\\\\TransportLog-basic\\\\src\\\\pages\\\\UserManagment\\\\UserManagment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./UserManagment.css\";\nimport DataGrid, { Column, Editing, Popup, Paging, Lookup, Form } from 'devextreme-react/data-grid';\nimport CheckBox from 'devextreme-react/check-box';\nimport 'devextreme-react/text-area';\nimport { Item } from 'devextreme-react/form';\nimport { states } from '../dataStates';\nimport { insertUserManagement, updateUserManagement, deleteUserManagement } from './UserManagementService';\nimport Useusermanagementdata from './useUserManagementData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst notesEditorOptions = {\n  height: 100\n};\n\nconst Usermanagment = () => {\n  _s();\n\n  const [checkBoxValue, setCheckBoxValue] = useState(false);\n  const {\n    userManagement\n  } = Useusermanagementdata();\n  console.log(userManagement, \"userManagement\");\n\n  function customizeItem(item) {\n    if (item.dataField === \"FirstName\" || item.dataField === \"LastName\" || item.dataField === \"Country\" || item.dataField === \"City\") {\n      item.validationRules = [{\n        type: \"required\",\n        message: \"The value is required\"\n      }];\n    } else if (item.dataField === \"Phone\") {\n      item.validationRules = [{\n        type: \"required\",\n        message: \"Phone number is required!\"\n      }];\n    } else if (item.dataField === \"Address\") {\n      item.validationRules = [{\n        type: \"required\",\n        message: \"City is required!\"\n      }];\n    }\n  }\n\n  function handleAddUserManagement(state) {\n    console.log('state');\n    console.log(state);\n\n    if (state.changes.length === 0) {\n      alert(\"You must change value of other field\");\n    } else {\n      if (state.changes[0].type === \"insert\") {\n        const tmp = { ...state.changes[0].data,\n          IsActive: checkBoxValue\n        };\n        insertUserManagement(tmp);\n      } else if (state.changes[0].type === \"update\") {\n        const obj = { ...state.changes[0].data,\n          IsActive: checkBoxValue\n        };\n        console.log('stateedit');\n        console.log(obj);\n        updateUserManagement(obj);\n      } else if (state.changes[0].type === \"remove\") {\n        deleteUserManagement(state.changes[0].key);\n        console.log('stateDelete');\n        console.log(state);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-5\",\n      children: \"UserManagment List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"data-grid-demo\",\n      className: \"data-grid-demo\",\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        dataSource: userManagement,\n        keyExpr: \"Id\",\n        showBorders: true,\n        onSaved: handleAddUserManagement,\n        children: [/*#__PURE__*/_jsxDEV(Paging, {\n          enabled: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editing, {\n          mode: \"popup\",\n          allowUpdating: true,\n          allowAdding: true,\n          allowDeleting: true,\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            title: \"Create New Customer\",\n            showTitle: true,\n            width: 700,\n            height: 525\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            customizeItem: customizeItem,\n            children: [/*#__PURE__*/_jsxDEV(Item, {\n              itemType: \"group\",\n              colCount: 2,\n              colSpan: 2,\n              children: [/*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"FirstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"LastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                itemType: \"group\",\n                colCount: 2,\n                colSpan: 2,\n                children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                  text: \"IsActive\",\n                  value: checkBoxValue,\n                  onValueChange: () => setCheckBoxValue(prev => !prev)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Item, {\n              itemType: \"group\",\n              caption: \"Home Address\",\n              colCount: 2,\n              colSpan: 2,\n              children: [/*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Item, {\n                dataField: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"Id\",\n          caption: \"ID\",\n          width: 270\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"FirstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"LastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"Country\",\n          width: 125,\n          children: /*#__PURE__*/_jsxDEV(Lookup, {\n            dataSource: states,\n            valueExpr: \"Name\",\n            displayExpr: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          dataField: \"IsActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Usermanagment, \"faJMFzWiyd7HAxCZyoz2RD7QK+k=\");\n\n_c = Usermanagment;\nexport default Usermanagment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Usermanagment\");","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/src/pages/UserManagment/UserManagment.js"],"names":["React","useState","DataGrid","Column","Editing","Popup","Paging","Lookup","Form","CheckBox","Item","states","insertUserManagement","updateUserManagement","deleteUserManagement","Useusermanagementdata","notesEditorOptions","height","Usermanagment","checkBoxValue","setCheckBoxValue","userManagement","console","log","customizeItem","item","dataField","validationRules","type","message","handleAddUserManagement","state","changes","length","alert","tmp","data","IsActive","obj","key","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,qBAAP;AACA,OAAOC,QAAP,IACEC,MADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,IANF,QAOO,4BAPP;AAQA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,4BAAP;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,oBAArD,QAAiF,yBAAjF;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;;AAEA,MAAMC,kBAAkB,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM;AAACoB,IAAAA;AAAD,MAAmBN,qBAAqB,EAA9C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ,EAA4B,gBAA5B;;AAEF,WAASG,aAAT,CAAuBC,IAAvB,EAA4B;AAC1B,QAAIA,IAAI,CAACC,SAAL,KAAmB,WAAnB,IAAkCD,IAAI,CAACC,SAAL,KAAmB,UAArD,IAAmED,IAAI,CAACC,SAAL,KAAmB,SAAtF,IAAmGD,IAAI,CAACC,SAAL,KAAmB,MAA1H,EAAmI;AACjID,MAAAA,IAAI,CAACE,eAAL,GAAuB,CAAC;AACpBC,QAAAA,IAAI,EAAE,UADc;AAEpBC,QAAAA,OAAO,EAAE;AAFW,OAAD,CAAvB;AAIH,KALC,MAKI,IAAGJ,IAAI,CAACC,SAAL,KAAmB,OAAtB,EAA8B;AAClCD,MAAAA,IAAI,CAACE,eAAL,GAAuB,CAAC;AACtBC,QAAAA,IAAI,EAAE,UADgB;AAEtBC,QAAAA,OAAO,EAAE;AAFa,OAAD,CAAvB;AAID,KALK,MAKA,IAAGJ,IAAI,CAACC,SAAL,KAAmB,SAAtB,EAAgC;AACpCD,MAAAA,IAAI,CAACE,eAAL,GAAuB,CAAC;AACtBC,QAAAA,IAAI,EAAE,UADgB;AAEtBC,QAAAA,OAAO,EAAE;AAFa,OAAD,CAAvB;AAID;AACA;;AAED,WAASC,uBAAT,CAAiCC,KAAjC,EACA;AACET,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;;AACA,QAAGA,KAAK,CAACC,OAAN,CAAcC,MAAd,KAAyB,CAA5B,EAA8B;AAC5BC,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,KAFC,MAEG;AAEH,UAAGH,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBJ,IAAjB,KAA0B,QAA7B,EACA;AACE,cAAMO,GAAG,GAAG,EAAC,GAAGJ,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBI,IAArB;AAA2BC,UAAAA,QAAQ,EAAClB;AAApC,SAAZ;AACAP,QAAAA,oBAAoB,CAACuB,GAAD,CAApB;AACD,OAJD,MAIM,IAAGJ,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBJ,IAAjB,KAA0B,QAA7B,EAAsC;AAC1C,cAAMU,GAAG,GAAG,EAAC,GAAGP,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBI,IAArB;AAA2BC,UAAAA,QAAQ,EAAGlB;AAAtC,SAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACAzB,QAAAA,oBAAoB,CAACyB,GAAD,CAApB;AACD,OALK,MAKA,IAAGP,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBJ,IAAjB,KAA0B,QAA7B,EACN;AACEd,QAAAA,oBAAoB,CAACiB,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBO,GAAlB,CAApB;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF;AAGA;;AACC,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,gBAAnC;AAAA,6BAGE,QAAC,QAAD;AACE,QAAA,UAAU,EAAEV,cADd;AAEE,QAAA,OAAO,EAAC,IAFV;AAGE,QAAA,WAAW,EAAE,IAHf;AAIE,QAAA,OAAO,EAAES,uBAJX;AAAA,gCAME,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBANF,eAQE,QAAC,OAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,aAAa,EAAE,IAFjB;AAGE,UAAA,WAAW,EAAE,IAHf;AAIE,UAAA,aAAa,EAAE,IAJjB;AAAA,kCAME,QAAC,KAAD;AAAO,YAAA,KAAK,EAAC,qBAAb;AAAmC,YAAA,SAAS,EAAE,IAA9C;AAAoD,YAAA,KAAK,EAAE,GAA3D;AAAgE,YAAA,MAAM,EAAE;AAAxE;AAAA;AAAA;AAAA;AAAA,kBANF,eAQE,QAAC,IAAD;AAAM,YAAA,aAAa,EAAEN,aAArB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,OAAf;AAAuB,cAAA,QAAQ,EAAE,CAAjC;AAAoC,cAAA,OAAO,EAAE,CAA7C;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAC,OAAf;AAAuB,gBAAA,QAAQ,EAAE,CAAjC;AAAoC,gBAAA,OAAO,EAAE,CAA7C;AAAA,uCACA,QAAC,QAAD;AACA,kBAAA,IAAI,EAAC,UADL;AAEA,kBAAA,KAAK,EAAEL,aAFP;AAGA,kBAAA,aAAa,EAAE,MAAIC,gBAAgB,CAACoB,IAAI,IAAE,CAACA,IAAR;AAHnC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,OAAf;AAAuB,cAAA,OAAO,EAAC,cAA/B;AAA8C,cAAA,QAAQ,EAAE,CAAxD;AAA2D,cAAA,OAAO,EAAE,CAApE;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAsCE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,IAAlB;AAAuB,UAAA,OAAO,EAAC,IAA/B;AAAoC,UAAA,KAAK,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAuCE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAvCF,eAwCE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAxCF,eAyCE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA0CE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,KAAK,EAAE,GAAnC;AAAA,iCACA,QAAC,MAAD;AACG,YAAA,UAAU,EAAE7B,MADf;AAEG,YAAA,SAAS,EAAC,MAFb;AAEoB,YAAA,WAAW,EAAC;AAFhC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA1CF,eA+CE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBA/CF,eAgDE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAhDF,eAiDE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAjDF,eAkDE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA8DD,CApHD;;GAAMO,a;;KAAAA,a;AAsHN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport \"./UserManagment.css\"\r\nimport DataGrid, {\r\n  Column,\r\n  Editing,\r\n  Popup,\r\n  Paging,\r\n  Lookup,\r\n  Form,\r\n} from 'devextreme-react/data-grid';\r\nimport CheckBox from 'devextreme-react/check-box';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport { states } from '../dataStates';\r\nimport { insertUserManagement, updateUserManagement, deleteUserManagement } from './UserManagementService'\r\nimport Useusermanagementdata from './useUserManagementData';\r\n\r\nconst notesEditorOptions = { height: 100 };\r\n\r\nconst Usermanagment = () => {\r\n\r\n  const [checkBoxValue, setCheckBoxValue] = useState(false);\r\n  \r\n  const {userManagement} = Useusermanagementdata();\r\n  \r\n  console.log(userManagement ,\"userManagement\")\r\n\r\nfunction customizeItem(item){\r\n  if (item.dataField === \"FirstName\" || item.dataField === \"LastName\" || item.dataField === \"Country\" || item.dataField === \"City\" ) {\r\n    item.validationRules = [{\r\n        type: \"required\",\r\n        message: \"The value is required\"\r\n    }]\r\n}else if(item.dataField === \"Phone\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"Phone number is required!\"\r\n}]\r\n}else if(item.dataField === \"Address\"){\r\n  item.validationRules = [{\r\n    type: \"required\",\r\n    message: \"City is required!\"\r\n}]\r\n}\r\n}\r\n\r\nfunction handleAddUserManagement(state)\r\n{\r\n  console.log('state')\r\n  console.log(state)\r\n  if(state.changes.length === 0){\r\n    alert(\"You must change value of other field\")\r\n}else{\r\n  \r\n  if(state.changes[0].type === \"insert\")\r\n  {\r\n    const tmp = {...state.changes[0].data, IsActive:checkBoxValue}\r\n    insertUserManagement(tmp)\r\n  }else if(state.changes[0].type === \"update\"){\r\n    const obj = {...state.changes[0].data, IsActive : checkBoxValue}\r\n    console.log('stateedit')\r\n    console.log(obj)\r\n    updateUserManagement(obj);\r\n  }else if(state.changes[0].type === \"remove\")\r\n  {\r\n    deleteUserManagement(state.changes[0].key);\r\n    console.log('stateDelete')\r\n    console.log(state)\r\n  }\r\n}\r\n \r\n \r\n}\r\n  return (\r\n    <>\r\n      <h2 className='text-center mt-5'>UserManagment List</h2>\r\n      <div id=\"data-grid-demo\" className='data-grid-demo'>\r\n   \r\n\r\n        <DataGrid\r\n          dataSource={userManagement}\r\n          keyExpr=\"Id\"\r\n          showBorders={true}\r\n          onSaved={handleAddUserManagement}\r\n        >\r\n          <Paging enabled={false} />\r\n\r\n          <Editing\r\n            mode=\"popup\"\r\n            allowUpdating={true}\r\n            allowAdding={true}\r\n            allowDeleting={true}\r\n            >\r\n            <Popup title=\"Create New Customer\" showTitle={true} width={700} height={525}  />\r\n            \r\n            <Form customizeItem={customizeItem}>\r\n              <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"FirstName\" />\r\n                <Item dataField=\"LastName\" />\r\n                <Item dataField=\"Phone\" /> \r\n                <Item dataField=\"Role\" /> \r\n                <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                <CheckBox\r\n                text=\"IsActive\"\r\n                value={checkBoxValue}\r\n                onValueChange={()=>setCheckBoxValue(prev=>!prev)}\r\n            />\r\n            </Item>\r\n              </Item>\r\n              <Item itemType=\"group\" caption=\"Home Address\" colCount={2} colSpan={2}>\r\n                <Item dataField=\"Country\" />\r\n                <Item dataField=\"City\" />\r\n                <Item dataField=\"Address\" />\r\n              </Item>\r\n            </Form>\r\n          </Editing>\r\n          \r\n          <Column dataField=\"Id\" caption=\"ID\" width={270} />\r\n          <Column dataField=\"FirstName\" />\r\n          <Column dataField=\"LastName\" />\r\n          <Column dataField=\"Address\" />\r\n          <Column dataField=\"Country\" width={125}>\r\n          <Lookup\r\n             dataSource={states} \r\n             valueExpr=\"Name\" displayExpr=\"Name\" />\r\n          </Column>\r\n          <Column dataField=\"City\" />\r\n          <Column dataField=\"Phone\" />\r\n          <Column dataField=\"Role\" />\r\n          <Column dataField=\"IsActive\" />\r\n         \r\n        </DataGrid>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Usermanagment;"]},"metadata":{},"sourceType":"module"}