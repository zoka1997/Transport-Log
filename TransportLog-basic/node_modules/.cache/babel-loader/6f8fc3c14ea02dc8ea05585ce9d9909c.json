{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Class from \"../../core/class\";\nimport { extend } from \"../../core/utils/extend\";\nimport errors from \"../../ui/widget/ui.errors\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined, isPrimitive } from \"../../core/utils/type\";\nvar DataConverter = Class.inherit({\n  ctor: function () {\n    this._dataStructure = [];\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n  },\n  _indexByKey: {},\n  _convertItemsToNodes: function (items, parentKey) {\n    var that = this;\n    each(items, function (_, item) {\n      var parentId = isDefined(parentKey) ? parentKey : that._getParentId(item);\n\n      var node = that._convertItemToNode(item, parentId);\n\n      that._dataStructure.push(node);\n\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\n\n      if (that._itemHasChildren(item)) {\n        that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key);\n      }\n    });\n  },\n  _checkForDuplicateId: function (key) {\n    if (isDefined(this._indexByKey[key])) {\n      throw errors.Error(\"E1040\", key);\n    }\n  },\n  _getParentId: function (item) {\n    return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0;\n  },\n  _itemHasChildren: function (item) {\n    if (\"plain\" === this._dataType) {\n      return;\n    }\n\n    var items = this._dataAccessors.getters.items(item);\n\n    return items && items.length;\n  },\n  _getUniqueKey: function (item) {\n    var keyGetter = this._dataAccessors.getters.key;\n    var itemKey = keyGetter(item);\n    var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && isPrimitive(itemKey);\n    return isCorrectKey ? itemKey : this.getItemsCount();\n  },\n  _convertItemToNode: function (item, parentKey) {\n    this._itemsCount++;\n    false !== item.visible && this._visibleItemsCount++;\n    var node = {\n      internalFields: {\n        disabled: this._dataAccessors.getters.disabled(item, {\n          defaultValue: false\n        }),\n        expanded: this._dataAccessors.getters.expanded(item, {\n          defaultValue: false\n        }),\n        selected: this._dataAccessors.getters.selected(item, {\n          defaultValue: false\n        }),\n        key: this._getUniqueKey(item),\n        parentKey: isDefined(parentKey) ? parentKey : this._rootValue,\n        item: this._makeObjectFromPrimitive(item),\n        childrenKeys: []\n      }\n    };\n    extend(node, item);\n    delete node.items;\n    return node;\n  },\n  setChildrenKeys: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.parentKey === that._rootValue) {\n        return;\n      }\n\n      var parent = that.getParentNode(node);\n      parent && parent.internalFields.childrenKeys.push(node.internalFields.key);\n    });\n  },\n  _makeObjectFromPrimitive: function (item) {\n    if (isPrimitive(item)) {\n      var key = item;\n      item = {};\n\n      this._dataAccessors.setters.key(item, key);\n    }\n\n    return item;\n  },\n  _convertToPublicNode: function (node, parent) {\n    if (!node) {\n      return null;\n    }\n\n    var publicNode = {\n      text: this._dataAccessors.getters.display(node),\n      key: node.internalFields.key,\n      selected: node.internalFields.selected,\n      expanded: node.internalFields.expanded,\n      disabled: node.internalFields.disabled,\n      parent: parent || null,\n      itemData: node.internalFields.item,\n      children: [],\n      items: []\n    };\n\n    if (publicNode.parent) {\n      publicNode.parent.children.push(publicNode);\n      publicNode.parent.items.push(publicNode);\n    }\n\n    return publicNode;\n  },\n  convertToPublicNodes: function (data, parent) {\n    if (!data.length) {\n      return [];\n    }\n\n    var that = this;\n    var publicNodes = [];\n    each(data, function (_, node) {\n      node = isPrimitive(node) ? that._getByKey(node) : node;\n\n      var publicNode = that._convertToPublicNode(node, parent);\n\n      publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\n      publicNodes.push(publicNode);\n      node.internalFields.publicNode = publicNode;\n    });\n    return publicNodes;\n  },\n  setDataAccessors: function (accessors) {\n    this._dataAccessors = accessors;\n  },\n  _getByKey: function (key) {\n    return this._dataStructure[this.getIndexByKey(key)] || null;\n  },\n  getParentNode: function (node) {\n    return this._getByKey(node.internalFields.parentKey);\n  },\n  getByKey: function (data, key) {\n    if (null === key || void 0 === key) {\n      return null;\n    }\n\n    var result = null;\n    var that = this;\n\n    var getByKey = function (data, key) {\n      each(data, function (_, element) {\n        var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\n\n        if (currentElementKey.toString() === key.toString()) {\n          result = element;\n          return false;\n        }\n      });\n      return result;\n    };\n\n    return getByKey(data, key);\n  },\n  getItemsCount: function () {\n    return this._itemsCount;\n  },\n  getVisibleItemsCount: function () {\n    return this._visibleItemsCount;\n  },\n  updateIndexByKey: function () {\n    var that = this;\n    this._indexByKey = {};\n    each(this._dataStructure, function (index, node) {\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = index;\n    });\n  },\n  updateChildrenKeys: function () {\n    this._indexByKey = {};\n    this.removeChildrenKeys();\n    this.updateIndexByKey();\n    this.setChildrenKeys();\n  },\n  removeChildrenKeys: function () {\n    this._indexByKey = {};\n    each(this._dataStructure, function (index, node) {\n      node.internalFields.childrenKeys = [];\n    });\n  },\n  getIndexByKey: function (key) {\n    return this._indexByKey[key];\n  },\n  createPlainStructure: function (items, rootValue, dataType) {\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n    this._rootValue = rootValue;\n    this._dataType = dataType;\n    this._indexByKey = {};\n\n    this._convertItemsToNodes(items);\n\n    this.setChildrenKeys();\n    return this._dataStructure;\n  }\n});\nexport default DataConverter;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/hierarchical_collection/ui.data_converter.js"],"names":["Class","extend","errors","each","isDefined","isPrimitive","DataConverter","inherit","ctor","_dataStructure","_itemsCount","_visibleItemsCount","_indexByKey","_convertItemsToNodes","items","parentKey","that","_","item","parentId","_getParentId","node","_convertItemToNode","push","_checkForDuplicateId","internalFields","key","length","_itemHasChildren","_dataAccessors","getters","Error","_dataType","_getUniqueKey","keyGetter","itemKey","isCorrectKey","getItemsCount","visible","disabled","defaultValue","expanded","selected","_rootValue","_makeObjectFromPrimitive","childrenKeys","setChildrenKeys","parent","getParentNode","setters","_convertToPublicNode","publicNode","text","display","itemData","children","convertToPublicNodes","data","publicNodes","_getByKey","setDataAccessors","accessors","getIndexByKey","getByKey","result","element","currentElementKey","toString","getVisibleItemsCount","updateIndexByKey","index","updateChildrenKeys","removeChildrenKeys","createPlainStructure","rootValue","dataType"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport errors from \"../../ui/widget/ui.errors\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPrimitive\r\n} from \"../../core/utils/type\";\r\nvar DataConverter = Class.inherit({\r\n    ctor: function() {\r\n        this._dataStructure = [];\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0\r\n    },\r\n    _indexByKey: {},\r\n    _convertItemsToNodes: function(items, parentKey) {\r\n        var that = this;\r\n        each(items, (function(_, item) {\r\n            var parentId = isDefined(parentKey) ? parentKey : that._getParentId(item);\r\n            var node = that._convertItemToNode(item, parentId);\r\n            that._dataStructure.push(node);\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\r\n            if (that._itemHasChildren(item)) {\r\n                that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key)\r\n            }\r\n        }))\r\n    },\r\n    _checkForDuplicateId: function(key) {\r\n        if (isDefined(this._indexByKey[key])) {\r\n            throw errors.Error(\"E1040\", key)\r\n        }\r\n    },\r\n    _getParentId: function(item) {\r\n        return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0\r\n    },\r\n    _itemHasChildren: function(item) {\r\n        if (\"plain\" === this._dataType) {\r\n            return\r\n        }\r\n        var items = this._dataAccessors.getters.items(item);\r\n        return items && items.length\r\n    },\r\n    _getUniqueKey: function(item) {\r\n        var keyGetter = this._dataAccessors.getters.key;\r\n        var itemKey = keyGetter(item);\r\n        var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && isPrimitive(itemKey);\r\n        return isCorrectKey ? itemKey : this.getItemsCount()\r\n    },\r\n    _convertItemToNode: function(item, parentKey) {\r\n        this._itemsCount++;\r\n        false !== item.visible && this._visibleItemsCount++;\r\n        var node = {\r\n            internalFields: {\r\n                disabled: this._dataAccessors.getters.disabled(item, {\r\n                    defaultValue: false\r\n                }),\r\n                expanded: this._dataAccessors.getters.expanded(item, {\r\n                    defaultValue: false\r\n                }),\r\n                selected: this._dataAccessors.getters.selected(item, {\r\n                    defaultValue: false\r\n                }),\r\n                key: this._getUniqueKey(item),\r\n                parentKey: isDefined(parentKey) ? parentKey : this._rootValue,\r\n                item: this._makeObjectFromPrimitive(item),\r\n                childrenKeys: []\r\n            }\r\n        };\r\n        extend(node, item);\r\n        delete node.items;\r\n        return node\r\n    },\r\n    setChildrenKeys: function() {\r\n        var that = this;\r\n        each(this._dataStructure, (function(_, node) {\r\n            if (node.internalFields.parentKey === that._rootValue) {\r\n                return\r\n            }\r\n            var parent = that.getParentNode(node);\r\n            parent && parent.internalFields.childrenKeys.push(node.internalFields.key)\r\n        }))\r\n    },\r\n    _makeObjectFromPrimitive: function(item) {\r\n        if (isPrimitive(item)) {\r\n            var key = item;\r\n            item = {};\r\n            this._dataAccessors.setters.key(item, key)\r\n        }\r\n        return item\r\n    },\r\n    _convertToPublicNode: function(node, parent) {\r\n        if (!node) {\r\n            return null\r\n        }\r\n        var publicNode = {\r\n            text: this._dataAccessors.getters.display(node),\r\n            key: node.internalFields.key,\r\n            selected: node.internalFields.selected,\r\n            expanded: node.internalFields.expanded,\r\n            disabled: node.internalFields.disabled,\r\n            parent: parent || null,\r\n            itemData: node.internalFields.item,\r\n            children: [],\r\n            items: []\r\n        };\r\n        if (publicNode.parent) {\r\n            publicNode.parent.children.push(publicNode);\r\n            publicNode.parent.items.push(publicNode)\r\n        }\r\n        return publicNode\r\n    },\r\n    convertToPublicNodes: function(data, parent) {\r\n        if (!data.length) {\r\n            return []\r\n        }\r\n        var that = this;\r\n        var publicNodes = [];\r\n        each(data, (function(_, node) {\r\n            node = isPrimitive(node) ? that._getByKey(node) : node;\r\n            var publicNode = that._convertToPublicNode(node, parent);\r\n            publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\r\n            publicNodes.push(publicNode);\r\n            node.internalFields.publicNode = publicNode\r\n        }));\r\n        return publicNodes\r\n    },\r\n    setDataAccessors: function(accessors) {\r\n        this._dataAccessors = accessors\r\n    },\r\n    _getByKey: function(key) {\r\n        return this._dataStructure[this.getIndexByKey(key)] || null\r\n    },\r\n    getParentNode: function(node) {\r\n        return this._getByKey(node.internalFields.parentKey)\r\n    },\r\n    getByKey: function(data, key) {\r\n        if (null === key || void 0 === key) {\r\n            return null\r\n        }\r\n        var result = null;\r\n        var that = this;\r\n        var getByKey = function(data, key) {\r\n            each(data, (function(_, element) {\r\n                var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\r\n                if (currentElementKey.toString() === key.toString()) {\r\n                    result = element;\r\n                    return false\r\n                }\r\n            }));\r\n            return result\r\n        };\r\n        return getByKey(data, key)\r\n    },\r\n    getItemsCount: function() {\r\n        return this._itemsCount\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this._visibleItemsCount\r\n    },\r\n    updateIndexByKey: function() {\r\n        var that = this;\r\n        this._indexByKey = {};\r\n        each(this._dataStructure, (function(index, node) {\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = index\r\n        }))\r\n    },\r\n    updateChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        this.removeChildrenKeys();\r\n        this.updateIndexByKey();\r\n        this.setChildrenKeys()\r\n    },\r\n    removeChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        each(this._dataStructure, (function(index, node) {\r\n            node.internalFields.childrenKeys = []\r\n        }))\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this._indexByKey[key]\r\n    },\r\n    createPlainStructure: function(items, rootValue, dataType) {\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0;\r\n        this._rootValue = rootValue;\r\n        this._dataType = dataType;\r\n        this._indexByKey = {};\r\n        this._convertItemsToNodes(items);\r\n        this.setChildrenKeys();\r\n        return this._dataStructure\r\n    }\r\n});\r\nexport default DataConverter;\r\n"]},"metadata":{},"sourceType":"module"}