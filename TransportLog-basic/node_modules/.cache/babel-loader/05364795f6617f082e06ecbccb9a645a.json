{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/resources/agendaResourceProcessor.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { when, Deferred } from \"../../../core/utils/deferred\";\nimport { getFieldExpr, getDisplayExpr, getValueExpr, getWrappedDataSource } from \"./utils\";\n\nclass PromiseItem {\n  constructor(rawAppointment, promise) {\n    this.rawAppointment = rawAppointment;\n    this.promise = promise;\n  }\n\n}\n\nexport class AgendaResourceProcessor {\n  get resourceDeclarations() {\n    return this._resourceDeclarations;\n  }\n\n  set resourceDeclarations(value) {\n    this._resourceDeclarations = value;\n    this.isLoaded = false;\n    this.isLoading = false;\n    this.resourceMap.clear();\n    this.appointmentPromiseQueue = [];\n  }\n\n  constructor() {\n    var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n    this._resourceDeclarations = resourceDeclarations;\n    this.isLoaded = false;\n    this.isLoading = false;\n    this.resourceMap = new Map();\n    this.appointmentPromiseQueue = [];\n  }\n\n  _pushAllResources() {\n    this.appointmentPromiseQueue.forEach(_ref => {\n      var {\n        promise: promise,\n        rawAppointment: rawAppointment\n      } = _ref;\n      var result = [];\n      this.resourceMap.forEach((resource, fieldName) => {\n        var item = {\n          label: resource.label,\n          values: []\n        };\n\n        if (fieldName in rawAppointment) {\n          wrapToArray(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)));\n        }\n\n        if (item.values.length) {\n          result.push(item);\n        }\n      });\n      promise.resolve(result);\n    });\n    this.appointmentPromiseQueue = [];\n  }\n\n  _onPullResource(fieldName, valueName, displayName, label, items) {\n    var map = new Map();\n    items.forEach(item => map.set(item[valueName], item[displayName]));\n    this.resourceMap.set(fieldName, {\n      label: label,\n      map: map\n    });\n  }\n\n  _hasResourceDeclarations(resources) {\n    if (0 === resources.length) {\n      this.appointmentPromiseQueue.forEach(_ref2 => {\n        var {\n          promise: promise\n        } = _ref2;\n        return promise.resolve([]);\n      });\n      this.appointmentPromiseQueue = [];\n      return false;\n    }\n\n    return true;\n  }\n\n  _tryPullResources(resources, resultAsync) {\n    if (!this.isLoading) {\n      this.isLoading = true;\n      var promises = [];\n      resources.forEach(resource => {\n        var promise = new Deferred().done(items => this._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items));\n        promises.push(promise);\n        var dataSource = getWrappedDataSource(resource.dataSource);\n\n        if (dataSource.isLoaded()) {\n          promise.resolve(dataSource.items());\n        } else {\n          dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject());\n        }\n      });\n      when.apply(null, promises).done(() => {\n        this.isLoaded = true;\n        this.isLoading = false;\n\n        this._pushAllResources();\n      }).fail(() => resultAsync.reject());\n    }\n  }\n\n  initializeState() {\n    var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n    this.resourceDeclarations = resourceDeclarations;\n  }\n\n  createListAsync(rawAppointment) {\n    var resultAsync = new Deferred();\n    this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\n\n    if (this._hasResourceDeclarations(this.resourceDeclarations)) {\n      if (this.isLoaded) {\n        this._pushAllResources();\n      } else {\n        this._tryPullResources(this.resourceDeclarations, resultAsync);\n      }\n    }\n\n    return resultAsync.promise();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/resources/agendaResourceProcessor.js"],"names":["wrapToArray","when","Deferred","getFieldExpr","getDisplayExpr","getValueExpr","getWrappedDataSource","PromiseItem","constructor","rawAppointment","promise","AgendaResourceProcessor","resourceDeclarations","_resourceDeclarations","value","isLoaded","isLoading","resourceMap","clear","appointmentPromiseQueue","arguments","length","Map","_pushAllResources","forEach","_ref","result","resource","fieldName","item","label","values","push","map","get","resolve","_onPullResource","valueName","displayName","items","set","_hasResourceDeclarations","resources","_ref2","_tryPullResources","resultAsync","promises","done","dataSource","load","list","fail","reject","apply","initializeState","createListAsync"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/resources/agendaResourceProcessor.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    getFieldExpr,\r\n    getDisplayExpr,\r\n    getValueExpr,\r\n    getWrappedDataSource\r\n} from \"./utils\";\r\nclass PromiseItem {\r\n    constructor(rawAppointment, promise) {\r\n        this.rawAppointment = rawAppointment;\r\n        this.promise = promise\r\n    }\r\n}\r\nexport class AgendaResourceProcessor {\r\n    get resourceDeclarations() {\r\n        return this._resourceDeclarations\r\n    }\r\n    set resourceDeclarations(value) {\r\n        this._resourceDeclarations = value;\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap.clear();\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    constructor() {\r\n        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n        this._resourceDeclarations = resourceDeclarations;\r\n        this.isLoaded = false;\r\n        this.isLoading = false;\r\n        this.resourceMap = new Map;\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _pushAllResources() {\r\n        this.appointmentPromiseQueue.forEach(_ref => {\r\n            var {\r\n                promise: promise,\r\n                rawAppointment: rawAppointment\r\n            } = _ref;\r\n            var result = [];\r\n            this.resourceMap.forEach((resource, fieldName) => {\r\n                var item = {\r\n                    label: resource.label,\r\n                    values: []\r\n                };\r\n                if (fieldName in rawAppointment) {\r\n                    wrapToArray(rawAppointment[fieldName]).forEach(value => item.values.push(resource.map.get(value)))\r\n                }\r\n                if (item.values.length) {\r\n                    result.push(item)\r\n                }\r\n            });\r\n            promise.resolve(result)\r\n        });\r\n        this.appointmentPromiseQueue = []\r\n    }\r\n    _onPullResource(fieldName, valueName, displayName, label, items) {\r\n        var map = new Map;\r\n        items.forEach(item => map.set(item[valueName], item[displayName]));\r\n        this.resourceMap.set(fieldName, {\r\n            label: label,\r\n            map: map\r\n        })\r\n    }\r\n    _hasResourceDeclarations(resources) {\r\n        if (0 === resources.length) {\r\n            this.appointmentPromiseQueue.forEach(_ref2 => {\r\n                var {\r\n                    promise: promise\r\n                } = _ref2;\r\n                return promise.resolve([])\r\n            });\r\n            this.appointmentPromiseQueue = [];\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    _tryPullResources(resources, resultAsync) {\r\n        if (!this.isLoading) {\r\n            this.isLoading = true;\r\n            var promises = [];\r\n            resources.forEach(resource => {\r\n                var promise = (new Deferred).done(items => this._onPullResource(getFieldExpr(resource), getValueExpr(resource), getDisplayExpr(resource), resource.label, items));\r\n                promises.push(promise);\r\n                var dataSource = getWrappedDataSource(resource.dataSource);\r\n                if (dataSource.isLoaded()) {\r\n                    promise.resolve(dataSource.items())\r\n                } else {\r\n                    dataSource.load().done(list => promise.resolve(list)).fail(() => promise.reject())\r\n                }\r\n            });\r\n            when.apply(null, promises).done(() => {\r\n                this.isLoaded = true;\r\n                this.isLoading = false;\r\n                this._pushAllResources()\r\n            }).fail(() => resultAsync.reject())\r\n        }\r\n    }\r\n    initializeState() {\r\n        var resourceDeclarations = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\r\n        this.resourceDeclarations = resourceDeclarations\r\n    }\r\n    createListAsync(rawAppointment) {\r\n        var resultAsync = new Deferred;\r\n        this.appointmentPromiseQueue.push(new PromiseItem(rawAppointment, resultAsync));\r\n        if (this._hasResourceDeclarations(this.resourceDeclarations)) {\r\n            if (this.isLoaded) {\r\n                this._pushAllResources()\r\n            } else {\r\n                this._tryPullResources(this.resourceDeclarations, resultAsync)\r\n            }\r\n        }\r\n        return resultAsync.promise()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}