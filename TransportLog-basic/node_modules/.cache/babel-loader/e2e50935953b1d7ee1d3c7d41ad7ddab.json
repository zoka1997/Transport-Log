{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.drop_down_menu.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport ToolbarMenu from \"./ui.toolbar.menu\";\nimport DropDownMenu from \"../drop_down_menu\";\nimport devices from \"../../core/devices\";\nimport { each } from \"../../core/utils/iterator\";\nimport { compileGetter } from \"../../core/utils/data\";\nvar MENU_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS = \"dx-toolbar-menu-container\";\nvar POPOVER_BOUNDARY_OFFSET = 10;\n\nclass ToolbarDropDownMenu {\n  constructor(toolbar) {\n    this._toolbar = toolbar;\n  }\n\n  render() {\n    if (!this._hasVisibleMenuItems()) {\n      return;\n    }\n\n    this._renderMenuButtonContainer();\n\n    var $menu = $(\"<div>\").appendTo(this._dropDownMenuContainer());\n    this._dropDownMenu = this._toolbar._createComponent($menu, DropDownMenu, this._dropDownMenuOptions());\n    this.renderMenuItems();\n  }\n\n  renderMenuItems() {\n    if (!this._dropDownMenu) {\n      this.render();\n    }\n\n    this._dropDownMenu && this._dropDownMenu.option(\"items\", this._getMenuItems());\n\n    if (this._dropDownMenu && !this._dropDownMenu.option(\"items\").length) {\n      this._dropDownMenu.close();\n    }\n  }\n\n  _renderMenuButtonContainer() {\n    var $afterSection = this._toolbar._$afterSection;\n    this._$menuButtonContainer = $(\"<div>\").appendTo($afterSection).addClass(this._toolbar._buttonClass()).addClass(TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS);\n  }\n\n  _getMenuItemTemplate() {\n    return this._toolbar._getTemplateByOption(\"menuItemTemplate\");\n  }\n\n  _dropDownMenuOptions() {\n    var itemClickAction = this._toolbar._createActionByOption(\"onItemClick\");\n\n    var topAndBottomOffset = 2 * POPOVER_BOUNDARY_OFFSET;\n    return {\n      disabled: this._toolbar.option(\"disabled\"),\n      itemTemplate: this._getMenuItemTemplate.bind(this),\n      onItemClick: function (e) {\n        itemClickAction(e);\n      }.bind(this),\n      deferRendering: true,\n      container: this._toolbar.option(\"menuContainer\"),\n      popupMaxHeight: \"android\" === devices.current().platform ? domAdapter.getDocumentElement().clientHeight - topAndBottomOffset : void 0,\n      menuWidget: ToolbarMenu,\n      onOptionChanged: _ref => {\n        var {\n          name: name,\n          value: value\n        } = _ref;\n\n        if (\"opened\" === name) {\n          this._toolbar.option(\"overflowMenuVisible\", value);\n        }\n\n        if (\"items\" === name) {\n          this._updateMenuVisibility(value);\n        }\n      },\n      popupPosition: {\n        at: \"bottom right\",\n        my: \"top right\"\n      }\n    };\n  }\n\n  _updateMenuVisibility(menuItems) {\n    var items = menuItems || this._getMenuItems();\n\n    var isMenuVisible = items.length && this._hasVisibleMenuItems(items);\n\n    this._toggleMenuVisibility(isMenuVisible);\n  }\n\n  _getMenuItems() {\n    return this._toolbar._getMenuItems();\n  }\n\n  _hasVisibleMenuItems(items) {\n    var menuItems = items || this._toolbar.option(\"items\");\n\n    var result = false;\n    var optionGetter = compileGetter(\"visible\");\n    var overflowGetter = compileGetter(\"locateInMenu\");\n    each(menuItems, function (index, item) {\n      var itemVisible = optionGetter(item, {\n        functionsAsIs: true\n      });\n      var itemOverflow = overflowGetter(item, {\n        functionsAsIs: true\n      });\n\n      if (false !== itemVisible && (\"auto\" === itemOverflow || \"always\" === itemOverflow) || \"menu\" === item.location) {\n        result = true;\n      }\n    });\n    return result;\n  }\n\n  _toggleMenuVisibility(value) {\n    if (!this._dropDownMenuContainer()) {\n      return;\n    }\n\n    this._dropDownMenuContainer().toggleClass(MENU_INVISIBLE_CLASS, !value);\n  }\n\n  _dropDownMenuContainer() {\n    return this._$menuButtonContainer;\n  }\n\n  widgetOption(name, value) {\n    this._dropDownMenu && this._dropDownMenu.option(name, value);\n  }\n\n  itemOption(item, property, value) {\n    if (\"disabled\" === property || \"options.disabled\" === property) {\n      var _this$_dropDownMenu;\n\n      null === (_this$_dropDownMenu = this._dropDownMenu) || void 0 === _this$_dropDownMenu ? void 0 : _this$_dropDownMenu._itemOptionChanged(item, property, value);\n    } else {\n      this.renderMenuItems();\n    }\n  }\n\n}\n\nexport default ToolbarDropDownMenu;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/toolbar/ui.toolbar.drop_down_menu.js"],"names":["$","domAdapter","ToolbarMenu","DropDownMenu","devices","each","compileGetter","MENU_INVISIBLE_CLASS","TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS","POPOVER_BOUNDARY_OFFSET","ToolbarDropDownMenu","constructor","toolbar","_toolbar","render","_hasVisibleMenuItems","_renderMenuButtonContainer","$menu","appendTo","_dropDownMenuContainer","_dropDownMenu","_createComponent","_dropDownMenuOptions","renderMenuItems","option","_getMenuItems","length","close","$afterSection","_$afterSection","_$menuButtonContainer","addClass","_buttonClass","_getMenuItemTemplate","_getTemplateByOption","itemClickAction","_createActionByOption","topAndBottomOffset","disabled","itemTemplate","bind","onItemClick","e","deferRendering","container","popupMaxHeight","current","platform","getDocumentElement","clientHeight","menuWidget","onOptionChanged","_ref","name","value","_updateMenuVisibility","popupPosition","at","my","menuItems","items","isMenuVisible","_toggleMenuVisibility","result","optionGetter","overflowGetter","index","item","itemVisible","functionsAsIs","itemOverflow","location","toggleClass","widgetOption","itemOption","property","_this$_dropDownMenu","_itemOptionChanged"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.drop_down_menu.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport ToolbarMenu from \"./ui.toolbar.menu\";\r\nimport DropDownMenu from \"../drop_down_menu\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nvar MENU_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS = \"dx-toolbar-menu-container\";\r\nvar POPOVER_BOUNDARY_OFFSET = 10;\r\nclass ToolbarDropDownMenu {\r\n    constructor(toolbar) {\r\n        this._toolbar = toolbar\r\n    }\r\n    render() {\r\n        if (!this._hasVisibleMenuItems()) {\r\n            return\r\n        }\r\n        this._renderMenuButtonContainer();\r\n        var $menu = $(\"<div>\").appendTo(this._dropDownMenuContainer());\r\n        this._dropDownMenu = this._toolbar._createComponent($menu, DropDownMenu, this._dropDownMenuOptions());\r\n        this.renderMenuItems()\r\n    }\r\n    renderMenuItems() {\r\n        if (!this._dropDownMenu) {\r\n            this.render()\r\n        }\r\n        this._dropDownMenu && this._dropDownMenu.option(\"items\", this._getMenuItems());\r\n        if (this._dropDownMenu && !this._dropDownMenu.option(\"items\").length) {\r\n            this._dropDownMenu.close()\r\n        }\r\n    }\r\n    _renderMenuButtonContainer() {\r\n        var $afterSection = this._toolbar._$afterSection;\r\n        this._$menuButtonContainer = $(\"<div>\").appendTo($afterSection).addClass(this._toolbar._buttonClass()).addClass(TOOLBAR_DROP_DOWN_MENU_CONTAINER_CLASS)\r\n    }\r\n    _getMenuItemTemplate() {\r\n        return this._toolbar._getTemplateByOption(\"menuItemTemplate\")\r\n    }\r\n    _dropDownMenuOptions() {\r\n        var itemClickAction = this._toolbar._createActionByOption(\"onItemClick\");\r\n        var topAndBottomOffset = 2 * POPOVER_BOUNDARY_OFFSET;\r\n        return {\r\n            disabled: this._toolbar.option(\"disabled\"),\r\n            itemTemplate: this._getMenuItemTemplate.bind(this),\r\n            onItemClick: function(e) {\r\n                itemClickAction(e)\r\n            }.bind(this),\r\n            deferRendering: true,\r\n            container: this._toolbar.option(\"menuContainer\"),\r\n            popupMaxHeight: \"android\" === devices.current().platform ? domAdapter.getDocumentElement().clientHeight - topAndBottomOffset : void 0,\r\n            menuWidget: ToolbarMenu,\r\n            onOptionChanged: _ref => {\r\n                var {\r\n                    name: name,\r\n                    value: value\r\n                } = _ref;\r\n                if (\"opened\" === name) {\r\n                    this._toolbar.option(\"overflowMenuVisible\", value)\r\n                }\r\n                if (\"items\" === name) {\r\n                    this._updateMenuVisibility(value)\r\n                }\r\n            },\r\n            popupPosition: {\r\n                at: \"bottom right\",\r\n                my: \"top right\"\r\n            }\r\n        }\r\n    }\r\n    _updateMenuVisibility(menuItems) {\r\n        var items = menuItems || this._getMenuItems();\r\n        var isMenuVisible = items.length && this._hasVisibleMenuItems(items);\r\n        this._toggleMenuVisibility(isMenuVisible)\r\n    }\r\n    _getMenuItems() {\r\n        return this._toolbar._getMenuItems()\r\n    }\r\n    _hasVisibleMenuItems(items) {\r\n        var menuItems = items || this._toolbar.option(\"items\");\r\n        var result = false;\r\n        var optionGetter = compileGetter(\"visible\");\r\n        var overflowGetter = compileGetter(\"locateInMenu\");\r\n        each(menuItems, (function(index, item) {\r\n            var itemVisible = optionGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            var itemOverflow = overflowGetter(item, {\r\n                functionsAsIs: true\r\n            });\r\n            if (false !== itemVisible && (\"auto\" === itemOverflow || \"always\" === itemOverflow) || \"menu\" === item.location) {\r\n                result = true\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _toggleMenuVisibility(value) {\r\n        if (!this._dropDownMenuContainer()) {\r\n            return\r\n        }\r\n        this._dropDownMenuContainer().toggleClass(MENU_INVISIBLE_CLASS, !value)\r\n    }\r\n    _dropDownMenuContainer() {\r\n        return this._$menuButtonContainer\r\n    }\r\n    widgetOption(name, value) {\r\n        this._dropDownMenu && this._dropDownMenu.option(name, value)\r\n    }\r\n    itemOption(item, property, value) {\r\n        if (\"disabled\" === property || \"options.disabled\" === property) {\r\n            var _this$_dropDownMenu;\r\n            null === (_this$_dropDownMenu = this._dropDownMenu) || void 0 === _this$_dropDownMenu ? void 0 : _this$_dropDownMenu._itemOptionChanged(item, property, value)\r\n        } else {\r\n            this.renderMenuItems()\r\n        }\r\n    }\r\n}\r\nexport default ToolbarDropDownMenu;\r\n"]},"metadata":{},"sourceType":"module"}