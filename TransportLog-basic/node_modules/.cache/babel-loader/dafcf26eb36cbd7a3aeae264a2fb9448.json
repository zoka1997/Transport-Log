{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"groups\", \"overflowIndicatorTemplate\", \"viewModel\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport { combineClasses } from \"../../../../utils/combine_classes\";\nimport { Button } from \"../../../button\";\nimport { getIndicatorColor, getOverflowIndicatorStyles } from \"./utils\";\nimport messageLocalization from \"../../../../../localization/message\";\nimport { AppointmentsContext } from \"../../appointments_context\";\nimport { mergeStylesWithColor } from \"../utils\";\nexport var viewFunction = _ref => {\n  var {\n    classes: classes,\n    data: data,\n    props: {\n      overflowIndicatorTemplate: OverflowIndicatorTemplate\n    },\n    styles: styles,\n    text: text\n  } = _ref;\n  return createComponentVNode(2, Button, {\n    style: normalizeStyles(styles),\n    className: classes,\n    type: \"default\",\n    stylingMode: \"contained\",\n    children: OverflowIndicatorTemplate ? OverflowIndicatorTemplate({\n      data: data\n    }) : createVNode(1, \"span\", null, text, 0)\n  });\n};\nexport var OverflowIndicatorProps = {};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class OverflowIndicator extends InfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: void 0\n    };\n    this.updateStylesEffect = this.updateStylesEffect.bind(this);\n  }\n\n  get appointmentsContextValue() {\n    if (\"AppointmentsContext\" in this.context) {\n      return this.context.AppointmentsContext;\n    }\n\n    return AppointmentsContext;\n  }\n\n  createEffects() {\n    return [new InfernoEffect(this.updateStylesEffect, [this.props.groups, this.props.viewModel, this.appointmentsContextValue])];\n  }\n\n  updateEffects() {\n    var _this$_effects$;\n\n    null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.groups, this.props.viewModel, this.appointmentsContextValue]);\n  }\n\n  updateStylesEffect() {\n    var {\n      groups: groups,\n      viewModel: viewModel\n    } = this.props;\n    getIndicatorColor(this.appointmentsContextValue, viewModel, groups).then(color => {\n      this.setState(__state_argument => ({\n        color: color\n      }));\n    });\n  }\n\n  get data() {\n    return {\n      appointmentCount: this.props.viewModel.items.settings.length,\n      isCompact: this.props.viewModel.isCompact\n    };\n  }\n\n  get text() {\n    var {\n      isCompact: isCompact\n    } = this.props.viewModel;\n    var {\n      appointmentCount: appointmentCount\n    } = this.data;\n\n    if (isCompact) {\n      return \"\".concat(appointmentCount);\n    }\n\n    var formatter = messageLocalization.getFormatter(\"dxScheduler-moreAppointments\");\n    return formatter(appointmentCount);\n  }\n\n  get appointmentStyles() {\n    return getOverflowIndicatorStyles(this.props.viewModel);\n  }\n\n  get styles() {\n    return mergeStylesWithColor(this.state.color, this.appointmentStyles);\n  }\n\n  get classes() {\n    return combineClasses({\n      \"dx-scheduler-appointment-collector\": true,\n      \"dx-scheduler-appointment-collector-compact\": this.data.isCompact\n    });\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        overflowIndicatorTemplate: getTemplate(props.overflowIndicatorTemplate)\n      }),\n      color: this.state.color,\n      appointmentsContextValue: this.appointmentsContextValue,\n      data: this.data,\n      text: this.text,\n      appointmentStyles: this.appointmentStyles,\n      styles: this.styles,\n      classes: this.classes,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nOverflowIndicator.defaultProps = OverflowIndicatorProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createVNode","createComponentVNode","normalizeProps","InfernoEffect","InfernoComponent","normalizeStyles","combineClasses","Button","getIndicatorColor","getOverflowIndicatorStyles","messageLocalization","AppointmentsContext","mergeStylesWithColor","viewFunction","_ref","classes","data","props","overflowIndicatorTemplate","OverflowIndicatorTemplate","styles","text","style","className","type","stylingMode","children","OverflowIndicatorProps","getTemplate","TemplateProp","defaultProps","OverflowIndicator","constructor","state","color","updateStylesEffect","bind","appointmentsContextValue","context","createEffects","groups","viewModel","updateEffects","_this$_effects$","_effects","update","then","setState","__state_argument","appointmentCount","items","settings","length","isCompact","concat","formatter","getFormatter","appointmentStyles","restAttributes","_this$props","restProps","render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"groups\", \"overflowIndicatorTemplate\", \"viewModel\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../../utils/combine_classes\";\r\nimport {\r\n    Button\r\n} from \"../../../button\";\r\nimport {\r\n    getIndicatorColor,\r\n    getOverflowIndicatorStyles\r\n} from \"./utils\";\r\nimport messageLocalization from \"../../../../../localization/message\";\r\nimport {\r\n    AppointmentsContext\r\n} from \"../../appointments_context\";\r\nimport {\r\n    mergeStylesWithColor\r\n} from \"../utils\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        data: data,\r\n        props: {\r\n            overflowIndicatorTemplate: OverflowIndicatorTemplate\r\n        },\r\n        styles: styles,\r\n        text: text\r\n    } = _ref;\r\n    return createComponentVNode(2, Button, {\r\n        style: normalizeStyles(styles),\r\n        className: classes,\r\n        type: \"default\",\r\n        stylingMode: \"contained\",\r\n        children: OverflowIndicatorTemplate ? OverflowIndicatorTemplate({\r\n            data: data\r\n        }) : createVNode(1, \"span\", null, text, 0)\r\n    })\r\n};\r\nexport var OverflowIndicatorProps = {};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class OverflowIndicator extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: void 0\r\n        };\r\n        this.updateStylesEffect = this.updateStylesEffect.bind(this)\r\n    }\r\n    get appointmentsContextValue() {\r\n        if (\"AppointmentsContext\" in this.context) {\r\n            return this.context.AppointmentsContext\r\n        }\r\n        return AppointmentsContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateStylesEffect, [this.props.groups, this.props.viewModel, this.appointmentsContextValue])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.groups, this.props.viewModel, this.appointmentsContextValue])\r\n    }\r\n    updateStylesEffect() {\r\n        var {\r\n            groups: groups,\r\n            viewModel: viewModel\r\n        } = this.props;\r\n        getIndicatorColor(this.appointmentsContextValue, viewModel, groups).then(color => {\r\n            this.setState(__state_argument => ({\r\n                color: color\r\n            }))\r\n        })\r\n    }\r\n    get data() {\r\n        return {\r\n            appointmentCount: this.props.viewModel.items.settings.length,\r\n            isCompact: this.props.viewModel.isCompact\r\n        }\r\n    }\r\n    get text() {\r\n        var {\r\n            isCompact: isCompact\r\n        } = this.props.viewModel;\r\n        var {\r\n            appointmentCount: appointmentCount\r\n        } = this.data;\r\n        if (isCompact) {\r\n            return \"\".concat(appointmentCount)\r\n        }\r\n        var formatter = messageLocalization.getFormatter(\"dxScheduler-moreAppointments\");\r\n        return formatter(appointmentCount)\r\n    }\r\n    get appointmentStyles() {\r\n        return getOverflowIndicatorStyles(this.props.viewModel)\r\n    }\r\n    get styles() {\r\n        return mergeStylesWithColor(this.state.color, this.appointmentStyles)\r\n    }\r\n    get classes() {\r\n        return combineClasses({\r\n            \"dx-scheduler-appointment-collector\": true,\r\n            \"dx-scheduler-appointment-collector-compact\": this.data.isCompact\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                overflowIndicatorTemplate: getTemplate(props.overflowIndicatorTemplate)\r\n            }),\r\n            color: this.state.color,\r\n            appointmentsContextValue: this.appointmentsContextValue,\r\n            data: this.data,\r\n            text: this.text,\r\n            appointmentStyles: this.appointmentStyles,\r\n            styles: this.styles,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nOverflowIndicator.defaultProps = OverflowIndicatorProps;\r\n"]},"metadata":{},"sourceType":"module"}