{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/header/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../core/utils/date\";\nimport dateLocalization from \"../../../localization/date\";\nimport messageLocalization from \"../../../localization/message\";\nimport { camelize } from \"../../../core/utils/inflector\";\nimport { isFunction, isObject } from \"../../../core/utils/type\";\nimport errors from \"../../../core/errors\";\nimport { VIEWS } from \"../constants\";\nvar DAY_FORMAT = \"d\";\nvar DAYS_IN_WORK_WEEK = 5;\nvar {\n  correctDateWithUnitBeginning: getPeriodStart,\n  getFirstWeekDate: getWeekStart,\n  getLastMonthDay: getLastMonthDay,\n  addDateInterval: addDateInterval\n} = dateUtils;\nvar {\n  format: formatDate\n} = dateLocalization;\nvar MS_DURATION = {\n  milliseconds: 1\n};\nvar DAY_DURATION = {\n  days: 1\n};\nvar WEEK_DURATION = {\n  days: 7\n};\nvar SATURDAY_INDEX = 6;\nvar SUNDAY_INDEX = 0;\n\nvar subMS = date => addDateInterval(date, MS_DURATION, -1);\n\nvar addMS = date => addDateInterval(date, MS_DURATION, 1);\n\nvar nextDay = date => addDateInterval(date, DAY_DURATION, 1);\n\nexport var nextWeek = date => addDateInterval(date, WEEK_DURATION, 1);\n\nvar nextMonth = date => {\n  var days = getLastMonthDay(date);\n  return addDateInterval(date, {\n    days: days\n  }, 1);\n};\n\nvar isWeekend = date => date.getDay() === SATURDAY_INDEX || date.getDay() === SUNDAY_INDEX;\n\nvar getWorkWeekStart = firstDayOfWeek => {\n  var date = new Date(firstDayOfWeek);\n\n  while (isWeekend(date)) {\n    date = nextDay(date);\n  }\n\n  return date;\n};\n\nvar getDateAfterWorkWeek = workWeekStart => {\n  var date = new Date(workWeekStart);\n  var workDaysCount = 0;\n\n  while (workDaysCount < DAYS_IN_WORK_WEEK) {\n    if (!isWeekend(date)) {\n      workDaysCount++;\n    }\n\n    date = nextDay(date);\n  }\n\n  return date;\n};\n\nvar nextAgendaStart = (date, agendaDuration) => addDateInterval(date, {\n  days: agendaDuration\n}, 1);\n\nvar getInterval = options => {\n  var startDate = getIntervalStartDate(options);\n  var endDate = getIntervalEndDate(startDate, options);\n  return {\n    startDate: startDate,\n    endDate: endDate\n  };\n};\n\nvar getIntervalStartDate = options => {\n  var {\n    date: date,\n    step: step,\n    firstDayOfWeek: firstDayOfWeek\n  } = options;\n\n  switch (step) {\n    case \"day\":\n    case \"week\":\n    case \"month\":\n      return getPeriodStart(date, step, false, firstDayOfWeek);\n\n    case \"workWeek\":\n      var firstWeekDay = getWeekStart(date, firstDayOfWeek);\n      return getWorkWeekStart(firstWeekDay);\n\n    case \"agenda\":\n      return new Date(date);\n  }\n};\n\nvar getIntervalEndDate = (startDate, options) => {\n  var {\n    intervalCount: intervalCount,\n    step: step,\n    agendaDuration: agendaDuration\n  } = options;\n  var periodStartDate;\n  var periodEndDate;\n  var nextPeriodStartDate = new Date(startDate);\n\n  for (var i = 0; i < intervalCount; i++) {\n    periodStartDate = nextPeriodStartDate;\n    periodEndDate = getPeriodEndDate(periodStartDate, step, agendaDuration);\n    nextPeriodStartDate = getNextPeriodStartDate(periodEndDate, step);\n  }\n\n  return periodEndDate;\n};\n\nvar getPeriodEndDate = (currentPeriodStartDate, step, agendaDuration) => {\n  var date;\n\n  switch (step) {\n    case \"day\":\n      date = nextDay(currentPeriodStartDate);\n      break;\n\n    case \"week\":\n      date = nextWeek(currentPeriodStartDate);\n      break;\n\n    case \"month\":\n      date = nextMonth(currentPeriodStartDate);\n      break;\n\n    case \"workWeek\":\n      date = getDateAfterWorkWeek(currentPeriodStartDate);\n      break;\n\n    case \"agenda\":\n      date = nextAgendaStart(currentPeriodStartDate, agendaDuration);\n  }\n\n  return subMS(date);\n};\n\nvar getNextPeriodStartDate = (currentPeriodEndDate, step) => {\n  var date = addMS(currentPeriodEndDate);\n\n  if (\"workWeek\" === step) {\n    while (isWeekend(date)) {\n      date = nextDay(date);\n    }\n  }\n\n  return date;\n};\n\nexport var getNextIntervalDate = (options, direction) => {\n  var {\n    date: date,\n    step: step,\n    intervalCount: intervalCount,\n    agendaDuration: agendaDuration\n  } = options;\n  var dayDuration;\n\n  switch (step) {\n    case \"day\":\n      dayDuration = 1 * intervalCount;\n      break;\n\n    case \"week\":\n    case \"workWeek\":\n      dayDuration = 7 * intervalCount;\n      break;\n\n    case \"agenda\":\n      dayDuration = agendaDuration;\n      break;\n\n    case \"month\":\n      return getNextMonthDate(date, intervalCount, direction);\n  }\n\n  return addDateInterval(date, {\n    days: dayDuration\n  }, direction);\n};\n\nvar getNextMonthDate = (date, intervalCount, direction) => {\n  var currentDate = date.getDate();\n  var currentMonthFirstDate = new Date(new Date(date.getTime()).setDate(1));\n  var thatMonthFirstDate = new Date(currentMonthFirstDate.setMonth(currentMonthFirstDate.getMonth() + intervalCount * direction));\n  var thatMonthDuration = getLastMonthDay(thatMonthFirstDate);\n  var minDate = currentDate < thatMonthDuration ? currentDate : thatMonthDuration;\n  var currentMonthMinDate = new Date(new Date(date.getTime()).setDate(minDate));\n  var thatMonthMinDate = new Date(currentMonthMinDate.setMonth(currentMonthMinDate.getMonth() + intervalCount * direction));\n  return thatMonthMinDate;\n};\n\nvar getDateMonthFormatter = isShort => {\n  var monthType = isShort ? \"abbreviated\" : \"wide\";\n  var months = dateLocalization.getMonthNames(monthType);\n  return date => {\n    var day = formatDate(date, \"day\");\n    var month = months[date.getMonth()];\n    return \"\".concat(day, \" \").concat(month);\n  };\n};\n\nvar formatMonthYear = date => {\n  var months = dateLocalization.getMonthNames(\"abbreviated\");\n  var month = months[date.getMonth()];\n  var year = formatDate(date, \"year\");\n  return \"\".concat(month, \" \").concat(year);\n};\n\nvar getDateMonthYearFormatter = isShort => date => {\n  var dateMonthFormat = getDateMonthFormatter(isShort);\n  var dateMonth = dateMonthFormat(date);\n  var year = formatDate(date, \"year\");\n  return \"\".concat(dateMonth, \" \").concat(year);\n};\n\nvar getDifferentYearCaption = (startDate, endDate) => {\n  var firstDateText = formatDate(startDate, getDateMonthYearFormatter(true));\n  var lastDateDateText = formatDate(endDate, getDateMonthYearFormatter(true));\n  return \"\".concat(firstDateText, \"-\").concat(lastDateDateText);\n};\n\nvar getSameYearCaption = (startDate, endDate, isShort) => {\n  var isDifferentMonthDates = startDate.getMonth() !== endDate.getMonth();\n  var useShortFormat = isDifferentMonthDates || isShort;\n  var firstDateFormat = isDifferentMonthDates ? getDateMonthFormatter(useShortFormat) : DAY_FORMAT;\n  var firstDateText = formatDate(startDate, firstDateFormat);\n  var lastDateText = formatDate(endDate, getDateMonthYearFormatter(useShortFormat));\n  return \"\".concat(firstDateText, \"-\").concat(lastDateText);\n};\n\nvar getSameDateCaption = (date, step, isShort) => {\n  var useShortFormat = \"agenda\" === step ? isShort : false;\n  var dateMonthFormat = getDateMonthFormatter(useShortFormat);\n  var dateMonth = dateMonthFormat(date);\n  var year = formatDate(date, \"year\");\n  return \"\".concat(dateMonth, \" \").concat(year);\n};\n\nvar formatCaptionByMonths = (startDate, endDate, isShort) => {\n  var isDifferentYears = startDate.getFullYear() !== endDate.getFullYear();\n\n  if (isDifferentYears) {\n    return getDifferentYearCaption(startDate, endDate);\n  }\n\n  return getSameYearCaption(startDate, endDate, isShort);\n};\n\nvar formatMonthViewCaption = (startDate, endDate) => {\n  if (dateUtils.sameMonth(startDate, endDate)) {\n    return formatDate(startDate, \"monthandyear\");\n  }\n\n  var isSameYear = dateUtils.sameYear(startDate, endDate);\n  var firstDateText = isSameYear ? dateLocalization.getMonthNames(\"abbreviated\")[startDate.getMonth()] : formatMonthYear(startDate);\n  var lastDateText = formatMonthYear(endDate);\n  return \"\".concat(firstDateText, \"-\").concat(lastDateText);\n};\n\nvar getCaptionText = (startDate, endDate, isShort, step) => {\n  if (dateUtils.sameDate(startDate, endDate)) {\n    return getSameDateCaption(startDate, step, isShort);\n  }\n\n  if (\"month\" === step) {\n    return formatMonthViewCaption(startDate, endDate);\n  }\n\n  return formatCaptionByMonths(startDate, endDate, isShort);\n};\n\nexport var getCaption = (options, isShort, customizationFunction) => {\n  var {\n    startDate: startDate,\n    endDate: endDate\n  } = getInterval(options);\n  var text = getCaptionText(startDate, endDate, isShort, options.step);\n\n  if (isFunction(customizationFunction)) {\n    text = customizationFunction({\n      startDate: startDate,\n      endDate: endDate,\n      text: text\n    });\n  }\n\n  return {\n    startDate: startDate,\n    endDate: endDate,\n    text: text\n  };\n};\nvar STEP_MAP = {\n  day: \"day\",\n  week: \"week\",\n  workWeek: \"workWeek\",\n  month: \"month\",\n  timelineDay: \"day\",\n  timelineWeek: \"week\",\n  timelineWorkWeek: \"workWeek\",\n  timelineMonth: \"month\",\n  agenda: \"agenda\"\n};\nexport var getStep = view => STEP_MAP[getViewType(view)];\nexport var getViewType = view => {\n  if (isObject(view) && view.type) {\n    return view.type;\n  }\n\n  return view;\n};\nexport var getViewName = view => {\n  if (isObject(view)) {\n    return view.name ? view.name : view.type;\n  }\n\n  return view;\n};\nexport var getViewText = view => {\n  if (view.name) {\n    return view.name;\n  }\n\n  var viewName = camelize(view.type || view, true);\n  return messageLocalization.format(\"dxScheduler-switcher\" + viewName);\n};\n\nvar isValidView = view => Object.values(VIEWS).includes(view);\n\nexport var validateViews = views => {\n  views.forEach(view => {\n    var viewType = getViewType(view);\n\n    if (!isValidView(viewType)) {\n      errors.log(\"W0008\", viewType);\n    }\n  });\n};\nexport var formatViews = views => {\n  validateViews(views);\n  return views.map(view => {\n    var text = getViewText(view);\n    var type = getViewType(view);\n    var name = getViewName(view);\n    return {\n      text: text,\n      name: name,\n      view: {\n        text: text,\n        type: type,\n        name: name\n      }\n    };\n  });\n};\nexport var isOneView = (views, selectedView) => 1 === views.length && views[0].name === selectedView;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/header/utils.js"],"names":["dateUtils","dateLocalization","messageLocalization","camelize","isFunction","isObject","errors","VIEWS","DAY_FORMAT","DAYS_IN_WORK_WEEK","correctDateWithUnitBeginning","getPeriodStart","getFirstWeekDate","getWeekStart","getLastMonthDay","addDateInterval","format","formatDate","MS_DURATION","milliseconds","DAY_DURATION","days","WEEK_DURATION","SATURDAY_INDEX","SUNDAY_INDEX","subMS","date","addMS","nextDay","nextWeek","nextMonth","isWeekend","getDay","getWorkWeekStart","firstDayOfWeek","Date","getDateAfterWorkWeek","workWeekStart","workDaysCount","nextAgendaStart","agendaDuration","getInterval","options","startDate","getIntervalStartDate","endDate","getIntervalEndDate","step","firstWeekDay","intervalCount","periodStartDate","periodEndDate","nextPeriodStartDate","i","getPeriodEndDate","getNextPeriodStartDate","currentPeriodStartDate","currentPeriodEndDate","getNextIntervalDate","direction","dayDuration","getNextMonthDate","currentDate","getDate","currentMonthFirstDate","getTime","setDate","thatMonthFirstDate","setMonth","getMonth","thatMonthDuration","minDate","currentMonthMinDate","thatMonthMinDate","getDateMonthFormatter","isShort","monthType","months","getMonthNames","day","month","concat","formatMonthYear","year","getDateMonthYearFormatter","dateMonthFormat","dateMonth","getDifferentYearCaption","firstDateText","lastDateDateText","getSameYearCaption","isDifferentMonthDates","useShortFormat","firstDateFormat","lastDateText","getSameDateCaption","formatCaptionByMonths","isDifferentYears","getFullYear","formatMonthViewCaption","sameMonth","isSameYear","sameYear","getCaptionText","sameDate","getCaption","customizationFunction","text","STEP_MAP","week","workWeek","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","getStep","view","getViewType","type","getViewName","name","getViewText","viewName","isValidView","Object","values","includes","validateViews","views","forEach","viewType","log","formatViews","map","isOneView","selectedView","length"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/header/utils.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport dateLocalization from \"../../../localization/date\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    camelize\r\n} from \"../../../core/utils/inflector\";\r\nimport {\r\n    isFunction,\r\n    isObject\r\n} from \"../../../core/utils/type\";\r\nimport errors from \"../../../core/errors\";\r\nimport {\r\n    VIEWS\r\n} from \"../constants\";\r\nvar DAY_FORMAT = \"d\";\r\nvar DAYS_IN_WORK_WEEK = 5;\r\nvar {\r\n    correctDateWithUnitBeginning: getPeriodStart,\r\n    getFirstWeekDate: getWeekStart,\r\n    getLastMonthDay: getLastMonthDay,\r\n    addDateInterval: addDateInterval\r\n} = dateUtils;\r\nvar {\r\n    format: formatDate\r\n} = dateLocalization;\r\nvar MS_DURATION = {\r\n    milliseconds: 1\r\n};\r\nvar DAY_DURATION = {\r\n    days: 1\r\n};\r\nvar WEEK_DURATION = {\r\n    days: 7\r\n};\r\nvar SATURDAY_INDEX = 6;\r\nvar SUNDAY_INDEX = 0;\r\nvar subMS = date => addDateInterval(date, MS_DURATION, -1);\r\nvar addMS = date => addDateInterval(date, MS_DURATION, 1);\r\nvar nextDay = date => addDateInterval(date, DAY_DURATION, 1);\r\nexport var nextWeek = date => addDateInterval(date, WEEK_DURATION, 1);\r\nvar nextMonth = date => {\r\n    var days = getLastMonthDay(date);\r\n    return addDateInterval(date, {\r\n        days: days\r\n    }, 1)\r\n};\r\nvar isWeekend = date => date.getDay() === SATURDAY_INDEX || date.getDay() === SUNDAY_INDEX;\r\nvar getWorkWeekStart = firstDayOfWeek => {\r\n    var date = new Date(firstDayOfWeek);\r\n    while (isWeekend(date)) {\r\n        date = nextDay(date)\r\n    }\r\n    return date\r\n};\r\nvar getDateAfterWorkWeek = workWeekStart => {\r\n    var date = new Date(workWeekStart);\r\n    var workDaysCount = 0;\r\n    while (workDaysCount < DAYS_IN_WORK_WEEK) {\r\n        if (!isWeekend(date)) {\r\n            workDaysCount++\r\n        }\r\n        date = nextDay(date)\r\n    }\r\n    return date\r\n};\r\nvar nextAgendaStart = (date, agendaDuration) => addDateInterval(date, {\r\n    days: agendaDuration\r\n}, 1);\r\nvar getInterval = options => {\r\n    var startDate = getIntervalStartDate(options);\r\n    var endDate = getIntervalEndDate(startDate, options);\r\n    return {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n    }\r\n};\r\nvar getIntervalStartDate = options => {\r\n    var {\r\n        date: date,\r\n        step: step,\r\n        firstDayOfWeek: firstDayOfWeek\r\n    } = options;\r\n    switch (step) {\r\n        case \"day\":\r\n        case \"week\":\r\n        case \"month\":\r\n            return getPeriodStart(date, step, false, firstDayOfWeek);\r\n        case \"workWeek\":\r\n            var firstWeekDay = getWeekStart(date, firstDayOfWeek);\r\n            return getWorkWeekStart(firstWeekDay);\r\n        case \"agenda\":\r\n            return new Date(date)\r\n    }\r\n};\r\nvar getIntervalEndDate = (startDate, options) => {\r\n    var {\r\n        intervalCount: intervalCount,\r\n        step: step,\r\n        agendaDuration: agendaDuration\r\n    } = options;\r\n    var periodStartDate;\r\n    var periodEndDate;\r\n    var nextPeriodStartDate = new Date(startDate);\r\n    for (var i = 0; i < intervalCount; i++) {\r\n        periodStartDate = nextPeriodStartDate;\r\n        periodEndDate = getPeriodEndDate(periodStartDate, step, agendaDuration);\r\n        nextPeriodStartDate = getNextPeriodStartDate(periodEndDate, step)\r\n    }\r\n    return periodEndDate\r\n};\r\nvar getPeriodEndDate = (currentPeriodStartDate, step, agendaDuration) => {\r\n    var date;\r\n    switch (step) {\r\n        case \"day\":\r\n            date = nextDay(currentPeriodStartDate);\r\n            break;\r\n        case \"week\":\r\n            date = nextWeek(currentPeriodStartDate);\r\n            break;\r\n        case \"month\":\r\n            date = nextMonth(currentPeriodStartDate);\r\n            break;\r\n        case \"workWeek\":\r\n            date = getDateAfterWorkWeek(currentPeriodStartDate);\r\n            break;\r\n        case \"agenda\":\r\n            date = nextAgendaStart(currentPeriodStartDate, agendaDuration)\r\n    }\r\n    return subMS(date)\r\n};\r\nvar getNextPeriodStartDate = (currentPeriodEndDate, step) => {\r\n    var date = addMS(currentPeriodEndDate);\r\n    if (\"workWeek\" === step) {\r\n        while (isWeekend(date)) {\r\n            date = nextDay(date)\r\n        }\r\n    }\r\n    return date\r\n};\r\nexport var getNextIntervalDate = (options, direction) => {\r\n    var {\r\n        date: date,\r\n        step: step,\r\n        intervalCount: intervalCount,\r\n        agendaDuration: agendaDuration\r\n    } = options;\r\n    var dayDuration;\r\n    switch (step) {\r\n        case \"day\":\r\n            dayDuration = 1 * intervalCount;\r\n            break;\r\n        case \"week\":\r\n        case \"workWeek\":\r\n            dayDuration = 7 * intervalCount;\r\n            break;\r\n        case \"agenda\":\r\n            dayDuration = agendaDuration;\r\n            break;\r\n        case \"month\":\r\n            return getNextMonthDate(date, intervalCount, direction)\r\n    }\r\n    return addDateInterval(date, {\r\n        days: dayDuration\r\n    }, direction)\r\n};\r\nvar getNextMonthDate = (date, intervalCount, direction) => {\r\n    var currentDate = date.getDate();\r\n    var currentMonthFirstDate = new Date(new Date(date.getTime()).setDate(1));\r\n    var thatMonthFirstDate = new Date(currentMonthFirstDate.setMonth(currentMonthFirstDate.getMonth() + intervalCount * direction));\r\n    var thatMonthDuration = getLastMonthDay(thatMonthFirstDate);\r\n    var minDate = currentDate < thatMonthDuration ? currentDate : thatMonthDuration;\r\n    var currentMonthMinDate = new Date(new Date(date.getTime()).setDate(minDate));\r\n    var thatMonthMinDate = new Date(currentMonthMinDate.setMonth(currentMonthMinDate.getMonth() + intervalCount * direction));\r\n    return thatMonthMinDate\r\n};\r\nvar getDateMonthFormatter = isShort => {\r\n    var monthType = isShort ? \"abbreviated\" : \"wide\";\r\n    var months = dateLocalization.getMonthNames(monthType);\r\n    return date => {\r\n        var day = formatDate(date, \"day\");\r\n        var month = months[date.getMonth()];\r\n        return \"\".concat(day, \" \").concat(month)\r\n    }\r\n};\r\nvar formatMonthYear = date => {\r\n    var months = dateLocalization.getMonthNames(\"abbreviated\");\r\n    var month = months[date.getMonth()];\r\n    var year = formatDate(date, \"year\");\r\n    return \"\".concat(month, \" \").concat(year)\r\n};\r\nvar getDateMonthYearFormatter = isShort => date => {\r\n    var dateMonthFormat = getDateMonthFormatter(isShort);\r\n    var dateMonth = dateMonthFormat(date);\r\n    var year = formatDate(date, \"year\");\r\n    return \"\".concat(dateMonth, \" \").concat(year)\r\n};\r\nvar getDifferentYearCaption = (startDate, endDate) => {\r\n    var firstDateText = formatDate(startDate, getDateMonthYearFormatter(true));\r\n    var lastDateDateText = formatDate(endDate, getDateMonthYearFormatter(true));\r\n    return \"\".concat(firstDateText, \"-\").concat(lastDateDateText)\r\n};\r\nvar getSameYearCaption = (startDate, endDate, isShort) => {\r\n    var isDifferentMonthDates = startDate.getMonth() !== endDate.getMonth();\r\n    var useShortFormat = isDifferentMonthDates || isShort;\r\n    var firstDateFormat = isDifferentMonthDates ? getDateMonthFormatter(useShortFormat) : DAY_FORMAT;\r\n    var firstDateText = formatDate(startDate, firstDateFormat);\r\n    var lastDateText = formatDate(endDate, getDateMonthYearFormatter(useShortFormat));\r\n    return \"\".concat(firstDateText, \"-\").concat(lastDateText)\r\n};\r\nvar getSameDateCaption = (date, step, isShort) => {\r\n    var useShortFormat = \"agenda\" === step ? isShort : false;\r\n    var dateMonthFormat = getDateMonthFormatter(useShortFormat);\r\n    var dateMonth = dateMonthFormat(date);\r\n    var year = formatDate(date, \"year\");\r\n    return \"\".concat(dateMonth, \" \").concat(year)\r\n};\r\nvar formatCaptionByMonths = (startDate, endDate, isShort) => {\r\n    var isDifferentYears = startDate.getFullYear() !== endDate.getFullYear();\r\n    if (isDifferentYears) {\r\n        return getDifferentYearCaption(startDate, endDate)\r\n    }\r\n    return getSameYearCaption(startDate, endDate, isShort)\r\n};\r\nvar formatMonthViewCaption = (startDate, endDate) => {\r\n    if (dateUtils.sameMonth(startDate, endDate)) {\r\n        return formatDate(startDate, \"monthandyear\")\r\n    }\r\n    var isSameYear = dateUtils.sameYear(startDate, endDate);\r\n    var firstDateText = isSameYear ? dateLocalization.getMonthNames(\"abbreviated\")[startDate.getMonth()] : formatMonthYear(startDate);\r\n    var lastDateText = formatMonthYear(endDate);\r\n    return \"\".concat(firstDateText, \"-\").concat(lastDateText)\r\n};\r\nvar getCaptionText = (startDate, endDate, isShort, step) => {\r\n    if (dateUtils.sameDate(startDate, endDate)) {\r\n        return getSameDateCaption(startDate, step, isShort)\r\n    }\r\n    if (\"month\" === step) {\r\n        return formatMonthViewCaption(startDate, endDate)\r\n    }\r\n    return formatCaptionByMonths(startDate, endDate, isShort)\r\n};\r\nexport var getCaption = (options, isShort, customizationFunction) => {\r\n    var {\r\n        startDate: startDate,\r\n        endDate: endDate\r\n    } = getInterval(options);\r\n    var text = getCaptionText(startDate, endDate, isShort, options.step);\r\n    if (isFunction(customizationFunction)) {\r\n        text = customizationFunction({\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            text: text\r\n        })\r\n    }\r\n    return {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        text: text\r\n    }\r\n};\r\nvar STEP_MAP = {\r\n    day: \"day\",\r\n    week: \"week\",\r\n    workWeek: \"workWeek\",\r\n    month: \"month\",\r\n    timelineDay: \"day\",\r\n    timelineWeek: \"week\",\r\n    timelineWorkWeek: \"workWeek\",\r\n    timelineMonth: \"month\",\r\n    agenda: \"agenda\"\r\n};\r\nexport var getStep = view => STEP_MAP[getViewType(view)];\r\nexport var getViewType = view => {\r\n    if (isObject(view) && view.type) {\r\n        return view.type\r\n    }\r\n    return view\r\n};\r\nexport var getViewName = view => {\r\n    if (isObject(view)) {\r\n        return view.name ? view.name : view.type\r\n    }\r\n    return view\r\n};\r\nexport var getViewText = view => {\r\n    if (view.name) {\r\n        return view.name\r\n    }\r\n    var viewName = camelize(view.type || view, true);\r\n    return messageLocalization.format(\"dxScheduler-switcher\" + viewName)\r\n};\r\nvar isValidView = view => Object.values(VIEWS).includes(view);\r\nexport var validateViews = views => {\r\n    views.forEach(view => {\r\n        var viewType = getViewType(view);\r\n        if (!isValidView(viewType)) {\r\n            errors.log(\"W0008\", viewType)\r\n        }\r\n    })\r\n};\r\nexport var formatViews = views => {\r\n    validateViews(views);\r\n    return views.map(view => {\r\n        var text = getViewText(view);\r\n        var type = getViewType(view);\r\n        var name = getViewName(view);\r\n        return {\r\n            text: text,\r\n            name: name,\r\n            view: {\r\n                text: text,\r\n                type: type,\r\n                name: name\r\n            }\r\n        }\r\n    })\r\n};\r\nexport var isOneView = (views, selectedView) => 1 === views.length && views[0].name === selectedView;\r\n"]},"metadata":{},"sourceType":"module"}