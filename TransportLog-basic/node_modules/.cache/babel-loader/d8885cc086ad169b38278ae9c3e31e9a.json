{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport gridCore from \"./ui.data_grid.core\";\nimport { focusModule } from \"../grid_core/ui.grid_core.focus\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { equalByValue } from \"../../core/utils/common\";\nimport { createGroupFilter } from \"./ui.data_grid.utils\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { extend } from \"../../core/utils/extend\";\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\n  extenders: {\n    controllers: {\n      data: {\n        changeRowExpand: function (path, isRowClick) {\n          if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\n            var keyboardNavigation = this.getController(\"keyboardNavigation\");\n\n            if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\n              this.option(\"focusedRowKey\", path);\n            }\n          }\n\n          return this.callBase.apply(this, arguments);\n        },\n        _isFocusedRowInsideGroup: function (path) {\n          var columnsController = this.getController(\"columns\");\n          var focusedRowKey = this.option(\"focusedRowKey\");\n          var rowIndex = this.getRowIndexByKey(focusedRowKey);\n          var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\n          var groups = columnsController.getGroupDataSourceParameters(true);\n\n          if (focusedRow) {\n            for (var i = 0; i < path.length; ++i) {\n              var getter = compileGetter(groups[i] && groups[i].selector);\n\n              if (getter(focusedRow.data) !== path[i]) {\n                return false;\n              }\n            }\n          }\n\n          return true;\n        },\n        _getGroupPath: function (groupItem, groupCount) {\n          var groupPath = [];\n          var items = [groupItem];\n\n          while (items && items[0] && groupCount) {\n            var item = items[0];\n\n            if (void 0 !== item.key) {\n              groupPath.push(item.key);\n            }\n\n            items = item.items;\n            groupCount--;\n          }\n\n          return groupPath;\n        },\n        _expandGroupByPath: function (that, groupPath, level) {\n          var d = new Deferred();\n          level++;\n          that.expandRow(groupPath.slice(0, level)).done(function () {\n            if (level === groupPath.length) {\n              d.resolve();\n            } else {\n              that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject);\n            }\n          }).fail(d.reject);\n          return d.promise();\n        },\n        _calculateGlobalRowIndexByGroupedData: function (key) {\n          var that = this;\n          var dataSource = that._dataSource;\n\n          var filter = that._generateFilterByKey(key);\n\n          var deferred = new Deferred();\n          var isGroupKey = Array.isArray(key);\n          var group = dataSource.group();\n\n          if (isGroupKey) {\n            return deferred.resolve(-1).promise();\n          }\n\n          if (!dataSource._grouping._updatePagingOptions) {\n            that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\n\n            return deferred;\n          }\n\n          dataSource.load({\n            filter: that._concatWithCombinedFilter(filter),\n            group: group\n          }).done(function (data) {\n            if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\n              return deferred.resolve(-1).promise();\n            }\n\n            var groupPath = that._getGroupPath(data[0], group.length);\n\n            that._expandGroupByPath(that, groupPath, 0).done(function () {\n              that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group);\n            }).fail(deferred.reject);\n          }).fail(deferred.reject);\n          return deferred.promise();\n        },\n        _calculateExpandedRowGlobalIndex: function (deferred, key, groupPath, group) {\n          var groupFilter = createGroupFilter(groupPath, {\n            group: group\n          });\n          var dataSource = this._dataSource;\n          var scrollingMode = this.option(\"scrolling.mode\");\n          var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n          var pageSize = dataSource.pageSize();\n          var groupOffset;\n\n          dataSource._grouping._updatePagingOptions({\n            skip: 0,\n            take: MAX_SAFE_INTEGER\n          }, function (groupInfo, totalOffset) {\n            if (equalByValue(groupInfo.path, groupPath)) {\n              groupOffset = totalOffset;\n            }\n          });\n\n          this._calculateGlobalRowIndexByFlatData(key, groupFilter).done(function (dataOffset) {\n            var count;\n            var groupContinuationCount;\n\n            if (dataOffset < 0) {\n              deferred.resolve(-1);\n              return;\n            }\n\n            var currentPageOffset = groupOffset % pageSize || pageSize;\n            count = currentPageOffset + dataOffset - groupPath.length;\n\n            if (isVirtualScrolling) {\n              groupContinuationCount = 0;\n            } else {\n              groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length;\n            }\n\n            count = groupOffset + dataOffset + groupContinuationCount;\n            deferred.resolve(count);\n          }).fail(deferred.reject);\n        }\n      }\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js"],"names":["gridCore","focusModule","Deferred","isDefined","equalByValue","createGroupFilter","compileGetter","extend","MAX_SAFE_INTEGER","Number","registerModule","extenders","controllers","data","changeRowExpand","path","isRowClick","option","Array","isArray","isRowExpanded","keyboardNavigation","getController","isKeyboardEnabled","_isFocusedRowInsideGroup","callBase","apply","arguments","columnsController","focusedRowKey","rowIndex","getRowIndexByKey","focusedRow","getVisibleRows","groups","getGroupDataSourceParameters","i","length","getter","selector","_getGroupPath","groupItem","groupCount","groupPath","items","item","key","push","_expandGroupByPath","that","level","d","expandRow","slice","done","resolve","fail","reject","promise","_calculateGlobalRowIndexByGroupedData","dataSource","_dataSource","filter","_generateFilterByKey","deferred","isGroupKey","group","_grouping","_updatePagingOptions","_calculateGlobalRowIndexByFlatData","load","_concatWithCombinedFilter","_calculateExpandedRowGlobalIndex","groupFilter","scrollingMode","isVirtualScrolling","pageSize","groupOffset","skip","take","groupInfo","totalOffset","dataOffset","count","groupContinuationCount","currentPageOffset","Math","floor"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(groupItem, groupCount) {\r\n                    var groupPath = [];\r\n                    var items = [groupItem];\r\n                    while (items && items[0] && groupCount) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items;\r\n                        groupCount--\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0], group.length);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}