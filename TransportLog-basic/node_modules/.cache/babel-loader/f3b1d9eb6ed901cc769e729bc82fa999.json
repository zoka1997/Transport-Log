{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/drop_down_editor/ui.drop_down_button.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport messageLocalization from \"../../localization/message\";\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\nimport Button from \"../button\";\nvar DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\";\nvar DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\";\nvar BUTTON_MESSAGE = \"dxDropDownEditor-selectLabel\";\nexport default class DropDownButton extends TextEditorButton {\n  constructor(name, editor, options) {\n    super(name, editor, options);\n    this.currentTemplate = null;\n  }\n\n  _attachEvents(instance) {\n    var {\n      editor: editor\n    } = this;\n    instance.option(\"onClick\", e => {\n      !editor.option(\"openOnFieldClick\") && editor._openHandler(e);\n    });\n    eventsEngine.on(instance.$element(), \"mousedown\", e => {\n      if (editor.$element().is(\".dx-state-focused\")) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  _create() {\n    var {\n      editor: editor\n    } = this;\n    var $element = $(\"<div>\");\n\n    var options = this._getOptions();\n\n    this._addToContainer($element);\n\n    var instance = editor._createComponent($element, Button, extend({}, options, {\n      elementAttr: {\n        \"aria-label\": messageLocalization.format(BUTTON_MESSAGE)\n      }\n    }));\n\n    this._legacyRender(editor.$element(), $element, options.visible);\n\n    return {\n      $element: $element,\n      instance: instance\n    };\n  }\n\n  _getOptions() {\n    var {\n      editor: editor\n    } = this;\n\n    var visible = this._isVisible();\n\n    var isReadOnly = editor.option(\"readOnly\");\n    var options = {\n      focusStateEnabled: false,\n      hoverStateEnabled: false,\n      activeStateEnabled: false,\n      useInkRipple: false,\n      disabled: isReadOnly,\n      visible: visible\n    };\n\n    this._addTemplate(options);\n\n    return options;\n  }\n\n  _isVisible() {\n    var {\n      editor: editor\n    } = this;\n    return super._isVisible() && editor.option(\"showDropDownButton\");\n  }\n\n  _legacyRender($editor, $element, isVisible) {\n    $editor.toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, isVisible);\n\n    if ($element) {\n      $element.removeClass(\"dx-button\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS);\n    }\n  }\n\n  _isSameTemplate() {\n    return this.editor.option(\"dropDownButtonTemplate\") === this.currentTemplate;\n  }\n\n  _addTemplate(options) {\n    if (!this._isSameTemplate()) {\n      options.template = this.editor._getTemplateByOption(\"dropDownButtonTemplate\");\n      this.currentTemplate = this.editor.option(\"dropDownButtonTemplate\");\n    }\n  }\n\n  update() {\n    var shouldUpdate = super.update();\n\n    if (shouldUpdate) {\n      var {\n        editor: editor,\n        instance: instance\n      } = this;\n      var $editor = editor.$element();\n\n      var options = this._getOptions();\n\n      null === instance || void 0 === instance ? void 0 : instance.option(options);\n\n      this._legacyRender($editor, null === instance || void 0 === instance ? void 0 : instance.$element(), options.visible);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/drop_down_editor/ui.drop_down_button.js"],"names":["$","extend","eventsEngine","messageLocalization","TextEditorButton","Button","DROP_DOWN_EDITOR_BUTTON_CLASS","DROP_DOWN_EDITOR_BUTTON_VISIBLE","BUTTON_MESSAGE","DropDownButton","constructor","name","editor","options","currentTemplate","_attachEvents","instance","option","e","_openHandler","on","$element","is","preventDefault","_create","_getOptions","_addToContainer","_createComponent","elementAttr","format","_legacyRender","visible","_isVisible","isReadOnly","focusStateEnabled","hoverStateEnabled","activeStateEnabled","useInkRipple","disabled","_addTemplate","$editor","isVisible","toggleClass","removeClass","addClass","_isSameTemplate","template","_getTemplateByOption","update","shouldUpdate"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/drop_down_editor/ui.drop_down_button.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport TextEditorButton from \"../text_box/texteditor_button_collection/button\";\r\nimport Button from \"../button\";\r\nvar DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\";\r\nvar DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\";\r\nvar BUTTON_MESSAGE = \"dxDropDownEditor-selectLabel\";\r\nexport default class DropDownButton extends TextEditorButton {\r\n    constructor(name, editor, options) {\r\n        super(name, editor, options);\r\n        this.currentTemplate = null\r\n    }\r\n    _attachEvents(instance) {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        instance.option(\"onClick\", e => {\r\n            !editor.option(\"openOnFieldClick\") && editor._openHandler(e)\r\n        });\r\n        eventsEngine.on(instance.$element(), \"mousedown\", e => {\r\n            if (editor.$element().is(\".dx-state-focused\")) {\r\n                e.preventDefault()\r\n            }\r\n        })\r\n    }\r\n    _create() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var $element = $(\"<div>\");\r\n        var options = this._getOptions();\r\n        this._addToContainer($element);\r\n        var instance = editor._createComponent($element, Button, extend({}, options, {\r\n            elementAttr: {\r\n                \"aria-label\": messageLocalization.format(BUTTON_MESSAGE)\r\n            }\r\n        }));\r\n        this._legacyRender(editor.$element(), $element, options.visible);\r\n        return {\r\n            $element: $element,\r\n            instance: instance\r\n        }\r\n    }\r\n    _getOptions() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        var visible = this._isVisible();\r\n        var isReadOnly = editor.option(\"readOnly\");\r\n        var options = {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            useInkRipple: false,\r\n            disabled: isReadOnly,\r\n            visible: visible\r\n        };\r\n        this._addTemplate(options);\r\n        return options\r\n    }\r\n    _isVisible() {\r\n        var {\r\n            editor: editor\r\n        } = this;\r\n        return super._isVisible() && editor.option(\"showDropDownButton\")\r\n    }\r\n    _legacyRender($editor, $element, isVisible) {\r\n        $editor.toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, isVisible);\r\n        if ($element) {\r\n            $element.removeClass(\"dx-button\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS)\r\n        }\r\n    }\r\n    _isSameTemplate() {\r\n        return this.editor.option(\"dropDownButtonTemplate\") === this.currentTemplate\r\n    }\r\n    _addTemplate(options) {\r\n        if (!this._isSameTemplate()) {\r\n            options.template = this.editor._getTemplateByOption(\"dropDownButtonTemplate\");\r\n            this.currentTemplate = this.editor.option(\"dropDownButtonTemplate\")\r\n        }\r\n    }\r\n    update() {\r\n        var shouldUpdate = super.update();\r\n        if (shouldUpdate) {\r\n            var {\r\n                editor: editor,\r\n                instance: instance\r\n            } = this;\r\n            var $editor = editor.$element();\r\n            var options = this._getOptions();\r\n            null === instance || void 0 === instance ? void 0 : instance.option(options);\r\n            this._legacyRender($editor, null === instance || void 0 === instance ? void 0 : instance.$element(), options.visible)\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}