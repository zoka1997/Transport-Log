{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"dateCellTemplate\", \"dateHeaderData\", \"dateHeaderTemplate\", \"elementRef\", \"groupByDate\", \"groupOrientation\", \"groupPanelData\", \"groups\", \"height\", \"isRenderDateHeader\", \"resourceCellTemplate\", \"timeCellTemplate\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/runtime/inferno\";\nimport { isHorizontalGroupingApplied } from \"../../utils\";\nimport { GroupPanel, GroupPanelProps } from \"../group_panel/group_panel\";\nimport { DateHeaderLayout } from \"./date_header/layout\";\nexport var viewFunction = _ref => {\n  var {\n    isHorizontalGrouping: isHorizontalGrouping,\n    props: {\n      dateCellTemplate: dateCellTemplate,\n      dateHeaderData: dateHeaderData,\n      dateHeaderTemplate: DateHeader,\n      groupByDate: groupByDate,\n      groupOrientation: groupOrientation,\n      groupPanelData: groupPanelData,\n      groups: groups,\n      isRenderDateHeader: isRenderDateHeader,\n      resourceCellTemplate: resourceCellTemplate,\n      timeCellTemplate: timeCellTemplate\n    }\n  } = _ref;\n  return createVNode(1, \"thead\", null, [isHorizontalGrouping && !groupByDate && createComponentVNode(2, GroupPanel, {\n    groupPanelData: groupPanelData,\n    groups: groups,\n    groupByDate: groupByDate,\n    groupOrientation: groupOrientation,\n    resourceCellTemplate: resourceCellTemplate\n  }), isRenderDateHeader && DateHeader({\n    groupByDate: groupByDate,\n    dateHeaderData: dateHeaderData,\n    groupOrientation: groupOrientation,\n    groups: groups,\n    dateCellTemplate: dateCellTemplate,\n    timeCellTemplate: timeCellTemplate\n  }), groupByDate && createComponentVNode(2, GroupPanel, {\n    groupPanelData: groupPanelData,\n    groups: groups,\n    groupByDate: groupByDate,\n    groupOrientation: groupOrientation,\n    resourceCellTemplate: resourceCellTemplate\n  })], 0);\n};\nexport var HeaderPanelLayoutProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(GroupPanelProps), Object.getOwnPropertyDescriptors({\n  isRenderDateHeader: true,\n  dateHeaderTemplate: DateHeaderLayout\n})));\nimport { createReRenderEffect } from \"@devextreme/runtime/inferno\";\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class HeaderPanelLayout extends InfernoWrapperComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  createEffects() {\n    return [createReRenderEffect()];\n  }\n\n  get isHorizontalGrouping() {\n    var {\n      groupOrientation: groupOrientation,\n      groups: groups\n    } = this.props;\n    return isHorizontalGroupingApplied(groups, groupOrientation);\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        dateCellTemplate: getTemplate(props.dateCellTemplate),\n        timeCellTemplate: getTemplate(props.timeCellTemplate),\n        dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),\n        resourceCellTemplate: getTemplate(props.resourceCellTemplate)\n      }),\n      isHorizontalGrouping: this.isHorizontalGrouping,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nHeaderPanelLayout.defaultProps = HeaderPanelLayoutProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createVNode","createComponentVNode","normalizeProps","InfernoWrapperComponent","isHorizontalGroupingApplied","GroupPanel","GroupPanelProps","DateHeaderLayout","viewFunction","_ref","isHorizontalGrouping","props","dateCellTemplate","dateHeaderData","dateHeaderTemplate","DateHeader","groupByDate","groupOrientation","groupPanelData","groups","isRenderDateHeader","resourceCellTemplate","timeCellTemplate","HeaderPanelLayoutProps","Object","create","prototype","getOwnPropertyDescriptors","createReRenderEffect","getTemplate","TemplateProp","defaultProps","HeaderPanelLayout","constructor","state","createEffects","restAttributes","_this$props","restProps","render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/header_panel/layout.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"dateCellTemplate\", \"dateHeaderData\", \"dateHeaderTemplate\", \"elementRef\", \"groupByDate\", \"groupOrientation\", \"groupPanelData\", \"groups\", \"height\", \"isRenderDateHeader\", \"resourceCellTemplate\", \"timeCellTemplate\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    isHorizontalGroupingApplied\r\n} from \"../../utils\";\r\nimport {\r\n    GroupPanel,\r\n    GroupPanelProps\r\n} from \"../group_panel/group_panel\";\r\nimport {\r\n    DateHeaderLayout\r\n} from \"./date_header/layout\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        isHorizontalGrouping: isHorizontalGrouping,\r\n        props: {\r\n            dateCellTemplate: dateCellTemplate,\r\n            dateHeaderData: dateHeaderData,\r\n            dateHeaderTemplate: DateHeader,\r\n            groupByDate: groupByDate,\r\n            groupOrientation: groupOrientation,\r\n            groupPanelData: groupPanelData,\r\n            groups: groups,\r\n            isRenderDateHeader: isRenderDateHeader,\r\n            resourceCellTemplate: resourceCellTemplate,\r\n            timeCellTemplate: timeCellTemplate\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"thead\", null, [isHorizontalGrouping && !groupByDate && createComponentVNode(2, GroupPanel, {\r\n        groupPanelData: groupPanelData,\r\n        groups: groups,\r\n        groupByDate: groupByDate,\r\n        groupOrientation: groupOrientation,\r\n        resourceCellTemplate: resourceCellTemplate\r\n    }), isRenderDateHeader && DateHeader({\r\n        groupByDate: groupByDate,\r\n        dateHeaderData: dateHeaderData,\r\n        groupOrientation: groupOrientation,\r\n        groups: groups,\r\n        dateCellTemplate: dateCellTemplate,\r\n        timeCellTemplate: timeCellTemplate\r\n    }), groupByDate && createComponentVNode(2, GroupPanel, {\r\n        groupPanelData: groupPanelData,\r\n        groups: groups,\r\n        groupByDate: groupByDate,\r\n        groupOrientation: groupOrientation,\r\n        resourceCellTemplate: resourceCellTemplate\r\n    })], 0)\r\n};\r\nexport var HeaderPanelLayoutProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(GroupPanelProps), Object.getOwnPropertyDescriptors({\r\n    isRenderDateHeader: true,\r\n    dateHeaderTemplate: DateHeaderLayout\r\n})));\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class HeaderPanelLayout extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    get isHorizontalGrouping() {\r\n        var {\r\n            groupOrientation: groupOrientation,\r\n            groups: groups\r\n        } = this.props;\r\n        return isHorizontalGroupingApplied(groups, groupOrientation)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                dateCellTemplate: getTemplate(props.dateCellTemplate),\r\n                timeCellTemplate: getTemplate(props.timeCellTemplate),\r\n                dateHeaderTemplate: getTemplate(props.dateHeaderTemplate),\r\n                resourceCellTemplate: getTemplate(props.resourceCellTemplate)\r\n            }),\r\n            isHorizontalGrouping: this.isHorizontalGrouping,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nHeaderPanelLayout.defaultProps = HeaderPanelLayoutProps;\r\n"]},"metadata":{},"sourceType":"module"}