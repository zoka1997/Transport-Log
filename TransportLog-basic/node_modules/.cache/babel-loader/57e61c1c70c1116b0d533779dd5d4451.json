{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoran\\\\source\\\\repos\\\\TransportApp\\\\TransportLog-basic\\\\src\\\\pages\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Scheduler, { Resource, View } from 'devextreme-react/scheduler';\nimport { data, priorityData, typeData } from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentDate = new Date(2021, 3, 27);\nconst dayOfWeekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst typeGroups = ['typeId'];\nconst priorityGroups = ['priorityId'];\n\nconst Home = () => {\n  _s();\n\n  const {\n    data\n  } = useData();\n\n  /*#__PURE__*/\n  _jsxDEV(Scheduler, {\n    timeZone: \"America/Los_Angeles\",\n    dataSource: data,\n    defaultCurrentView: \"workWeek\",\n    showAllDayPanel: false,\n    defaultCurrentDate: currentDate,\n    height: 600,\n    startDayHour: 7,\n    endDayHour: 23,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      type: \"day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      type: \"week\",\n      groups: typeGroups,\n      dateCellRender: renderDateCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      type: \"workWeek\",\n      groups: priorityGroups,\n      startDayHour: 9,\n      endDayHour: 18,\n      dateCellRender: renderDateCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(View, {\n      type: \"month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      dataSource: priorityData,\n      fieldExpr: \"priorityId\",\n      label: \"Priority\",\n      allowMultiple: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Resource, {\n      dataSource: typeData,\n      fieldExpr: \"typeId\",\n      label: \"Type\",\n      allowMultiple: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 4\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: dayOfWeekNames[cellData.date.getDay()]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number\",\n      children: cellData.date.getDate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"OxX462xNUAoDHx8Ix0AZVAHxlKM=\", true);\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/src/pages/Home/Home.js"],"names":["React","Scheduler","Resource","View","data","priorityData","typeData","currentDate","Date","dayOfWeekNames","typeGroups","priorityGroups","Home","useData","renderDateCell","cellData","date","getDay","getDate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,QAApB,EAA8BC,IAA9B,QAA0C,4BAA1C;AAEA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,WAA7C;;AAEA,MAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAApB;AACA,MAAMC,cAAc,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAAvB;AACA,MAAMC,UAAU,GAAG,CAAC,QAAD,CAAnB;AACA,MAAMC,cAAc,GAAG,CAAC,YAAD,CAAvB;;AAEC,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM;AAACR,IAAAA;AAAD,MAASS,OAAO,EAAtB;;AAEA;AAAA,UAAC,SAAD;AACA,IAAA,QAAQ,EAAC,qBADT;AAEA,IAAA,UAAU,EAAET,IAFZ;AAGA,IAAA,kBAAkB,EAAC,UAHnB;AAIA,IAAA,eAAe,EAAE,KAJjB;AAKA,IAAA,kBAAkB,EAAEG,WALpB;AAMA,IAAA,MAAM,EAAE,GANR;AAOA,IAAA,YAAY,EAAE,CAPd;AAQA,IAAA,UAAU,EAAE,EARZ;AAAA,4BAUA,QAAC,IAAD;AACE,MAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,YAVA,eAaA,QAAC,IAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAEG,UAFV;AAGE,MAAA,cAAc,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA,YAbA,eAkBA,QAAC,IAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,MAAM,EAAEH,cAFV;AAGE,MAAA,YAAY,EAAE,CAHhB;AAIE,MAAA,UAAU,EAAE,EAJd;AAKE,MAAA,cAAc,EAAEG;AALlB;AAAA;AAAA;AAAA;AAAA,YAlBA,eAyBA,QAAC,IAAD;AACE,MAAA,IAAI,EAAC;AADP;AAAA;AAAA;AAAA;AAAA,YAzBA,eA4BA,QAAC,QAAD;AACE,MAAA,UAAU,EAAET,YADd;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,aAAa,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,YA5BA,eAkCA,QAAC,QAAD;AACE,MAAA,UAAU,EAAEC,QADd;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,aAAa,EAAE;AAJjB;AAAA;AAAA;AAAA;AAAA,YAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0CD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBG,cAAc,CAACM,QAAQ,CAACC,IAAT,CAAcC,MAAd,EAAD;AAArC;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAAyBF,QAAQ,CAACC,IAAT,CAAcE,OAAd;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApDA;;GAAMN,I;;KAAAA,I;AAqDP,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport Scheduler, { Resource, View } from 'devextreme-react/scheduler';\r\n\r\nimport { data, priorityData, typeData } from './data.js';\r\n\r\nconst currentDate = new Date(2021, 3, 27);\r\nconst dayOfWeekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst typeGroups = ['typeId'];\r\nconst priorityGroups = ['priorityId'];\r\n\r\n const Home = () => {\r\n\r\n   const {data} = useData();\r\n\r\n   <Scheduler\r\n   timeZone=\"America/Los_Angeles\"\r\n   dataSource={data}\r\n   defaultCurrentView=\"workWeek\"\r\n   showAllDayPanel={false}\r\n   defaultCurrentDate={currentDate}\r\n   height={600}\r\n   startDayHour={7}\r\n   endDayHour={23}\r\n >\r\n   <View\r\n     type=\"day\"\r\n   />\r\n   <View\r\n     type=\"week\"\r\n     groups={typeGroups}\r\n     dateCellRender={renderDateCell}\r\n   />\r\n   <View\r\n     type=\"workWeek\"\r\n     groups={priorityGroups}\r\n     startDayHour={9}\r\n     endDayHour={18}\r\n     dateCellRender={renderDateCell}\r\n   />\r\n   <View\r\n     type=\"month\"\r\n   />\r\n   <Resource\r\n     dataSource={priorityData}\r\n     fieldExpr=\"priorityId\"\r\n     label=\"Priority\"\r\n     allowMultiple={false}\r\n   />\r\n   <Resource\r\n     dataSource={typeData}\r\n     fieldExpr=\"typeId\"\r\n     label=\"Type\"\r\n     allowMultiple={false}\r\n   />\r\n </Scheduler>\r\n      \r\n  return(\r\n    <React.Fragment>\r\n    <div className=\"name\">{dayOfWeekNames[cellData.date.getDay()]}</div>\r\n    <div className=\"number\">{cellData.date.getDate()}</div>\r\n  </React.Fragment>\r\n  );  \r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}