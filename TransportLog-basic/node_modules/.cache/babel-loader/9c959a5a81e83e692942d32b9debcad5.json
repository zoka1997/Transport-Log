{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"dataCellTemplate\", \"isVerticalGroupOrientation\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"viewData\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"../../row\";\nimport { AllDayPanelCell as Cell } from \"./cell\";\nimport { combineClasses } from \"../../../../../../utils/combine_classes\";\nexport var viewFunction = viewModel => createComponentVNode(2, Row, {\n  leftVirtualCellWidth: viewModel.props.leftVirtualCellWidth,\n  rightVirtualCellWidth: viewModel.props.rightVirtualCellWidth,\n  leftVirtualCellCount: viewModel.props.leftVirtualCellCount,\n  rightVirtualCellCount: viewModel.props.rightVirtualCellCount,\n  className: viewModel.classes,\n  children: viewModel.props.viewData.map(_ref => {\n    var {\n      endDate: endDate,\n      groupIndex: cellGroupIndex,\n      groups: groups,\n      index: cellIndex,\n      isFirstGroupCell: isFirstGroupCell,\n      isFocused: isFocused,\n      isLastGroupCell: isLastGroupCell,\n      isSelected: isSelected,\n      key: key,\n      startDate: startDate\n    } = _ref;\n    return createComponentVNode(2, Cell, {\n      isFirstGroupCell: !viewModel.props.isVerticalGroupOrientation && isFirstGroupCell,\n      isLastGroupCell: !viewModel.props.isVerticalGroupOrientation && isLastGroupCell,\n      startDate: startDate,\n      endDate: endDate,\n      groups: groups,\n      groupIndex: cellGroupIndex,\n      index: cellIndex,\n      dataCellTemplate: viewModel.props.dataCellTemplate,\n      isSelected: isSelected,\n      isFocused: isFocused\n    }, key);\n  })\n});\nexport var AllDayPanelTableBodyProps = {\n  viewData: Object.freeze([]),\n  isVerticalGroupOrientation: false,\n  className: \"\",\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0\n};\n\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\n\nexport class AllDayPanelTableBody extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get classes() {\n    var {\n      className: className\n    } = this.props;\n    return combineClasses({\n      \"dx-scheduler-all-day-table-row\": true,\n      [className]: !!className\n    });\n  }\n\n  get restAttributes() {\n    var _this$props = this.props,\n        restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return restProps;\n  }\n\n  render() {\n    var props = this.props;\n    return viewFunction({\n      props: _extends({}, props, {\n        dataCellTemplate: getTemplate(props.dataCellTemplate)\n      }),\n      classes: this.classes,\n      restAttributes: this.restAttributes\n    });\n  }\n\n}\nAllDayPanelTableBody.defaultProps = AllDayPanelTableBodyProps;","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createComponentVNode","normalizeProps","BaseInfernoComponent","Row","AllDayPanelCell","Cell","combineClasses","viewFunction","viewModel","leftVirtualCellWidth","props","rightVirtualCellWidth","leftVirtualCellCount","rightVirtualCellCount","className","classes","children","viewData","map","_ref","endDate","groupIndex","cellGroupIndex","groups","index","cellIndex","isFirstGroupCell","isFocused","isLastGroupCell","isSelected","key","startDate","isVerticalGroupOrientation","dataCellTemplate","AllDayPanelTableBodyProps","Object","freeze","getTemplate","TemplateProp","defaultProps","AllDayPanelTableBody","constructor","state","restAttributes","_this$props","restProps","render"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table_body.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"dataCellTemplate\", \"isVerticalGroupOrientation\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"viewData\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Row\r\n} from \"../../row\";\r\nimport {\r\n    AllDayPanelCell as Cell\r\n} from \"./cell\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../../../../utils/combine_classes\";\r\nexport var viewFunction = viewModel => createComponentVNode(2, Row, {\r\n    leftVirtualCellWidth: viewModel.props.leftVirtualCellWidth,\r\n    rightVirtualCellWidth: viewModel.props.rightVirtualCellWidth,\r\n    leftVirtualCellCount: viewModel.props.leftVirtualCellCount,\r\n    rightVirtualCellCount: viewModel.props.rightVirtualCellCount,\r\n    className: viewModel.classes,\r\n    children: viewModel.props.viewData.map(_ref => {\r\n        var {\r\n            endDate: endDate,\r\n            groupIndex: cellGroupIndex,\r\n            groups: groups,\r\n            index: cellIndex,\r\n            isFirstGroupCell: isFirstGroupCell,\r\n            isFocused: isFocused,\r\n            isLastGroupCell: isLastGroupCell,\r\n            isSelected: isSelected,\r\n            key: key,\r\n            startDate: startDate\r\n        } = _ref;\r\n        return createComponentVNode(2, Cell, {\r\n            isFirstGroupCell: !viewModel.props.isVerticalGroupOrientation && isFirstGroupCell,\r\n            isLastGroupCell: !viewModel.props.isVerticalGroupOrientation && isLastGroupCell,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            groups: groups,\r\n            groupIndex: cellGroupIndex,\r\n            index: cellIndex,\r\n            dataCellTemplate: viewModel.props.dataCellTemplate,\r\n            isSelected: isSelected,\r\n            isFocused: isFocused\r\n        }, key)\r\n    })\r\n});\r\nexport var AllDayPanelTableBodyProps = {\r\n    viewData: Object.freeze([]),\r\n    isVerticalGroupOrientation: false,\r\n    className: \"\",\r\n    leftVirtualCellWidth: 0,\r\n    rightVirtualCellWidth: 0\r\n};\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class AllDayPanelTableBody extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get classes() {\r\n        var {\r\n            className: className\r\n        } = this.props;\r\n        return combineClasses({\r\n            \"dx-scheduler-all-day-table-row\": true,\r\n            [className]: !!className\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                dataCellTemplate: getTemplate(props.dataCellTemplate)\r\n            }),\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nAllDayPanelTableBody.defaultProps = AllDayPanelTableBodyProps;\r\n"]},"metadata":{},"sourceType":"module"}