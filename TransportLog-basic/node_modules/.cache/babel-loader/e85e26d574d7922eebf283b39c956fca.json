{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/popup.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { Deferred, when } from \"../../../core/utils/deferred\";\nimport { triggerResizeEvent } from \"../../../events/visibility_change\";\nimport Popup from \"../../popup\";\nimport { hide as hideLoading, show as showLoading } from \"../loading\";\nimport { createAppointmentAdapter } from \"../appointmentAdapter\";\nimport { getNormalizedResources } from \"../resources/utils\";\nimport { isPopupFullScreenNeeded, getMaxWidth, getPopupToolbarItems } from \"../../../renovation/ui/scheduler/appointment_edit_form/popup_config\";\nvar toMs = dateUtils.dateToMilliseconds;\nvar APPOINTMENT_POPUP_CLASS = \"dx-scheduler-appointment-popup\";\nvar DAY_IN_MS = toMs(\"day\");\nvar POPUP_CONFIG = {\n  height: \"auto\",\n  maxHeight: \"100%\",\n  showCloseButton: false,\n  showTitle: false,\n  defaultOptionsRules: [{\n    device: () => devices.current().android,\n    options: {\n      showTitle: false\n    }\n  }]\n};\nexport var ACTION_TO_APPOINTMENT = {\n  CREATE: 0,\n  UPDATE: 1,\n  EXCLUDE_FROM_SERIES: 2\n};\nexport class AppointmentPopup {\n  constructor(scheduler, form) {\n    this.scheduler = scheduler;\n    this.form = form;\n    this.popup = null;\n    this.state = {\n      action: null,\n      lastEditData: null,\n      saveChangesLocker: false,\n      appointment: {\n        data: null\n      }\n    };\n  }\n\n  get visible() {\n    return this.popup ? this.popup.option(\"visible\") : false;\n  }\n\n  show(appointment, config) {\n    this.state.appointment.data = appointment;\n    this.state.action = config.action;\n    this.state.excludeInfo = config.excludeInfo;\n\n    if (!this.popup) {\n      var popupConfig = this._createPopupConfig();\n\n      this.popup = this._createPopup(popupConfig);\n    }\n\n    this.popup.option(\"toolbarItems\", getPopupToolbarItems(config.isToolbarVisible, e => this._doneButtonClickHandler(e)));\n    this.popup.show();\n  }\n\n  hide() {\n    this.popup.hide();\n  }\n\n  dispose() {\n    var _this$popup;\n\n    null === (_this$popup = this.popup) || void 0 === _this$popup ? void 0 : _this$popup.$element().remove();\n  }\n\n  _createPopup(options) {\n    var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());\n    return this.scheduler.createComponent(popupElement, Popup, options);\n  }\n\n  _createPopupConfig() {\n    return _extends({}, POPUP_CONFIG, {\n      onHiding: () => this.scheduler.focus(),\n      contentTemplate: () => this._createPopupContent(),\n      onShowing: e => this._onShowing(e),\n      copyRootClassesToWrapper: true,\n      _ignoreCopyRootClassesToWrapperDeprecation: true\n    });\n  }\n\n  _onShowing(e) {\n    this._updateForm();\n\n    var arg = {\n      form: this.form.dxForm,\n      popup: this.popup,\n      appointmentData: this.state.appointment.data,\n      cancel: false\n    };\n    this.scheduler.getAppointmentFormOpening()(arg);\n    this.scheduler.processActionResult(arg, canceled => {\n      if (canceled) {\n        e.cancel = true;\n      } else {\n        this.updatePopupFullScreenMode();\n      }\n    });\n  }\n\n  _createPopupContent() {\n    this._createForm();\n\n    return this.form.dxForm.$element();\n  }\n\n  _createFormData(rawAppointment) {\n    var appointment = this._createAppointmentAdapter(rawAppointment);\n\n    var dataAccessors = this.scheduler.getDataAccessors();\n    var resources = this.scheduler.getResources();\n    var normalizedResources = getNormalizedResources(rawAppointment, dataAccessors, resources);\n    return _extends({}, rawAppointment, normalizedResources, {\n      repeat: !!appointment.recurrenceRule\n    });\n  }\n\n  _createForm() {\n    var rawAppointment = this.state.appointment.data;\n\n    var formData = this._createFormData(rawAppointment);\n\n    this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData);\n  }\n\n  _isReadOnly(rawAppointment) {\n    var appointment = this._createAppointmentAdapter(rawAppointment);\n\n    if (rawAppointment && appointment.disabled) {\n      return true;\n    }\n\n    if (this.state.action === ACTION_TO_APPOINTMENT.CREATE) {\n      return false;\n    }\n\n    return !this.scheduler.getEditingConfig().allowUpdating;\n  }\n\n  _createAppointmentAdapter(rawAppointment) {\n    return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator());\n  }\n\n  _updateForm() {\n    var {\n      data: data\n    } = this.state.appointment;\n\n    var appointment = this._createAppointmentAdapter(this._createFormData(data));\n\n    if (appointment.startDate) {\n      appointment.startDate = appointment.calculateStartDate(\"toAppointment\");\n    }\n\n    if (appointment.endDate) {\n      appointment.endDate = appointment.calculateEndDate(\"toAppointment\");\n    }\n\n    var formData = appointment.source();\n    this.form.readOnly = this._isReadOnly(formData);\n    this.form.updateFormData(formData);\n  }\n\n  triggerResize() {\n    if (this.popup) {\n      triggerResizeEvent(this.popup.$element());\n    }\n  }\n\n  changeSize(isRecurrence) {\n    if (this.popup) {\n      var isFullScreen = isPopupFullScreenNeeded();\n      var maxWidth = isFullScreen ? \"100%\" : getMaxWidth(isRecurrence);\n      this.popup.option(\"fullScreen\", isFullScreen);\n      this.popup.option(\"maxWidth\", maxWidth);\n    }\n  }\n\n  updatePopupFullScreenMode() {\n    if (this.form.dxForm) {\n      var formData = this.form.formData;\n      var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];\n\n      if (this.visible) {\n        this.changeSize(isRecurrence);\n      }\n    }\n  }\n\n  saveChangesAsync(isShowLoadPanel) {\n    var deferred = new Deferred();\n    var validation = this.form.dxForm.validate();\n    isShowLoadPanel && this._showLoadPanel();\n    when(validation && validation.complete || validation).done(validation => {\n      if (validation && !validation.isValid) {\n        hideLoading();\n        deferred.resolve(false);\n        return;\n      }\n\n      var adapter = this._createAppointmentAdapter(this.form.formData);\n\n      var clonedAdapter = adapter.clone({\n        pathTimeZone: \"fromAppointment\"\n      });\n\n      this._addMissingDSTTime(adapter, clonedAdapter);\n\n      var appointment = clonedAdapter.source();\n      delete appointment.repeat;\n\n      switch (this.state.action) {\n        case ACTION_TO_APPOINTMENT.CREATE:\n          this.scheduler.addAppointment(appointment).done(deferred.resolve);\n          break;\n\n        case ACTION_TO_APPOINTMENT.UPDATE:\n          this.scheduler.updateAppointment(this.state.appointment.data, appointment).done(deferred.resolve);\n          break;\n\n        case ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:\n          this.scheduler.updateAppointment(this.state.excludeInfo.sourceAppointment, this.state.excludeInfo.updatedAppointment);\n          this.scheduler.addAppointment(appointment).done(deferred.resolve);\n      }\n\n      deferred.done(() => {\n        hideLoading();\n        this.state.lastEditData = appointment;\n      });\n    });\n    return deferred.promise();\n  }\n\n  _doneButtonClickHandler(e) {\n    e.cancel = true;\n    this.saveEditDataAsync();\n  }\n\n  saveEditDataAsync() {\n    var deferred = new Deferred();\n\n    if (this._tryLockSaveChanges()) {\n      when(this.saveChangesAsync(true)).done(() => {\n        if (this.state.lastEditData) {\n          var adapter = this._createAppointmentAdapter(this.state.lastEditData);\n\n          var {\n            startDate: startDate,\n            endDate: endDate,\n            allDay: allDay\n          } = adapter;\n          var startTime = startDate.getTime();\n          var endTime = endDate.getTime();\n          var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\n          var dataAccessors = this.scheduler.getDataAccessors();\n          var resourceList = this.scheduler.getResources();\n          var normalizedResources = getNormalizedResources(this.state.lastEditData, dataAccessors, resourceList);\n          this.scheduler.updateScrollPosition(startDate, normalizedResources, inAllDayRow);\n          this.state.lastEditData = null;\n        }\n\n        this._unlockSaveChanges();\n\n        deferred.resolve();\n      });\n    }\n\n    return deferred.promise();\n  }\n\n  _showLoadPanel() {\n    var container = this.popup.$overlayContent();\n    showLoading({\n      container: container,\n      position: {\n        of: container\n      },\n      copyRootClassesToWrapper: true,\n      _ignoreCopyRootClassesToWrapperDeprecation: true\n    });\n  }\n\n  _tryLockSaveChanges() {\n    if (false === this.state.saveChangesLocker) {\n      this.state.saveChangesLocker = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  _unlockSaveChanges() {\n    this.state.saveChangesLocker = false;\n  }\n\n  _addMissingDSTTime(formAppointmentAdapter, clonedAppointmentAdapter) {\n    var timeZoneCalculator = this.scheduler.getTimeZoneCalculator();\n    clonedAppointmentAdapter.startDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.startDate, clonedAppointmentAdapter.startDate);\n\n    if (clonedAppointmentAdapter.endDate) {\n      clonedAppointmentAdapter.endDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.endDate, clonedAppointmentAdapter.endDate);\n    }\n  }\n\n  _addMissingDSTShiftToDate(timeZoneCalculator, originFormDate, clonedDate) {\n    var _timeZoneCalculator$g, _timeZoneCalculator$g2;\n\n    var originTimezoneShift = null === (_timeZoneCalculator$g = timeZoneCalculator.getOffsets(originFormDate)) || void 0 === _timeZoneCalculator$g ? void 0 : _timeZoneCalculator$g.common;\n    var clonedTimezoneShift = null === (_timeZoneCalculator$g2 = timeZoneCalculator.getOffsets(clonedDate)) || void 0 === _timeZoneCalculator$g2 ? void 0 : _timeZoneCalculator$g2.common;\n    var shiftDifference = originTimezoneShift - clonedTimezoneShift;\n    return shiftDifference ? new Date(clonedDate.getTime() + shiftDifference * toMs(\"hour\")) : clonedDate;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Zoran/source/repos/TransportApp/TransportLog-basic/node_modules/devextreme/esm/ui/scheduler/appointmentPopup/popup.js"],"names":["_extends","devices","$","dateUtils","Deferred","when","triggerResizeEvent","Popup","hide","hideLoading","show","showLoading","createAppointmentAdapter","getNormalizedResources","isPopupFullScreenNeeded","getMaxWidth","getPopupToolbarItems","toMs","dateToMilliseconds","APPOINTMENT_POPUP_CLASS","DAY_IN_MS","POPUP_CONFIG","height","maxHeight","showCloseButton","showTitle","defaultOptionsRules","device","current","android","options","ACTION_TO_APPOINTMENT","CREATE","UPDATE","EXCLUDE_FROM_SERIES","AppointmentPopup","constructor","scheduler","form","popup","state","action","lastEditData","saveChangesLocker","appointment","data","visible","option","config","excludeInfo","popupConfig","_createPopupConfig","_createPopup","isToolbarVisible","e","_doneButtonClickHandler","dispose","_this$popup","$element","remove","popupElement","addClass","appendTo","getElement","createComponent","onHiding","focus","contentTemplate","_createPopupContent","onShowing","_onShowing","copyRootClassesToWrapper","_ignoreCopyRootClassesToWrapperDeprecation","_updateForm","arg","dxForm","appointmentData","cancel","getAppointmentFormOpening","processActionResult","canceled","updatePopupFullScreenMode","_createForm","_createFormData","rawAppointment","_createAppointmentAdapter","dataAccessors","getDataAccessors","resources","getResources","normalizedResources","repeat","recurrenceRule","formData","create","triggerResize","bind","changeSize","_isReadOnly","disabled","getEditingConfig","allowUpdating","getTimeZoneCalculator","startDate","calculateStartDate","endDate","calculateEndDate","source","readOnly","updateFormData","isRecurrence","isFullScreen","maxWidth","expr","recurrenceRuleExpr","saveChangesAsync","isShowLoadPanel","deferred","validation","validate","_showLoadPanel","complete","done","isValid","resolve","adapter","clonedAdapter","clone","pathTimeZone","_addMissingDSTTime","addAppointment","updateAppointment","sourceAppointment","updatedAppointment","promise","saveEditDataAsync","_tryLockSaveChanges","allDay","startTime","getTime","endTime","inAllDayRow","resourceList","updateScrollPosition","_unlockSaveChanges","container","$overlayContent","position","of","formAppointmentAdapter","clonedAppointmentAdapter","timeZoneCalculator","_addMissingDSTShiftToDate","originFormDate","clonedDate","_timeZoneCalculator$g","_timeZoneCalculator$g2","originTimezoneShift","getOffsets","common","clonedTimezoneShift","shiftDifference","Date"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointmentPopup/popup.js)\r\n * Version: 22.1.6\r\n * Build date: Tue Oct 18 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../core/utils/deferred\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../../events/visibility_change\";\r\nimport Popup from \"../../popup\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"../loading\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../appointmentAdapter\";\r\nimport {\r\n    getNormalizedResources\r\n} from \"../resources/utils\";\r\nimport {\r\n    isPopupFullScreenNeeded,\r\n    getMaxWidth,\r\n    getPopupToolbarItems\r\n} from \"../../../renovation/ui/scheduler/appointment_edit_form/popup_config\";\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar APPOINTMENT_POPUP_CLASS = \"dx-scheduler-appointment-popup\";\r\nvar DAY_IN_MS = toMs(\"day\");\r\nvar POPUP_CONFIG = {\r\n    height: \"auto\",\r\n    maxHeight: \"100%\",\r\n    showCloseButton: false,\r\n    showTitle: false,\r\n    defaultOptionsRules: [{\r\n        device: () => devices.current().android,\r\n        options: {\r\n            showTitle: false\r\n        }\r\n    }]\r\n};\r\nexport var ACTION_TO_APPOINTMENT = {\r\n    CREATE: 0,\r\n    UPDATE: 1,\r\n    EXCLUDE_FROM_SERIES: 2\r\n};\r\nexport class AppointmentPopup {\r\n    constructor(scheduler, form) {\r\n        this.scheduler = scheduler;\r\n        this.form = form;\r\n        this.popup = null;\r\n        this.state = {\r\n            action: null,\r\n            lastEditData: null,\r\n            saveChangesLocker: false,\r\n            appointment: {\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n    get visible() {\r\n        return this.popup ? this.popup.option(\"visible\") : false\r\n    }\r\n    show(appointment, config) {\r\n        this.state.appointment.data = appointment;\r\n        this.state.action = config.action;\r\n        this.state.excludeInfo = config.excludeInfo;\r\n        if (!this.popup) {\r\n            var popupConfig = this._createPopupConfig();\r\n            this.popup = this._createPopup(popupConfig)\r\n        }\r\n        this.popup.option(\"toolbarItems\", getPopupToolbarItems(config.isToolbarVisible, e => this._doneButtonClickHandler(e)));\r\n        this.popup.show()\r\n    }\r\n    hide() {\r\n        this.popup.hide()\r\n    }\r\n    dispose() {\r\n        var _this$popup;\r\n        null === (_this$popup = this.popup) || void 0 === _this$popup ? void 0 : _this$popup.$element().remove()\r\n    }\r\n    _createPopup(options) {\r\n        var popupElement = $(\"<div>\").addClass(APPOINTMENT_POPUP_CLASS).appendTo(this.scheduler.getElement());\r\n        return this.scheduler.createComponent(popupElement, Popup, options)\r\n    }\r\n    _createPopupConfig() {\r\n        return _extends({}, POPUP_CONFIG, {\r\n            onHiding: () => this.scheduler.focus(),\r\n            contentTemplate: () => this._createPopupContent(),\r\n            onShowing: e => this._onShowing(e),\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n        })\r\n    }\r\n    _onShowing(e) {\r\n        this._updateForm();\r\n        var arg = {\r\n            form: this.form.dxForm,\r\n            popup: this.popup,\r\n            appointmentData: this.state.appointment.data,\r\n            cancel: false\r\n        };\r\n        this.scheduler.getAppointmentFormOpening()(arg);\r\n        this.scheduler.processActionResult(arg, canceled => {\r\n            if (canceled) {\r\n                e.cancel = true\r\n            } else {\r\n                this.updatePopupFullScreenMode()\r\n            }\r\n        })\r\n    }\r\n    _createPopupContent() {\r\n        this._createForm();\r\n        return this.form.dxForm.$element()\r\n    }\r\n    _createFormData(rawAppointment) {\r\n        var appointment = this._createAppointmentAdapter(rawAppointment);\r\n        var dataAccessors = this.scheduler.getDataAccessors();\r\n        var resources = this.scheduler.getResources();\r\n        var normalizedResources = getNormalizedResources(rawAppointment, dataAccessors, resources);\r\n        return _extends({}, rawAppointment, normalizedResources, {\r\n            repeat: !!appointment.recurrenceRule\r\n        })\r\n    }\r\n    _createForm() {\r\n        var rawAppointment = this.state.appointment.data;\r\n        var formData = this._createFormData(rawAppointment);\r\n        this.form.create(this.triggerResize.bind(this), this.changeSize.bind(this), formData)\r\n    }\r\n    _isReadOnly(rawAppointment) {\r\n        var appointment = this._createAppointmentAdapter(rawAppointment);\r\n        if (rawAppointment && appointment.disabled) {\r\n            return true\r\n        }\r\n        if (this.state.action === ACTION_TO_APPOINTMENT.CREATE) {\r\n            return false\r\n        }\r\n        return !this.scheduler.getEditingConfig().allowUpdating\r\n    }\r\n    _createAppointmentAdapter(rawAppointment) {\r\n        return createAppointmentAdapter(rawAppointment, this.scheduler.getDataAccessors(), this.scheduler.getTimeZoneCalculator())\r\n    }\r\n    _updateForm() {\r\n        var {\r\n            data: data\r\n        } = this.state.appointment;\r\n        var appointment = this._createAppointmentAdapter(this._createFormData(data));\r\n        if (appointment.startDate) {\r\n            appointment.startDate = appointment.calculateStartDate(\"toAppointment\")\r\n        }\r\n        if (appointment.endDate) {\r\n            appointment.endDate = appointment.calculateEndDate(\"toAppointment\")\r\n        }\r\n        var formData = appointment.source();\r\n        this.form.readOnly = this._isReadOnly(formData);\r\n        this.form.updateFormData(formData)\r\n    }\r\n    triggerResize() {\r\n        if (this.popup) {\r\n            triggerResizeEvent(this.popup.$element())\r\n        }\r\n    }\r\n    changeSize(isRecurrence) {\r\n        if (this.popup) {\r\n            var isFullScreen = isPopupFullScreenNeeded();\r\n            var maxWidth = isFullScreen ? \"100%\" : getMaxWidth(isRecurrence);\r\n            this.popup.option(\"fullScreen\", isFullScreen);\r\n            this.popup.option(\"maxWidth\", maxWidth)\r\n        }\r\n    }\r\n    updatePopupFullScreenMode() {\r\n        if (this.form.dxForm) {\r\n            var formData = this.form.formData;\r\n            var isRecurrence = formData[this.scheduler.getDataAccessors().expr.recurrenceRuleExpr];\r\n            if (this.visible) {\r\n                this.changeSize(isRecurrence)\r\n            }\r\n        }\r\n    }\r\n    saveChangesAsync(isShowLoadPanel) {\r\n        var deferred = new Deferred;\r\n        var validation = this.form.dxForm.validate();\r\n        isShowLoadPanel && this._showLoadPanel();\r\n        when(validation && validation.complete || validation).done(validation => {\r\n            if (validation && !validation.isValid) {\r\n                hideLoading();\r\n                deferred.resolve(false);\r\n                return\r\n            }\r\n            var adapter = this._createAppointmentAdapter(this.form.formData);\r\n            var clonedAdapter = adapter.clone({\r\n                pathTimeZone: \"fromAppointment\"\r\n            });\r\n            this._addMissingDSTTime(adapter, clonedAdapter);\r\n            var appointment = clonedAdapter.source();\r\n            delete appointment.repeat;\r\n            switch (this.state.action) {\r\n                case ACTION_TO_APPOINTMENT.CREATE:\r\n                    this.scheduler.addAppointment(appointment).done(deferred.resolve);\r\n                    break;\r\n                case ACTION_TO_APPOINTMENT.UPDATE:\r\n                    this.scheduler.updateAppointment(this.state.appointment.data, appointment).done(deferred.resolve);\r\n                    break;\r\n                case ACTION_TO_APPOINTMENT.EXCLUDE_FROM_SERIES:\r\n                    this.scheduler.updateAppointment(this.state.excludeInfo.sourceAppointment, this.state.excludeInfo.updatedAppointment);\r\n                    this.scheduler.addAppointment(appointment).done(deferred.resolve)\r\n            }\r\n            deferred.done(() => {\r\n                hideLoading();\r\n                this.state.lastEditData = appointment\r\n            })\r\n        });\r\n        return deferred.promise()\r\n    }\r\n    _doneButtonClickHandler(e) {\r\n        e.cancel = true;\r\n        this.saveEditDataAsync()\r\n    }\r\n    saveEditDataAsync() {\r\n        var deferred = new Deferred;\r\n        if (this._tryLockSaveChanges()) {\r\n            when(this.saveChangesAsync(true)).done(() => {\r\n                if (this.state.lastEditData) {\r\n                    var adapter = this._createAppointmentAdapter(this.state.lastEditData);\r\n                    var {\r\n                        startDate: startDate,\r\n                        endDate: endDate,\r\n                        allDay: allDay\r\n                    } = adapter;\r\n                    var startTime = startDate.getTime();\r\n                    var endTime = endDate.getTime();\r\n                    var inAllDayRow = allDay || endTime - startTime >= DAY_IN_MS;\r\n                    var dataAccessors = this.scheduler.getDataAccessors();\r\n                    var resourceList = this.scheduler.getResources();\r\n                    var normalizedResources = getNormalizedResources(this.state.lastEditData, dataAccessors, resourceList);\r\n                    this.scheduler.updateScrollPosition(startDate, normalizedResources, inAllDayRow);\r\n                    this.state.lastEditData = null\r\n                }\r\n                this._unlockSaveChanges();\r\n                deferred.resolve()\r\n            })\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _showLoadPanel() {\r\n        var container = this.popup.$overlayContent();\r\n        showLoading({\r\n            container: container,\r\n            position: {\r\n                of: container\r\n            },\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n        })\r\n    }\r\n    _tryLockSaveChanges() {\r\n        if (false === this.state.saveChangesLocker) {\r\n            this.state.saveChangesLocker = true;\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    _unlockSaveChanges() {\r\n        this.state.saveChangesLocker = false\r\n    }\r\n    _addMissingDSTTime(formAppointmentAdapter, clonedAppointmentAdapter) {\r\n        var timeZoneCalculator = this.scheduler.getTimeZoneCalculator();\r\n        clonedAppointmentAdapter.startDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.startDate, clonedAppointmentAdapter.startDate);\r\n        if (clonedAppointmentAdapter.endDate) {\r\n            clonedAppointmentAdapter.endDate = this._addMissingDSTShiftToDate(timeZoneCalculator, formAppointmentAdapter.endDate, clonedAppointmentAdapter.endDate)\r\n        }\r\n    }\r\n    _addMissingDSTShiftToDate(timeZoneCalculator, originFormDate, clonedDate) {\r\n        var _timeZoneCalculator$g, _timeZoneCalculator$g2;\r\n        var originTimezoneShift = null === (_timeZoneCalculator$g = timeZoneCalculator.getOffsets(originFormDate)) || void 0 === _timeZoneCalculator$g ? void 0 : _timeZoneCalculator$g.common;\r\n        var clonedTimezoneShift = null === (_timeZoneCalculator$g2 = timeZoneCalculator.getOffsets(clonedDate)) || void 0 === _timeZoneCalculator$g2 ? void 0 : _timeZoneCalculator$g2.common;\r\n        var shiftDifference = originTimezoneShift - clonedTimezoneShift;\r\n        return shiftDifference ? new Date(clonedDate.getTime() + shiftDifference * toMs(\"hour\")) : clonedDate\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}